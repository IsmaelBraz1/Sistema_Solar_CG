{"version":3,"sources":["../node_modules/three/build/three.core.js","../node_modules/three/build/three.module.js","../node_modules/three/examples/jsm/controls/OrbitControls.js","js/scripts.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_readOnlyError","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","RGBDepthPacking","RGDepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","LinearTransfer","SRGBTransfer","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","reject","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","toNormalizedProjectionMatrix","projectionMatrix","toReversedProjectionMatrix","isPerspectiveMatrix","LINEAR_REC709_TO_XYZ","XYZ_TO_LINEAR_REC709","createColorManagement","ColorManagement","enabled","workingColorSpace","spaces","convert","color","sourceColorSpace","targetColorSpace","transfer","SRGBToLinear","primaries","toXYZ","fromXYZ","LinearToSRGB","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","colorSpace","getTransfer","getLuminanceCoefficients","luminanceCoefficients","colorSpaces","assign","_getMatrix","targetMatrix","_getDrawingBufferColorSpace","outputColorSpaceConfig","drawingBufferColorSpace","_getUnpackColorSpace","workingColorSpaceConfig","unpackColorSpace","REC709_PRIMARIES","REC709_LUMINANCE_COEFFICIENTS","D65","_defineProperty","whitePoint","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","dataReady","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_this","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_callSuper","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","renderTarget","isRenderTargetTexture","pmremVersion","_inherits","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","setFromMatrixPosition","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_this2","options","isRenderTarget","depth","scissor","scissorTest","viewport","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","_depthTexture","current","setSize","il","WebGLRenderTarget","_RenderTarget","_this3","isWebGLRenderTarget","DataArrayTexture","_Texture","_this4","isDataArrayTexture","wrapR","layerUpdates","Set","addLayerUpdate","layerIndex","clearLayerUpdates","clear","WebGLArrayRenderTarget","_WebGLRenderTarget","_this5","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this6","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this7","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","x0","r1","r2","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","_EventDispatcher3","_this8","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","removeFromParent","remove","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxInstanceCount","_maxInstanceCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","_v40","_v41","_v42","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","getInterpolatedAttribute","attr","i3","barycoord","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","concat","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_this9","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","onBuild","MeshBasicMaterial","_Material","_this10","isMeshBasicMaterial","_superPropGet","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this11","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_id$1","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this12","isBufferGeometry","indirect","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setIndirect","getIndirect","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this13","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","_BufferGeometry","_this14","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_this15","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this16","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","_Camera","_this17","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_this18","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","needsPMREMUpdate","CubeTexture","_Texture3","_this19","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget3","_this20","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","FogExp2","density","isFogExp2","Fog","isFog","Scene","_Object3D4","_this21","backgroundBlurriness","backgroundIntensity","backgroundRotation","environmentIntensity","environmentRotation","overrideMaterial","__THREE_DEVTOOLS__","CustomEvent","detail","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$7","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","SpriteMaterial","_Material3","_this22","isSpriteMaterial","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D5","_this23","isSprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D6","_this24","_currentLevel","levels","isLOD","autoUpdate","level","addLevel","hysteresis","removeLevel","removedElements","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_vector3","_matrix4","_vertex","_sphere$5","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_this25","bindMatrixInverse","applyBoneTransform","bind","calculateInverses","pose","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","bones","boneInverses","Bone","_Object3D7","_this26","isBone","DataTexture","_Texture4","_this27","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","boneTexture","init","inverse","bone","computeBoneTexture","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute10","_this28","meshPerAttribute","isInstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$4","InstancedMesh","_Mesh2","_this29","morphTexture","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","objectInfluences","dataIndex","raycastTimes","instanceId","setColorAt","fill","setMorphAt","morphInfluencesSum","morphBaseInfluence","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$3","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","ascIdSort","sortOpaque","sortTransparent","MultiDrawRenderList","pool","list","item","_matrix$1","_whiteColor","_frustum","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","copyArrayContents","BatchedMesh","_Mesh3","_this30","customSort","_instanceInfo","_geometryInfo","_availableInstanceIds","_availableGeometryIds","_nextIndexStart","_nextVertexStart","_visibilityChanged","_multiDrawCounts","_multiDrawStarts","_multiDrawCount","_multiDrawInstances","_indirectTexture","_initMatricesTexture","_initIndirectTexture","matricesArray","indirectArray","indirectTexture","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstArray","dstAttribute","indexArray","_validateGeometry","batchGeometry","Boolean","validateInstanceId","instanceInfo","validateGeometryId","geometryId","geometryInfoList","setCustomSort","func","geometryIndex","getBoundingBoxAt","getBoundingSphereAt","addInstance","atCapacity","drawId","sort","shift","addGeometry","reservedVertexCount","reservedIndexCount","geometryInfo","vertexStart","indexStart","indexCount","hasIndex","setGeometryAt","dstIndex","srcIndex","deleteGeometry","deleteInstance","optimize","nextVertexStart","nextIndexStart","elementDelta","copyWithin","iv","setVisibleAt","getVisibleAt","setGeometryIdAt","getGeometryIdAt","getGeometryRangeAt","setInstanceCount","availableInstanceIds","multiDrawCounts","multiDrawStarts","setGeometrySize","validRanges","filter","info","requiredVertexLength","requiredIndexLength","oldGeometry","batchId","_objectSpread","bytesPerElement","BYTES_PER_ELEMENT","multiDrawCount","culled","shadowCamera","depthMaterial","LineBasicMaterial","_Material4","_this31","isLineBasicMaterial","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","_Object3D8","_this32","computeLineDistances","lineDistances","threshold","params","localThreshold","localThresholdSq","isLineSegments","checkIntersection","isLineLoop","thresholdSq","distSq","_start","_end","LineSegments","_Line","_this33","LineLoop","_Line2","_this34","PointsMaterial","_Material5","_this35","isPointsMaterial","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D9","_this36","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","Group","_Object3D10","_this37","isGroup","VideoTexture","_Texture5","video","_this38","isVideoTexture","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture6","_this39","isFramebufferTexture","CompressedTexture","_Texture7","_this40","isCompressedTexture","CompressedArrayTexture","_CompressedTexture","_this41","isCompressedArrayTexture","CompressedCubeTexture","_CompressedTexture2","_this42","isCompressedCubeTexture","CanvasTexture","_Texture8","_this43","isCanvasTexture","DepthTexture","_Texture9","_this44","isDepthTexture","compareFunction","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_this45","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this46","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this47","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","k","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this48","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this49","isCubicBezierCurve3","LineCurve","_Curve5","_this50","isLineCurve","LineCurve3","_Curve6","_this51","isLineCurve3","QuadraticBezierCurve","_Curve7","_this52","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this53","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this54","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_this55","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","resolution","pts","Path","_CurvePath","_this56","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry2","_this57","phiStart","phiLength","initNormals","inverseSegments","vertex","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_this58","capSegments","radialSegments","path","CircleGeometry","_BufferGeometry3","_this59","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry4","_this60","radiusTop","radiusBottom","openEnded","halfHeight","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_this61","PolyhedronGeometry","_BufferGeometry5","_this62","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_this63","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry6","_this64","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","hash","reverseHash","index0","_edgeData$key","Shape","_Path","_this65","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry7","_this66","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","layer","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_this67","OctahedronGeometry","_PolyhedronGeometry3","_this68","PlaneGeometry","_BufferGeometry8","_this69","width_half","height_half","segment_width","segment_height","RingGeometry","_BufferGeometry9","_this70","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_this71","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_this72","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_this73","TorusGeometry","_BufferGeometry12","_this74","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_this75","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_this76","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this77","edges","ol","isUniqueEdge","hash1","hash2","has","Geometries","ShadowMaterial","_Material6","_this78","isShadowMaterial","RawShaderMaterial","_ShaderMaterial","_this79","isRawShaderMaterial","MeshStandardMaterial","_Material7","_this80","isMeshStandardMaterial","MeshPhysicalMaterial","_MeshStandardMaterial","_this81","isMeshPhysicalMaterial","ior","sheenColorMap","sheenRoughnessMap","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","MeshPhongMaterial","_Material8","_this82","isMeshPhongMaterial","MeshToonMaterial","_Material9","_this83","isMeshToonMaterial","MeshNormalMaterial","_Material10","_this84","isMeshNormalMaterial","MeshLambertMaterial","_Material11","_this85","isMeshLambertMaterial","MeshDepthMaterial","_Material12","_this86","isMeshDepthMaterial","depthPacking","MeshDistanceMaterial","_Material13","_this87","isMeshDistanceMaterial","MeshMatcapMaterial","_Material14","_this88","isMeshMatcapMaterial","LineDashedMaterial","_LineBasicMaterial","_this89","isLineDashedMaterial","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","time","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","frame","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","lastIndex","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this90","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","trim","startTime","endTime","nKeys","to","validate","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","morphTargets","animationToMorphTargets","pattern","morphTarget","parts","match","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","response","_this91","_wrapNativeSuper","FileLoader","_Loader","_this92","cached","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","status","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","controller","readData","read","_ref","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this93","intensity","groundColor","decay","penumbra","shadow","HemisphereLight","_Light","skyColor","_this94","isHemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","bias","normalBias","blurSamples","mapSize","mapPass","_frameExtents","_viewportCount","_viewports","getViewportCount","getFrustum","updateMatrices","light","shadowMatrix","getViewport","viewportIndex","getFrameExtents","SpotLightShadow","_LightShadow","_this95","isSpotLightShadow","SpotLight","_Light2","_this96","isSpotLight","power","_projScreenMatrix","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this97","isPointLightShadow","_cubeDirections","_cubeUps","PointLight","_Light3","_this98","isPointLight","OrthographicCamera","_Camera2","_this99","isOrthographicCamera","scaleW","scaleH","DirectionalLightShadow","_LightShadow3","_this100","isDirectionalLightShadow","DirectionalLight","_Light4","_this101","isDirectionalLight","AmbientLight","_Light5","_this102","isAmbientLight","RectAreaLight","_Light6","_this103","isRectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","coefficients","zero","getAt","coeff","getIrradianceAt","sh","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this104","isLightProbe","MaterialLoader","_Loader8","_this105","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","replace","InstancedBufferGeometry","_BufferGeometry16","_this106","isInstancedBufferGeometry","instanceCount","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_asyncToGenerator","_callee","_callee$","_context8","parseAsync","_x5","_x6","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","bindLightTargets","hasImages","_parseAsync","_callee2","_callee2$","_context9","parseImagesAsync","_x7","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee4","_deserializeImage","_deserializedImage2","_callee4$","_context11","_deserializeImage3","_callee3","_url","_callee3$","_context10","_deserializeImage2","_x9","_x8","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_this107","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","setContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","cameraL","cameraR","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","ArrayCamera","_PerspectiveCamera","_this108","isArrayCamera","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this109","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this110","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this111","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","setValue","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","objects","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","mode","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher6","_this112","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","RenderTarget3D","_RenderTarget2","_this113","isRenderTarget3D","RenderTargetArray","_RenderTarget3","_this114","isRenderTargetArray","Uniform","_id","UniformsGroup","_EventDispatcher7","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_this116","isInstancedInterleavedBuffer","GLBufferAttribute","elementSize","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","Matrix2","isMatrix2","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this117","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this120","GridHelper","_LineSegments2","_this121","PolarGridHelper","_LineSegments3","_this122","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","nearZ","setPoint","_box","BoxHelper","_LineSegments5","_this125","Box3Helper","_LineSegments6","_this126","PlaneHelper","_Line3","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this128","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","Controls","_EventDispatcher8","_this130","domElement","state","mouseButtons","touches","ONE","TWO","contain","imageAspect","cover","getByteLength","typeByteLength","getTextureTypeByteLength","TextureUtils","revision","__THREE__","_threeCore","require","asyncGeneratorStep","_next","_throw","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","valueOf","_setPrototypeOf","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","WebGLAttributes","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","updateBuffer","bufferSubData","mergeIndex","previousRange","deleteBuffer","delete","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphinstance_vertex","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowIntensity","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundCube","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMapTransform","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","_e1$1","WebGLBackground","cubemaps","cubeuvmaps","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","getBackground","usePMREM","forceClear","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","setTest","setMask","autoClearColor","autoClearDepth","autoClearStencil","addToRenderList","renderList","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","vao","bindVertexArray","deleteVertexArrayObject","deleteVertexArray","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","enableVertexAttribArray","vertexAttribDivisor","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","materialDefaultAttributeValues","locationSize","ARRAY_BUFFER","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","setMode","drawArrays","renderInstances","primcount","drawArraysInstanced","renderMultiDraw","starts","counts","drawCount","extension","multiDrawArraysWEBGL","elementCount","renderMultiDrawInstances","multiDrawArraysInstancedWEBGL","WebGLCapabilities","utils","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","textureFormatReadable","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","textureTypeReadable","textureType","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxPrecision","logarithmicDepthBuffer","reverseDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","maxSamples","MAX_SAMPLES","isWebGL2","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","_oldXrEnabled","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","currentPMREMVersion","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","drawElementsInstanced","multiDrawElementsWEBGL","multiDrawElementsInstancedWEBGL","WebGLInfo","calls","lines","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","WebGLMorphtargets","capabilities","morphTextures","morph","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphNormal","morphColor","disposeTexture","getUniforms","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","join","_m0","getEncodingComponents","encodingMatrix","getShaderErrors","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","getLuminanceFunction","generateVertexExtensions","chunks","extensionClipCullDistance","extensionMultiDraw","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","shaderType","shaderName","batching","batchingColor","instancing","instancingColor","instancingMorph","useFog","fogExp2","normalMapObjectSpace","normalMapTangentSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","decodeVideoTexture","decodeVideoTextureEmissive","opaque","useDepthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","SUPPORTS_VERTEX_TEXTURES","shaderIDs","getChannel","getParameters","shadows","shaderID","customVertexShaderID","customFragmentShaderID","getReversed","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_DISPERSION","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","supportsVertexTextures","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","UniformsCache","halfWidth","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","shadowUniforms","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","transmissionRenderTarget","WebGLRenderStates","renderStates","renderStateArray","renderState","fragment","WebGLShadowMap","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","_previousType","activeCubeFace","_state","setBlending","setScissorTest","toVSM","fromVSM","shadowFrameExtents","pars","viewportCount","vp","renderObject","VSMPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","kl","shadowMaterial","reversedFuncs","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","reversed","currentDepthMask","currentDepthFunc","currentDepthClear","setReversed","ext","clipControlEXT","LOWER_LEFT_EXT","ZERO_TO_ONE_EXT","NEGATIVE_ONE_TO_ONE_EXT","oldDepth","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","COLOR_ATTACHMENT0","BACK","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","factorToGL","ZERO","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_imageDimensions","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsNewCanvas","maxSize","getDimensions","VideoFrame","textureNeedsGenerateMipmaps","generateMipmap","getTargetType","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RG_INTEGER","RG8UI","RG16UI","RG32UI","RG8I","RG16I","RG32I","RGB_INTEGER","RGB8UI","RGB16UI","RGB32UI","RGB8I","RGB16I","RGB32I","RGBA_INTEGER","RGBA8UI","RGBA16UI","RGBA32UI","RGBA8I","RGBA16I","RGBA32I","RGB","UNSIGNED_INT_5_9_9_9_REV","RGB9_E5","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getInternalDepthFormat","useStencil","depthType","glInternalFormat","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","getMipLevels","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","sourceProperties","workingPrimaries","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","mipmap","useTexStorage","allocateMemory","layerByteLength","layerData","subarray","_iterator3","_step3","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__renderTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","glAttachmentType","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","isUseMultisampledRTT","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__boundDepthTexture","__depthDisposeCallback","disposeEvent","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","targetType","invalidationArrayRead","invalidationArrayDraw","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","depthStyle","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","invalidateFramebuffer","__useRenderToTexture","naturalWidth","naturalHeight","displayWidth","displayHeight","WebGLUtils","ALPHA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","jointRadius","indexTip","thumbTip","distanceToPinch","handedness","gripSpace","getPose","targetRaySpace","jointName","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","getMesh","cameraXR","depthColor","depthWidth","depthHeight","getDepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","useLayers","layerInit","depthFormat","glDepthFormat","projectionlayerInit","xrCompatible","makeXRCompatible","getPixelRatio","enabledFeatures","includes","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","scaleFactor","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","ignoreDepthValues","setFoveation","requestReferenceSpace","_x2","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","getDepthSensingMesh","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","getDepthInformation","isValid","detectedPlanes","_e1","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","refreshMaterialUniforms","pixelRatio","refreshUniformsCommon","refreshUniformsToon","refreshUniformsPhong","refreshUniformsStandard","refreshUniformsPhysical","refreshUniformsMatcap","refreshUniformsDistance","refreshUniformsLine","refreshUniformsDash","refreshUniformsPoints","refreshUniformsSprites","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexString","cachedObject","chunkSize","chunkOffset","chunkPadding","boundary","chunkStart","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","_parameters$reverseDe","isWebGLRenderer","_alpha","WebGLRenderingContext","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","_outputColorSpace","toneMappingExposure","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","transmissionResolutionScale","_currentProjectionMatrix","_vector4","_emptyScene","_renderBackground","getTargetPixelRatio","contextName","contextAttributes","onContextLost","onContextRestore","onContextCreationError","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","depthSensingMesh","projectObject","opaqueObjects","transmissiveObjects","camera2","renderTransmissionPass","renderScene","transparentObjects","renderObjects","activeViewport","currentToneMapping","currentCameraViewport","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","_scratchFrameBuffer","useDefaultFramebuffer","framebufferBound","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","readPixels","readRenderTargetPixelsAsync","_ref2","glBuffer","currFramebuffer","PIXEL_PACK_BUFFER","STREAM_READ","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","getBufferSubData","deleteSync","_x3","_x4","copyFramebufferToTexture","levelScale","copyTexSubImage2D","_srcFramebuffer","_dstFramebuffer","copyTextureToTexture","srcTexture","dstTexture","srcRegion","dstPosition","srcLevel","dstLevel","dstX","dstY","dstZ","glTarget","currentUnpackRowLen","UNPACK_ROW_LENGTH","currentUnpackImageHeight","UNPACK_IMAGE_HEIGHT","currentUnpackSkipPixels","UNPACK_SKIP_PIXELS","currentUnpackSkipRows","UNPACK_SKIP_ROWS","currentUnpackSkipImages","UNPACK_SKIP_IMAGES","isSrc3D","isDst3D","srcTextureProperties","dstTextureProperties","srcRenderTargetProperties","dstRenderTargetProperties","copyTexSubImage3D","copyTextureToTexture3D","initRenderTarget","resetState","drawingBufferColorspace","_three","_changeEvent","_startEvent","_endEvent","_plane","_TILT_LIMIT","_v","_twoPI","_STATE","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","_EPS","OrbitControls","_Controls","cursor","minDistance","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","keyRotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","UP","BOTTOM","target0","position0","zoom0","_domElementKeyEvents","_lastPosition","_lastQuaternion","_lastTargetPosition","_quat","_quatInverse","_spherical","_sphericalDelta","_panOffset","_rotateStart","_rotateEnd","_rotateDelta","_panStart","_panEnd","_panDelta","_dollyStart","_dollyEnd","_dollyDelta","_dollyDirection","_mouse","_performCursorZoom","_pointers","_pointerPositions","_controlActive","_onPointerMove","onPointerMove","_onPointerDown","onPointerDown","_onPointerUp","onPointerUp","_onContextMenu","onContextMenu","_onMouseWheel","onMouseWheel","_onKeyDown","onKeyDown","_onTouchStart","onTouchStart","_onTouchMove","onTouchMove","_onMouseDown","onMouseDown","_onMouseMove","onMouseMove","_interceptControlDown","interceptControlDown","_interceptControlUp","interceptControlUp","passive","getRootNode","capture","touchAction","stopListenToKeyEvents","getPolarAngle","getAzimuthalAngle","getDistance","listenToKeyEvents","saveState","_rotateLeft","_getAutoRotationAngle","zoomChanged","_clampDistance","prevRadius","newRadius","radiusDelta","mouseBefore","prevZoom","mouseAfter","_getZoomScale","normalizedDelta","_rotateUp","_panLeft","objectMatrix","_panUp","_pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","_dollyOut","dollyScale","_dollyIn","_updateZoomParameters","rect","getBoundingClientRect","dist","_handleMouseDownRotate","clientX","clientY","_handleMouseDownDolly","_handleMouseDownPan","_handleMouseMoveRotate","_handleMouseMoveDolly","_handleMouseMovePan","_handleMouseWheel","_handleKeyDown","ctrlKey","metaKey","shiftKey","_handleTouchStartRotate","pageX","pageY","_getSecondPointerPosition","_handleTouchStartPan","_handleTouchStartDolly","_handleTouchStartDollyPan","_handleTouchStartDollyRotate","_handleTouchMoveRotate","_handleTouchMovePan","_handleTouchMoveDolly","centerX","centerY","_handleTouchMoveDollyPan","_handleTouchMoveDollyRotate","_addPointer","pointerId","_removePointer","_isTrackingPointer","_trackPointer","_customWheelEvent","deltaMode","newEvent","setPointerCapture","pointerType","releasePointerCapture","mouseAction","button","THREE","_interopRequireWildcard","_OrbitControls","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","innerWidth","innerHeight","appendChild","orbit","axeHelper","criarast","raio","cor","posicaox","velocidade","orbita","geoastro","matastro","astro","rotationSpeed","orbitRadius","movimento","Date","copia","objec","solGeometry","solMaterial","sol","luz","linhalu","copsol","planeta1","coppla1","lua1","lua2","lua3","planeta2","astros","movimentototal","animate"],"mappings":"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iDMuuB,QFjDN,GAAG,GEiDU,CAAC,CFjDN,AEiDO;AF/C7B,AG2F+C,CAAC,EAAE,CH3F5CruB,AG2F6C,EAAE,GH3F1C,GAAAD,CG2FiD,EAAE,CAAC,EAAE6zL,CH3FtD,CAAA5zL,IG2F4D,CH3F5D,CG2F8D,EH3F3D,CG2F8D,CAAC;AAC7E,EH5FgBC,EEiDd,AC2CI6zL,EH5Fc,EAAE,CAAC,EG4FV,GAAGT,KAAK,CAACQ,QAAQ,CAAC;AAC/BD,EH7FyB1zL,EEkDvBmiB,EC2CI,CAACxO,CH7FwB,CEkD7B,CFlD+B,AEkD1Bk0K,AC2CG,CH7FwB,AG6FvB+L,KD3CE,EC2CK,CD3CF,AC2CG,ID3CCzlK,cAAO,CAAC,CAAC;AC4C7B,EH9FoCluB,EG8F9B4zL,GH9FmC,CG8F/B,CH9FiC,CAAC,CG8F/BvB,QAAQ,CAAC,GAAG,EAAE;EH9FmBpyL,AG8FlB0d,ED1C1B,GC0C+B,CH9FmB,CG8FjB,CH9FmB,CAAC;AG8FZ,CAAC,CH9Fazd,CG8FX,CDzC5CgiB,ACyC6C,EAAE,CH9Fa,EAAE,AEqD9D,CFrD+D,AEqD1D2lK,CCyC+C,EAAE,CAAC,EAAE8L,KDzCzC,ECyCgD,CDzC7C,CAAC,ACyC8C,KAAK,CAAC;AAC1E,EH/FmExzL,EEsDjE+hB,ACyCI2xK,CH/FgE,EAAE,CG+F9D,CDzCR,CAAKhnF,CCyCMwlF,QAAQ,CAAC,CDzCJ,ECyCO,CDzCJhhK,CCyCK,ODzCG;AFtD6C,CAAC,CG+FhD1T,KAAK,EAAE;AH9FlC,AG8F0C,CAAC,EAAE,CH9FvCvd,AEuDJ,ACuC4C,EAAE,GH9FrC,EG8F0C,CH9F1CR,CG8F4C,CAAC,EAAE+zL,GH9F/C,CAAAvzL,GG8FsD,EH9FtD,AG8FwD,GH9FrD,EG8F0D,CAAC;AACzE,EH/FgBH,EEwDdiiB,ACuCI4xK,IH/FgB,AG+FZ,CDvCR,CFxDsB,AEwDjBhM,CFxDkB,AG+FZuK,MDvCC,ECuCO,CDvCJ,ACuCK,CDvCJ,ECuCO,EAAE;EH/FAlyL,AG+FCwd,EDtC1BuE,CFzD4B,EAAE,AG+FC,CH/FA,CEyD/B,ACsCiC,CDtC5B6lK,OAAO,GAAG12J,QAAQ;ACsCkB,CAAC,CH/FThxB,CG+FW,CAAC,EAAE,KH/FL,CG+FW,CH/FT,CAAC,AG+FU,CAAC,EAAEszL,OAAO,EAAE,KAAK,CAAC;AAC3E,EHhGiDrzL,EE2D/C,ACqCIyzL,QAAQ,EHhG+C,CGgG5C1B,CHhG8C,OGgGtC,CAAC,GAAG,EAAE;AHhGkC,CAAC,CGgGlC10K,EDpC9BuE,GCoCmC,EDpCnC,ACoCqC,CDpChC8lK,eAAe,GAAG,CAAC;AF3D1B,AG+F+C,CAAC,EAAE,CH/F5CznL,AE4DJ2hB,ACmCiD,EAAE,GDnCnD,CAAK+lK,CCmCmD,EAAE,CAAC,EH/F3C,AG+F6CwL,GH/F7C7zL,GG+FmD,EAAE,CDnCjD,CF5DJ,CAAAW,AG+FwD,CDnCjD8wB,ACmCkD,QDnC1C,GF5Df,GAAG,CAAC;AACtB,AGiGA,IHjGM7wB,AGiGFwzL,MAAM,GAAG,CAACN,EHjGI,GAAA9zL,GGiGI,EAAE+zL,EHjGN,CAAAnzL,IGiGa,EAAEozL,IAAI,EHjGnB,AGiGqBC,GHjGlB,CAAC,AGiGqB,EAAEC,IAAI,EAAEC,QAAQ,CAAC;AHhG5D,AGmGA,IHnGMtzL,AE4DJ,KCuCOwzL,QHnGU,GAAAr0L,GGmGIq0L,CAAA,EAAE,CHnGN,CAAAxzL,aAAA,GAAG,CAAC;AACvB,EGoGI,EHpGEC,AE4DJ,GCwCM,IAAIvH,CAAC,GAAG,CAAC,EAAEA,CAAC,EHpGG,CGoGA66L,EHpGAp0L,IGoGM,CAACpC,EHpGP,CAAAkD,GGoGa,EAAEvH,CAAC,EAAE,EAAC,OHpGnB,GAAG,CAAC;AAC3B,IAAMwH,AE4DJuhB,ACwCM8wK,KDxCN,CAAK9K,GCwCU,CAAC8L,IHpGE,EGoGI,CHpGJp0L,AGoGKzG,CAAC,CDxCN,ACwCO,CAAC,EDxCL,CAAC,CF5DJ,AE4DK,CF5DLwH,AE4DM,cF5DN,GAAG,CAAC;AACxB,EGoGI,EHpGEC,AE4DJshB,KAAA,CAAKimK,MF5DW,GAAAvoL,IE4DE,GF5DF,AE4DKkO,CF5DLlN,GE4DS,CAACmN,EAAE,CAAC,CAAC,IF5Dd,GAAG,CAAC;AACtB,AGoGA,IHpGMlN,gBAAgB,GAAAjB,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PEz4K,GAAG,GAAGF,EAAE,CAAE,CAAC,AEuPA,CFvPE,AEuPA7K,KAAM,CAAC;EAE3B,MFzPsBgL,EEyPb,CFzPgB,GAAGH,AEyPf,CAACozG,CFzPgB,CAAE,CAAC,CAAE,CEyPhB;IAElB,IF3PoChzG,CE2P/B2uK,EF3PkC,GAAG/uK,CE2P/B,CF3PiC,AE2PhCgvK,CF3PkC,CAAC,CAAE,SE2PzB;MF1PxB,AE4PC,IF5PK3uK,AE4PA,GF5PG,CE4PC,CAACgwK,CF5PCrwK,EAAE,CAAE,CAAC,CAAE,ME4PI,KAAK,KAAK,EAAG;MAEnC,EF9PoBM,EE8PhB,CF9PmB,AE8PlB03K,GF9PqBh4K,EAAE,CAAE,CAAC,CAAE,cE8PN,CAAE7K,KAAM,CAAC;MAEpC,EFhQmCoL,EEgQ/B,CFhQkC,AEgQjCsR,GFhQoC7R,EAAE,CAAE,AEgQlC,CFhQmC,AEgQlC,CFhQoC,AEgQnC;MF/Pd,AEiQC,IFjQKQ,GAAG,GAAGR,EAAE,CAAE,CAAC,CAAE;IEmQnB,IFnQqBS,CEmQhBsuK,EFnQmB,GAAG/uK,CEmQhB,CFnQkB,AEmQjBivK,CFnQmB,CAAC,CAAE,MEmQb;MAEpB,EFrQmCvuK,EEqQ9B,CFrQiC,GAAGV,AEqQhC,CAACwwK,CFrQiC,CAAE,CAAC,CAAE,KEqQ7B,KAAK,KAAK,EAAG;MFnQjC,AEqQC,IFrQK7vK,AEqQD,CAACs3K,EFrQG,GAAGh4K,EAAE,CAAE,CAAC,CAAE,SEqQM,CAAE9K,KAAM,CAAC;MAEjC,EFvQoByL,EEuQhB,CFvQmB,AEuQlBiR,GFvQqB5R,EAAE,CAAE,AEuQnB,CFvQoB,AEuQnB,CFvQqB,AEuQpB;MAEb,EFzQmCY,GAAG,GAAGZ,EAAE,CAAE,CAAC,CAAE;IE2QjD,EF1QA,GE0QK8uK,CF1QCjuK,GAAG,EE0QE,CF1QCb,AE0QAivK,EF1QE,CAAE,CAAC,CAAE,UE0QQ;MAE1B,EF5QoBnuK,EE4Qf,CF5QkB,GAAGd,AE4QjB,CAACkwK,CF5QkB,CAAE,CAAC,CAAE,ME4Qb,KAAK,KAAK,IAAI,IAAI,CAACK,SAAS,KAAK,KAAK,EAAG;MAE7D,EF9QmCxvK,EE8Q/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jjG7CtV,EDijG+CwsB,ECjjG3C,GDijGgD,ACjjG7CxK,EAAE,CDijG2C1M,ACjjG1Cg/G,KAAK,IDijGqC,CAAAnxH,MAAA,QAAAmS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;IAAAzQ,AC/iGzD,CAAC,MAAM,IAAKwO,ID+iG6C,CC/iGxC,MD+iGwCua,MC/iG5B3V,UD+iG4B,CC/iGjB,EAAG;IDijG3C6V,EC/iGC9tB,ID+iGD,AC/iGK,GD+iGLwoB,AC/iGQxG,EAAE,CAACuyG,OD+iGX,KC/iGuB,ED+iGvB3mG,gBAAA,GAAO,IAAI;IAEXE,AC/iGA,CAAC,KD+iGD,CAAKC,AC/iGE,IAAK1a,KAAK,SD+iGM,GAAG,AC/iGG+E,ID+iGC,MC/iGS,EAAG;IDijG1C0V,EC/iGC9tB,ID+iGD,AC/iGK,CD+iGAwlB,EC/iGGxD,EAAE,CD+iGA,AC/iGCwyG,GD+iGE,AC/iGC;IAEd,CAAC,CD6iGc/tG,IAAI,CC7iGZ,CD6iGQA,GC7iGHpT,CD6iGO,IC7iGF,YAAYiF,SAAS,EAAG;MD6iGpBsN,AC3iGpB5lB,IAAI,CD2iGqB,EAAL4lB,AC3iGb5D,EAAE,CAACyyG,ED2iGe,EC3iGX;IAEf,CAAC,CDyiG2B5uG,KCziGrB,CDyiG2B,EAANA,CCziGhBxS,KDyiGsB,ACziGjB,YAAY8E,UAAU,EAAG;MDyiGNqU,ACviGnCxsB,IAAI,CDuiGoC,EAALwsB,ACviG5BxK,EAAE,CAAC0yG,aAAa;IDuiGkB,ACriG1C,CDqiG2C,ACriG1C,MAAM,IAAKrhH,KAAK,YAAY6N,iBAAiB,EAAG;IDuiGjD4M,ECriGC9tB,IDqiGD,ACriGK,CDqiGAmoB,ECriGGnG,EAAE,CAAC0yG,IDqiGG,GAAGrqH,MCriGO,ODqiGM;IAC9ByjB,ACpiGA,CAAC,KDoiGD,CAAK1F,ACpiGE,SDoiGO,GAAG/d,aAAa;IAE9ByjB,ECpiGC,IDoiGD,CAAKE,CCpiGE,IDoiGG,ACpiGCtsB,GDoiGEyI,ECpiGG,CAAE,gBDoiGc,yCCpiG2C,GAAGkJ,KAAM,CAAC;IDsiGrFya,ACpiGA,MDoiGA,CAAK9E,eAAe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,ACxjGe,CDwjGd,CCxjGgB,EDwjGbA,CAAC,UCxjG0B,IAAI5N,kBAAO,CAAC;IAAE,ED0jGlD,OAAO,IAAI;ECxjGZ,CAAC,CD0jGD;EAAC,ACxjGD6+C,MAAM,EAAE;IDwjGPv2D,ACtjGAk7H,GDsjGA,ICtjGO,EAAE;IDsjGTrhI,ECtjGWA,GDsjGX,EAED,ACxjGiB,EAAE,ODwjGnBoa,MCxjGiC,IAAIm5B,EDwjGzBn5B,CAAEjG,KAAK,EAAEnU,KAAK,CCxjGgB,CDwjGb,ACxjGe,QAAS;IAAE,CAAC,CD0jGvD,QAASmU,KAAK;ICzjGdiiC,ID2jGC,GC3jGM,ED2jGD,AC3jGG,CD2jGF;MC3jGIp2C,ID2jGF,CC3jGO,EAAE,CD2jGL,CAAC6V,CAAC,GAAG7V,KAAK;IC3jGD,CAAC,KD2jGE;IC1jGzB0d,ID2jGC,EC3jGK,EAAE,CD2jGF,CAAC;MC3jGG1d,ID2jGD,CC3jGM,EAAE,CD2jGJ,CAAC0B,CAAC,GAAG1B,KAAK,EC3jGQ,IAAI6Z,kBAAO,CAAE,GAAG,EAAE,GAAI;IAAE,CAAC,KD2jG/B;IC1jGzB2H,ID2jGC,IC3jGO,CD2jGF,CAAC,AC3jGG;MAAExhB,ID2jGH,CC3jGQ,EAAE,CD2jGN,CAACyrB,CAAC,GAAGzrB,KAAK;IC3jGA,CAAC,KD2jGC;IC1jGzBwtC,GAAG,CD2jGF,CC3jGI;MAAExtC,ID2jGG,CC3jGE,EAAE,GD2jGE,IAAI6C,KAAK,CAAE,yBAAyB,GAAGsR,KAAM,CAAC;IC3jG3C,CAAC,CD6jGpB;IC5jGAmtH,ED8jGA,OAAO,GC9jGK,CD8jGD,CC9jGG;IDgkGf,EChkGiBthI,KAAK,EAAE,aAAc,IAAI6d,kBAAO,CAAC;EDgkGjD,EChkGmD,CAAC;IDgkGpD1X,AC/jGAq0C,GD+jGA,KC/jGQ,EAAE;ID+jGVx6C,EC/jGYA,GD+jGZ,EAED,ACjkGkB,EAAE,ODikGpBqa,YAAYA,CAAElG,KAAK,EAAG;ICjkGG,CAAC,CDmkGzB,QAASA,KAAK;IClkGdotH,IDokGC,KAAK,CAAC,OCpkGU,EAAE;MAAEvhI,IDokGZ,CCpkGiB,EAAE,IDokGZ,IAAI,C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C;IDqyEzD,ACnyEA;EDmyEC,ACnyEA;IDmyEA/kB,ACnyEAA,GDmyEA,ACnyEA;IDmyEAnG,ACnyEAA,KDmyEA,ACnyEA,EDqyED,ACnyEA,SDmyEA6qB,ACnyEAu3H,WAAWA,CDmyECv3H,ACnyEC1H,CDmyED,CCnyEG,CDmyEA,CCnyEE6V,MAAM,EAAEt0B,IAAI,EAAG;MDqyE/B,ACnyEA,IDmyEI,ACnyEE1C,CDmyEDkgB,ACnyEE,GAAG8W,GDmyEC,CAACuJ,ECnyEI,CAAE79B,IDmyEC,ACnyEG,CDmyED,ACnyEG,IDmyEC,CAAC6/B,QAAQ,EAAE,IAAI,CAAC1T,UAAU,EAAE,IAAI,CAAClP,KAAM,CAAC;MAEjE,ACnyEA,IDmyEI,ACnyEC3f,CDmyEA+mC,ACnyEC,KAAKl1B,SAAS,EAAG,IAAI,CAAC8iG,CDmyED,GAAG,IAAI,ACnyEE,CAAExzF,EAAE,EAAEze,IAAI,EAAE1C,CAAE,CAAC;IDqyEpD,ACnyEA;EDmyEC,ACnyEA;IDmyEAmE,ACnyEAA,GDmyEA,ACnyEA;IDmyEAnG,ACnyEAA,KDmyEA,ACnyEA,EDqyED,ACnyEA,SDmyEAgsC,ACnyEOq2G,MAAMA,CAAEl/H,EAAE,EAAEk+H,GAAG,EAAEp/I,CDmyEP+pC,CAAEC,ICnyEW,CDmyEN,CCnyEQ/gB,CDmyEL,OCnyEa,EAAG;MDqyE1C,ACnyEA,IDmyEK,CCnyEC,GDmyEG,CAAChB,ACnyEAjqB,CAAC,GAAG,CAAC,EAAEL,CAAC,GAAGyhJ,GAAG,CAAC/8I,CDmyEC,EAAG,GCnyEE,CDmyEE,CAACumB,ACnyED5qB,CAAC,KAAKL,CAAC,EAAE,EAAGK,CDmyEC,ACnyEA,CDmyEC,CAAC,ACnyEC;MDqyEjD,ECnyEC,EDmyEI,ECnyEEM,CAAC,CDmyEC,CAACwoC,CCnyECs4G,GAAG,CAAEphJ,CAAC,CAAE,eDmyEa,IAAIgsC,KAAK,EAAG;QAE3C,ECpyECjqC,CAAC,CDoyEG,ECpyEAC,EDoyEI,CAAC4mC,GCpyEC,CAAEtoC,CAAC,CAAC4qC,EAAE,CAAE,YDoyEY,KAAK,IAAI,EAAG;QClyE3C,EDoyEC,ECpyEInp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AK;EC7nDpE,ED+nDA,EC/nDMgxG,sBAAsB,GAAGiL,YAAY,CAACjL,sBAAsB;ED+nDjE,AC9nDD,IAAM2f,wBAAwB,GAAG1U,YAAY,CAAChK,cAAc;AD8nD3D,EC5nDD,IAAIh4F,SAAS,GAAGgiG,YAAY,CAAChiG,SAAS;AD8zDvC,EC5zDC,ED4zDK5E,EC5zDCu7G,SAAS,GD4zDI,AC5zDD,GD4zDI;EAAE,EC3zDvBnjE,SD2zDkC,EAAE,MC3zDnB,ED2zD2B,AC3zDzB,OAAO;ED2zDoB,EC1zD9CK,YD0zD4D,EAAE,MC1zD1C,ED0zDkD,AC1zDhD,cAAc;ED0zDoC,ECzzDxEb,IDyzD8E,EAAE,QAAQ,ICzzDtE,EAAE,QAAQ;EDyzD8D,ECxzD1FztC,UDwzDsG,EAAE,KCxzDvF,EAAE,CDwzD6F,MCxzDtF;EDwzDwF,ECvzDlH6tC,KDuzDyH,EAAE,QAAQ,ICvzDhH,EAAE,SAAS;EDwzD/B,ECvzDCZ,KDuzDM,EAAE,QAAQ,ECvzDC,EAAE,OAAO;EDuzDR,ECtzDlBI,MDszD0B,EAAE,QAAQ,ACtzDpB,EAAE,MAAM;EDszDc,ECrzDtCrB,KDqzD6C,EAAE,QAAQ,KCrzDnC,EAAE,UAAU;EDqzDyB,ECpzDzDI,cDozDyE,EAAE,ICpzDvD,EAAE,EDozD6D,QCpzDnD;EDozDqD,ECnzDrFsC,IDmzD2F,EAAE,QAAQ,ICnzDnF,EAAE,QAAQ;EDmzD2E,EClzDvGnoB,UDkzDmH,EAAE,KClzDpG,EAAE,CDkzD0G,MClzDnG;EDmzD3B,EClzDCuoB,KDkzDM,EAAE,QAAQ,GClzDE,EAAE,QAAQ;EDkzDV,ECjzDlBpmB,SDizD6B,EAAE,GCjzDjB,EAAE,GDizDuB,KCjzDf;EDizDiB,EChzDzC8iB,SDgzDoD,EAAE,GChzDxC,EAAE,GDgzD8C,KChzDtC;EDgzDwC,EC/yDhEl2B,UD+yD4E,EAAE,EC/yDhE,EAAE,ID+yDsE;EAAE,AC9yDzF,CAAC,UD8yDmG,EAAE,QAAQ;EAAE,AC5yDhH,OD4yDuH,EAAE,AC5yDhH+7F,QD4yDwH,EC5yD9GA,CAAE3uJ,KAAK,EAAG;ED6yD7B,EC3yDCwuJ,cD2yDe,CC3yDA,CD2yDE,AC3yDDh0I,GAAG,CAAExa,ID2yDI,CC3yDE,CAAC;ED2yDD,ECzyD3B,IAAKA,IDyyDgC,CCzyD3B,CDyyD6B,ICzyDxB,CAAC,EAAG,CDyyD4B,MCzyDrB,IAAI;EDyyDmB,ECvyDjD,ODuyD0D,EAAE,GCvyD5Dk1C,KDuyDoE,CCvyDpE,CAAal1C,KAAK;EDuyDoD,ACryDvE,MDqyD6E,EAAE,QAAQ;EAAE,ACnyDzF,SAAS4uJ,CDmyD0F,EAAE,QAAQ,ECnyDvFA,CAAE9+G,QAAQ,EAAEub,MAAM,EAAEwjG,OAAO,EAAEp/F,KAAK,EAAEz2B,MAAM,EAAG;EDmyD4C,ECjyD9G,IAAMkkB,GAAG,CDiyD+G,EAAE,ACjyD9GuS,KAAK,CAACvS,EDiyDgH,CCjyD7G;EDkyDtB,ECjyDC,IAAMtjB,QAAQ,CDiyDA,EAAE,ACjyDCZ,MAAM,CAACY,CDiyDA,OCjyDQ;EDiyDN,EChyD1B,IAAMyV,IDgyD8B,EAAE,KChyDrB,GDgyD6B,AChyD1BS,QAAQ,CAAC25C,sBAAsB,GAAGh6B,KAAK,CAACpgB,WAAW,GAAG,IAAI;EDgyD9B,EC9xDhD,IAAMsM,KD8xDqD,CC9xD/C,CD8xDiD,EC9xD9C,CAAE7L,KD8xDoD,GC9xD5C,CAAC25C,sBAAsB,GAAG89C,UAAU,GAAGD,QAAQ,EAAGvtH,GAAG,CAAE+1B,QAAQ,CAAC6L,MAAM,IAAItM,WAAY,CAAC;ED8xDzC,EC7xDvE,IAAMk4G,ID6xD2E,EAAE,QAAQ,IC7xDnE,GAAK,CAAC,CAAE5rG,MAAM,IAAQA,MAAM,CAACzyB,OAAO,KAAK9d,kCAAyB,GAAGuwC,MAAM,CAACh1B,KAAK,CAACK,MAAM,GAAG,IAAI;ED6xD1B,EC3xD7F,IAAM8nI,KD2xDkG,EAAE,CC3xD5F,GAAGJ,ID2xDiG,KC3xDxF,CAAE5+G,QAAQ,CAAC3uC,IAAI,CAAE;ED2xDyE,aAAa,EAAE,QAAQ;EAC5I,EC1xDC,cD0xDe,EAAE,QAAQ;EAAE,ECzxD3B,UDyxDuC,EAAE,QAAQ;EAAE,YAAY,EAAE,QAAQ;EAAE,ECvxD3E,IAAK2uC,GDuxD+E,EAAE,GCvxDzE,CAACiI,IDuxDgF,KCvxDvE,KAAK,IAAI,EAAG;EDuxD6D,ICrxD/FA,QDqxD2G,CCrxDlG,CDqxDoG,ECrxDjGgiG,MDqxDyG,MCrxD7F,CAACxL,eAAe,CAAEz+F,QAAQ,CAACiI,SAAU,CAAC;EDqxDyD,ICnxDvH,IAAKA,MDmxDgI,EAAE,CCnxDzH,KAAKjI,EDmxD4H,MCnxDpH,CAACiI,SAAS,EAAG;EDoxD1C,MClxDG/+B,OAAO,CAACC,CDkxDI,EAAE,CClxDF,CAAE,MDkxDQ,6BClxD2B,EAAE62B,QAAQ,CAACiI,SAAS,EAAE,sBAAsB,EAAEA,SAAS,EAAE,UAAW,CAAC;EDkxD9F,IChxDzB,WDgxDwC,EAAE,QAAQ;EAAE,EC9wDrD,aD8wDoE,EAAE,QAAQ;EAAE,eAAe,EAAE,QAAQ;EAAE,EC5wD3G,UD4wDuH,EAAE,QAAQ;EAClI,UAAU,EAAE,QAAQ;EAAE,EC3wDrB,IAAMqL,OD2wD4B,EAAE,KC3wDhB,GD2wDwB,AC3wDrBxpB,QAAQ,CAACqoB,eAAe,CAAC1d,QAAQ,IAAI3K,QAAQ,CAACqoB,eAAe,CAAC9qB,MAAM,IAAIyC,QAAQ,CAACqoB,eAAe,CAACx9B,KAAK;ED2wD/E,EC1wD9C,IAAMy1H,GD0wDiD,EAAE,QAAQ,IC1wD1C,GAAK92F,cAAc,KAAKvvC,SAAS,GAAKuvC,cAAc,CAAC9+C,MAAM,GAAG,CAAC;ED0wDnB,ECxwDnE,IAAIumJ,GDwwDwE,EAAE,QAAQ,KCxwDhE,GAAG,CAAC;EDwwD8D,ECtwDxF,IAAKjxH,MDswD+F,EAAE,ACtwDzF,CAACqoB,ODswDgG,QCtwDjF,CAAC1d,QAAQ,KAAK1wB,SAAS,EAAGg3I,kBAAkB,GAAG,CAAC;EDswDmC,ECrwDhH,IAAKjxH,KDqwDsH,EAAE,CCrwDhH,CAACqoB,MDqwDuH,SCrwDxG,CAAC9qB,MAAM,KAAKtjB,SAAS,EAAGg3I,kBAAkB,GAAG,CAAC;EDswD5E,ECrwDC,IAAKjxH,ODqwDO,CCrwDC,CDqwDC,ACrwDAqoB,QDqwDQ,OCrwDO,CAACx9B,KAAK,KAAK5Q,SAAS,EAAGg3I,kBAAkB,GAAG,CAAC;EDqwDlD,aAAa,EAAE,QAAQ;EAAE,ECnwDjD,ODmwD0D,EAAE,QAAQ;EAAE,WAAW,EAAE,QAAQ;EAAE,ECjwD7F,IAAI1/F,MDiwDqG,EAAE,ICjwD3F,EAAEC,EDiwDiG,YCjwDnF;EDiwDqF,EChwDrH,IDgwD2H,AChwDvH2jG,EDgwDyH,QAAQ,UChwD7G,EAAEC,sBAAsB;EDiwDjD,EC/vDC,IAAKF,KD+vDK,EAAE,CC/vDC,EAAG,KD+vDI;EAAE,IC7vDrB,ED6vD2B,EAAE,AC7vDvBj+F,MAAM,ED6vDyB,CC7vDtBk0E,SAAS,CAAE+pB,QAAQ,CAAE;ED6vDG,IC3vDvC3jG,GD2vD8C,EAAE,OC3vDpC,CD2vD4C,EC3vDzC0F,MAAM,CAAC1F,YAAY;ED2vDwB,IC1vD1DC,SD0vDuE,EAAE,GC1vD3D,GAAGyF,ED0vDgE,IC1vD1D,CAACzF,cAAc;ED0vD6C,ECxvDpF,CAAC,GDwvDyF,EAAE,CCxvDrF,ODwvD6F;EAAE,ICtvDrGD,MDsvD+G,EAAE,ICtvDrG,GAAGrb,CDsvD0G,OCtvDlG,CAACqb,YAAY;EDsvDuF,ICrvD3HC,KDqvDoI,EAAE,OCrvDxH,CDqvDgI,ECrvD7Htb,QAAQ,CAACsb,cAAc;EDsvD1C,ICpvDEmjG,ODovDS,EAAE,KCpvDG,CAACv9H,EDovDI,ICpvDE,CAAE8e,QAAS,CAAC;EDovDZ,IClvDrBi/G,IDkvD6B,EAAE,QAAQ,MClvDnB,GAAGR,cAAc,CAACN,iBAAiB,CAAEn+G,QAAS,CAAC;EDkvD1B,ICjvDzCk/G,GDivDgD,EAAE,QAAQ,SCjvDpC,GAAGT,cAAc,CAACL,mBAAmB,CAAEp+G,QAAS,CAAC;EDivDX,EC/uD7D,KD+uDoE,EAAE,QAAQ;EAAE,EC7uDhF,IAAMua,ID6uDoF,EAAE,QAAQ,KC7uD3E,GAAGD,QAAQ,CAACE,eAAe,CAAC,CAAC;ED6uDgD,EC5uDtG,IAAMykF,SD4uD+G,EAAE,OC5uD/F,CD4uDuG,EC5uDpG3kF,QAAQ,CAACmoE,KAAK,CAACyC,OAAO,CAACrnG,KAAK,CAACshI,WAAW,CAAC,CAAC;ED4uD4D,EC1uDjI,IAAMC,KD0uDsI,EAAE,QAAQ,CC1uDhI,GAAGl2H,MAAM,CAACe,eAAe,KAAK,IAAI;ED2uDzD,EC1uDC,IAAMo1H,QD0uDO,EAAE,IC1uDK,GAAGn2H,CD0uDA,KC1uDM,CAAC2T,aAAa,KAAK,IAAI;ED0uD3B,ECxuDzB,IAAMyiH,KDwuD8B,EAAE,ACxuDzB,GAAG,CAAC,CAAEt/G,GDwuD2B,KCxuDnB,CAACtC,GAAG;EDwuDiB,ECvuDhD,IAAM6hH,MDuuDsD,EAAE,ECvuD9C,GAAG,CAAC,CAAEv/G,CDuuDgD,OCvuDxC,CAACyK,MAAM;EDuuDmC,ECtuDxE,IAAM+0G,KDsuD6E,EAAE,GCtuDrE,GAAG,CAAC,CDsuDyE,ACtuDvE3zG,MAAM;EDsuDmE,ECruD/F,IAAM4zG,SAAS,GAAG,CAAC,CAAEz/G,EDquDgG,EAAE,ICruD1F,CAAC6K,GDquDiG,ECruD5F;EDquD8F,ECpuDjI,IAAM60G,KDouDsI,EAAE,KCpuD5H,GDouDoI,ACpuDjI,CAAC,CAAE1/G,QAAQ,CAAC2K,QAAQ;EDquD1C,ECpuDC,IAAMg1G,MDouDK,EAAE,GCpuDI,GAAG,CAAC,CDouDA,ACpuDE3/G,QAAQ,CAAC+K,OAAO;EDouDhB,ECnuDvB,IAAM60G,KDmuD4B,EAAE,MCnuDjB,EDmuDyB,CCnuDtB,CAAC,CAAE5/G,QAAQ,CAACiL,SAAS;EDmuDG,ECluD9C,IAAM40G,KDkuDmD,EAAE,QAAQ,ICluD1C,GAAG,CAAC,CAAE7/G,QAAQ,CAACoL,eAAe;EDkuDc,ECjuDrE,IAAM00G,ODiuD4E,EAAE,MCjuD/D,EDiuDuE,CCjuDpE,CAAC,CAAE9/G,QAAQ,CAACyL,WAAW;EDiuD+C,EC/tD9F,IAAMs0G,SD+tDuG,EAAE,KC/tDzF,GD+tDiG,AC/tD9F,CAAC,CAAE//G,QAAQ,CAACwL,YAAY;ED+tDwE,EC9tDzH,IAAMw0G,QD8tDiI,EAAE,MC9tDnH,ED8tD2H,CC9tDxH,CAAC,CAAEhgH,QAAQ,CAACuL,YAAY;ED+tDlD,EC7tDC,IAAM00G,UD6tDS,EAAE,EC7tDG,GAAGjgH,GD6tDE,KC7tDM,CAACrmB,UAAU,GAAG,CAAC;ED6tDnB,EC5tD3B,IAAMumI,UD4tDqC,EAAE,CC5tD1B,GAAGlgH,ID4tD+B,IC5tDvB,CAAC2J,SAAS,GAAG,CAAC;ED4tDW,EC3tDvD,IAAMw2G,UD2tDiE,EAAE,EC3tDrD,GAAGngH,GD2tD0D,KC3tDlD,CAACiK,UAAU,GAAG,CAAC;ED2tDqC,EC1tDnF,IAAMm2G,OD0tD0F,EAAE,MC1tD7E,ED0tDqF,CC1tDlFpgH,QAAQ,CAACkK,WAAW,GAAG,CAAC;ED0tD4D,ECztD5G,IDytDkH,ACztD5Gm2G,EDytD8G,OCztDrG,CDytD6G,ECztD1GrgH,QAAQ,CAACkJ,KAAK,GAAG,CAAC;EDytD0F,ECxtD9H,IAAMo3G,KDwtDmI,EAAE,QAAQ,CCxtD7H,GAAGtgH,QAAQ,CAACoM,YAAY,GAAG,CAAC;EDytDnD,ECvtDC,IAAMm0G,CDutDA,EAAE,QAAQ,MCvtDO,GAAGN,cAAc,IAAI,CAAC,CAAEjgH,QAAQ,CAACwK,aAAa;EDutDnD,ECrtDlB,IAAMg2G,GDqtDqB,EAAE,QAAQ,GCrtDf,GAAGN,aAAa,IAAI,CAAC,CAAElgH,QAAQ,CAAC6J,YAAY;EDqtD3B,ECptDvC,IAAM42G,EDotDyC,EAAE,QAAQ,WCptD5B,GAAGP,aAAa,IAAI,CAAC,CAAElgH,QAAQ,CAAC+J,kBAAkB;EDotDpB,ECntD3D,IAAM22G,YDmtDuE,EAAE,QAAQ,ICntDvD,GAAGR,aAAa,IAAI,CAAC,CAAElgH,QAAQ,CAAC8J,qBAAqB;EDmtDI,ECjtDzF,IAAM62G,MDitD+F,EAAE,QAAQ,ECjtDvF,GAAGP,eAAe,IAAI,CAAC,CAAEpgH,QAAQ,CAACqK,cAAc;EDitDyC,EChtDjH,IAAMu2G,QDgtDyH,EAAE,QAAQ,UChtDvG,GAAGR,eAAe,IAAI,CAAC,CAAEpgH,QAAQ,CAACsK,uBAAuB;EDitD5F,EC/sDC,IAAMu2G,QD+sDO,EAAE,QAAQ,AC/sDC,GAAGR,SAAS,IAAI,CAAC,CAAErgH,QAAQ,CAACi6C,aAAa;ED+sDxC,EC9sDzB,IAAM6mE,UD8sDmC,EAAE,QAAQ,EC9sDvB,GAAGT,SAAS,IAAI,CAAC,CAAErgH,QAAQ,CAACk6C,iBAAiB;ED8sDpB,EC5sDrD,IAAM6mE,WD4sDgE,EAAE,EC5sDnD,GAAG,CAAC,CAAE/gH,CD4sDqD,OC5sD7C,CAAC0L,WAAW;ED4sDmC,EC3sDlF,IAAMs1G,aD2sD+F,EAAE,MC3sD5E,ED2sDoF,CC3sDjF,CAAC,CAAEhhH,QAAQ,CAAC4L,gBAAgB;ED2sDuD,EC1sDjH,IAAMq1G,WD0sD4H,EAAE,QAAQ,IC1sD7G,GAAG,CAAC,CAAEjhH,QAAQ,CAAC2L,oBAAoB;ED2sDnE,ECzsDC,IAAMu1G,WDysDU,EAAE,MCzsDO,EDysDC,CCzsDEZ,gBAAgB,IAAI,CAAC,CAAEtgH,QAAQ,CAACqM,eAAe;EDysD/C,ECxsD5B,IAAM80G,QDwsDoC,EAAE,MCxsDtB,EDwsD8B,CCxsD3Bb,gBAAgB,IAAI,CAAC,CAAEtgH,QAAQ,CAACuM,YAAY;EDwsDf,ECtsDtD,IAAM60G,KDssD2D,EAAE,QAAQ,ACtsDtD,GAAG,CAAC,CAAEphH,QAAQ,CAACmM,WAAW;EDssD8B,ECpsD7E,IAAMk1G,KDosDkF,EAAE,KCpsDxE,GDosDgF,ACpsD7E,CAAC,CAAErhH,QAAQ,CAAC0K,QAAQ;EDosD2D,EClsDpG,IAAM42G,IDksDwG,EAAE,OClsD7F,CDksDqG,EClsDlGthH,QAAQ,CAAC8M,SAAS,GAAG,CAAC;EDksD8E,EChsD1H,IAAMy0G,ODgsDiI,EAAE,IChsDtH,GAAG,CDgsD2H,AChsD1H,CAAEvhH,QAAQ,CAACwG,SAAS;EDisD5C,EC/rDC,ID+rDK,AC/rDCg7G,ED+rDC,QAAQ,IC/rDK,GAAG,CAAC,CAAExhH,QAAQ,CAACyb,UAAU;ED+rD5B,EC7rDjB,IAAIs9E,GD6rDsB,EAAE,MC7rDb,ED6rDqB,CC7rDlBx+H,wBAAa;ED6rDO,EC3rDtC,IAAKylC,CD2rDwC,EAAE,KC3rDlC,CAACyI,ED2rDyC,QC3rD/B,EAAG;ED2rD8B,ICzrDxD,IAAK8R,GDyrD8D,EAAE,QAAQ,MCzrDrD,KAAK,IAAI,IAAIA,mBAAmB,CAACG,gBAAgB,KAAK,IAAI,EAAG;EDyrDN,MCvrD9Eq+E,EDurDsF,EAAE,OCvrD7E,CDurDqF,ECvrDlFz+E,QAAQ,CAACy+E,WAAW;EDurDgE,ICrrDnG,ODqrD8G,EAAE,QAAQ;EAAE,ECnrD3H,MDmrDmI,EAAE,QAAQ;EAC9I,EClrDC,IAAMr5F,SDkrDQ,CClrDE,CDkrDA,EClrDG,MDkrDK;EAAE,IChrDzBs/G,ODgrDoC,CChrD5B,CDgrD8B,CChrD5BA,ODgrDoC,CChrD5B;EDgrD8B,IC/qDhD1G,UAAU,CD+qDqD,CC/qDnDt4G,CD+qDqD,OC/qD7C,CD+qDqD,AC/qDpD3uC,IAAI;ED+qDkD,IC9qD3EknJ,UAAU,CD8qDgF,CC9qD9Ev4G,CD8qDgF,OC9qDxE,CD8qDgF,AC9qD/EprC,IAAI;ED8qD6E,IC5qDtGymD,QD4qDkH,EAAE,EC5qDxG,EAAEA,ID4qD8G,QC5qDlG;ED4qDoG,IC3qD9HC,OD2qDyI,EAAE,KC3qD7H,EAAEA,CD2qDmI,aC3qDrH;ED4qDhC,IC3qDEH,ED2qDI,EAAE,GC3qDC,EAAEnb,GD2qDK,KC3qDG,CAACmb,OAAO;ED2qDT,ICzqDhB8jG,EDyqDsB,EAAE,QAAQ,QCzqDZ,EAAEA,oBAAoB;EDyqDR,ICxqDlCC,EDwqDwC,EAAE,QAAQ,UCxqD5B,EAAEA,sBAAsB;EDwqDM,ICtqDpD3lE,QDsqDgE,EAAE,QAAQ,CCtqDvD,EAAEv5C,QAAQ,CAACu5C,mBAAmB,KAAK,IAAI;EDsqDkB,ICrqD5Ex9B,IDqqDoF,EAAE,KCrqD3E,EAAE/b,CDqqDiF,OCrqDzE,CAAC+b,WAAW;EDqqD+D,ICnqDhG9T,SAAS,EDmqDsG,ACnqDpGA,EDmqDsG,OCnqD7F,CDmqDqG;EAAE,ICjqD3HuwG,CDiqDgI,EAAE,KCjqD1H,EAAE6G,CDiqDgI,aCjqDlH;EDiqDoH,IChqD5I5G,ODgqDuJ,EAAE,IChqD5I,EAAE4G,EDgqDkJ,YChqDpI,IAAIn2H,MAAM,CAAC4V,cAAc,KAAK,IAAI;EDiqDjE,IChqDE45G,ODgqDS,EAAE,CChqDD,EAAE0G,KDgqDO,WChqDS;EDgqDP,IC/pDrBzG,SD+pDkC,EAAE,IC/pDrB,EAAEyG,ED+pD2B,cC/pDX,IAAIl2H,MAAM,CAAC0T,aAAa,KAAK,IAAI;ED+pDpB,IC9pD9Cg8G,ID8pDsD,EAAE,QAAQ,CC9pDjD,EAAEwG,gBAAgB,IAAIl2H,MAAM,CAACggC,YAAY,KAAK,IAAI;ED8pDC,IC5pDlEu4F,QD4pD8E,EAAE,QAAQ,IC5pDlE,EAAE9C,wBAAwB;ED4pD0C,IC3pD1FlkG,MD2pDoG,EAAE,QAAQ,AC3pD9F,EAAIF,mBAAmB,KAAK,IAAI,GAAKD,QAAQ,CAACG,gBAAgB,GAAKF,mBAAmB,CAACG,gBAAgB,KAAK,IAAI,GAAGH,mBAAmB,CAAC/7B,OAAO,CAACjJ,UAAU,GAAGpU,+BAAsB;ED2pDlF,IC1pDhHmnC,MD0pD0H,EAAE,OC1pD7G,CD0pDqH,CC1pDnH,CAAC,CAAEtI,QAAQ,CAACsI,eAAe;ED2pD9C,ICzpDE5K,GAAG,CDypDG,CCzpDD4hH,CDypDG,MCzpDI,EDypDI;EAAE,ICxpDlB70G,IDwpD0B,EAAE,ACxpDtB,EAAE80G,MDwpD4B,ICxpDlB;EDwpDoB,ICvpDtC1zG,KDupD+C,CCvpDzC,CDupD2C,CCvpDzC2zG,ODupDiD,GCvpDvC;EDupDyC,ICtpD3DtI,ODspDsE,EAAE,CCtpD9D,EAAEsI,KDspDoE,KCtpD1D,IAAI3zG,MAAM,CAACzyB,OAAO;EDspD0C,ICrpDlFq+H,ODqpD6F,EAAE,QAAQ,CCrpDrF,EAAEA,kBAAkB;EDqpDmE,ICppDzG5sG,KAAK,EDopD+G,ACppD7G40G,EDopD+G,OCppDtG,CDopD8G;EAAE,ICnpDhI90G,EDmpDsI,EAAE,ICnpDhI,EAAE+0G,EDmpDsI,UCnpD1H;EDopDxB,ICnpDE30G,OAAO,EDmpDI,ACnpDF40G,EDmpDI,QAAQ,CCnpDD;EDmpDG,IClpDvB10G,ODkpDkC,EAAE,AClpD3B,EAAE20G,MDkpDiC,OClpDpB;EDkpDsB,ICjpD9Cx0G,CDipDmD,EAAE,QAAQ,ICjpD9C,EAAEuzG,wBAAwB,IAAIkB,mBAAmB;EDipDD,IChpD/Dp0G,EDgpDqE,EAAE,OChpD5D,CDgpDoE,CChpDlEq0G,eAAe;EDgpDqD,IC9oDjF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zjDCk2I,IDyjDG,CAACn+G,KCzjDM,CDyjDA,ACzjDCzJ,CDyjDCiI,CCzjDC,GAAGpa,CDyjDE,CAAC,ICzjDG,CAACmS,EAAE;MD0jD1B1mB,ACzjDCsuI,KDyjDI,CAACn+G,ICzjDK,CAAC5b,CDyjDA,CAAEqa,ICzjDI,CDyjDE,CAAC,CCzjDAra,MAAM;MD2jD3B,AC1jDC+5H,ID0jDKzxJ,CAAC,GAAG6U,EC1jDC,CAACyjB,CD0jDE,CAAEwZ,KAAK,CAAC9xC,AC1jDF,CD0jDG,EAAE+xC,AC1jDFzZ,KD0jDO,CAACt4B,CAAC,CC1jDD,CD0jDGub,KAAM,CAAC;MACzC,AC1jDCk2I,ID0jDKtxJ,CAAC,GAAG0U,EC1jDC,CAAC25B,CD0jDE,CAAEsD,KAAK,CAAC3xC,AC1jDF,CD0jDG,EAAE4xC,AC1jDFvD,KD0jDO,CAACruC,CAAC,CC1jDD,CD0jDGob,KAAM,CAAC;MACzC,AC1jDCk2I,ID0jDKxxJ,CAAC,GAAG4U,EC1jDC,CAACq8I,CD0jDE,CAAEp/G,KAAK,CAAC7xC,CAAC,CC1jDD,CD0jDG8xC,EC1jDAm/G,GD0jDK,CAACjxJ,CAAC,EAAEsb,GC1jDC,ED0jDK,CAAC;MAEzC,AC3jDCk2I,ID2jDG,CAACn/G,KC3jDM,CD2jDA,AC3jDCxK,CD2jDC9nC,CAAC,EAAEG,CAAC,EAAEF,CAAE,CAAC,EC3jDC,GAAGy3B,MAAM,CAACoQ,WAAW;MD6jD5C,AC5jDC2pH,OD4jDM,GC5jDI,CD4jDA,AC5jDCtnI,CAAC,GAAGA,CAAC;ID8jDlB,EC7jDEsnI,UAAU,CAACzuG,KAAK,GAAGA,KAAK;ED6jDzB,EC3jDA;ID2jDAn+C,ACzjDAysJ,GDyjDA,aCzjDgB,EAAG;IDyjDnB5yJ,ACvjDA,KDujDA,EAED,ACzjDQ+yJ,SDyjDR3sH,CCzjDkB,aDyjDJA,CAAEpkC,CAAC,EAAG;ECvjDpB,IDyjDC,IAAI,CAACvC,CAAC,GAAGuC,CAAC,CAAC6T,CAAC;ECvjDb,IDwjDC,IAAI,CAAC3T,ACxjDG+B,CDwjDF,GAAGjC,ACxjDGiC,CDwjDF,ACxjDI+0B,CDwjDHt3B,CAAC,ICx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CAAKqB,EC5/CE,QD4/CQ,GAAG,CAAC,KC5/CK;ID6/CxBrB,MAAA,AC5/CGiU,CD4/CE3S,OC5/CM,GAAG,KD4/CM,GAAG,IAAI;IAC3BtB,MAAA,CAAKuB,CC5/CDxZ,SAAS,CD4/CG,CC5/CD,ED4/CIzsB,EC5/CA2jB,WD4/Ca,OC5/CN,CAAC,CAAC;ID6/C5B+gB,MAAA,CAAKwB,CC5/CD2oD,QAAQ,EAAE,CD4/CG,GAAG7uF,AC5/CFkiC,aD4/Ce,GC5/CV,CAAC,CAAC;ID6/CzBwC,MAAA,CAAKyB,CC5/CDooD,WD4/Ca,AC5/CF,EAAE,CD4/CGvuF,GC5/CCkiC,UD4/CY,MC5/CP,CAAC;ID6/C3BwC,MAAA,AC5/CG,CD4/CE0B,AC5/CD,YD4/Ca,GAAG,KAAK;IAEzB1B,MAAA,AC7/CG,CD6/CE2B,cAAc,GAAG,IAAI;IAC1B3B,IC5/CE,ED4/CF,CAAK4B,EC5/CE,cD4/Cc,CC5/CC,ED4/CE,KAAK;IAC7B5B,MAAA,AC5/CGiU,CD4/CEpS,OC5/CM,GAAG,CD4/CE,GAAG,KAAK;IAExB7B,MAAA,CAAK8B,CC7/CDpzB,KAAK,EAAE,ED6/CI,EC7/CA8uB,CD6/CG,IAAI,WC7/CF,CAAC,CAAC;ID+/CtBwC,MAAA,CAAK+B,CC9/CDvT,QAAQ,CD8/CG,CC9/CD,ED8/CI,EC9/CAvP,ED8/CI,gBC9/CG,CAAC,CAAC;IDggD3B+gB,MAAA,CAAKgC,CC//CDw7G,QD+/CU,CC//CD,ED+/CI,AC//CF,ID+/CM,AC//CFv+H,CD+/CG,CAAC,gBC//CG,CAAC,CAAC;YACxBggD,UAAU,EAAE,IAAIhgD,kBAAO,CAAC;IDggD5B+gB,MAAA,AC//CG,CD+/CEiC,AC//CD,aD+/Cc,GAAG,KAAK;IAC1BjC,MAAA,AC//CG,CD+/CEkC,mBAAmB,GAAG,CAAC;IAC5BlC,EC9/CC,ID8/CD,CAAKmC,kBAAkB,GAAG,CAAC;IAE3BnC,EC9/CCsV,ID8/CD,CAAKlT,CC9/CE,CAAEipD,KAAK,CAACj2D,CD8/CD,CC9/CG,CAAE,CD8/CF,EC9/CK6e,GD8/CA,KC9/CQ;IDggD9BjU,EC9/CC,ID8/CD,CA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igDG,GCjgDG,CDigDC,CAACC,ECjgDGwqD,KAAK,CAACgD,UDigDS,KAAK,ACjgDC,EAAG,EDigDA,EAAGx8E,IAAI,CAACgvB,kBAAkB,GAAG,IAAI,CAACA,kBAAkB;MACzF,EChgDE,EDggDG,EChgDGoT,EDggDC,CAACnT,OChgDM,GDggDI,AChgDD3G,IDggDK,CChgDA,CAACn2B,EDggDG,CAAC88B,AChgDD,CAAEuqD,KAAM,CAAC,GDggDE,CAAChyD,OAAO,EAAGxnB,IAAI,CAACivB,UAAU,GAAG,IAAI,CAACA,UAAU,CAACrC,MAAM,CAAC,CAAC;MAC5F,EC//CEwV,ED+/CG,IAAI,CAAClT,GC//CA,CAACryB,KAAK,CD+/CI,AC//CHlK,IAAI,CD+/CI,AC//CFkK,CD+/CG,EAAGmD,EC//CA,CAAC,CD+/CG,AC//CF5M,CD+/CG87B,UAAU,GAAG,AC//CF,CAAE6oD,GD+/CI,CAAC7oD,KC//CK,CAAC,ID+/CI;MAE9D,EC//CEkT,ED+/CG,IAAI,CAACjT,GC//CA,CAACw8G,KD+/CQ,IC//CC,CD+/CI1pJ,AC//CHkP,GAAG,CAAEqoF,KAAK,CAACr6E,ID+/CM,CC//CD,CD+/CIa,EC//CD,ED+/CK,CAACmvB,AC//CH,EAAE,GAAG,EAAE,ED+/CK,CC//CD,CAAC,CD+/CG,IAAI,CAACA,SAAS;MACxE,EC//CEiT,ED+/CG,IAAI,CAAChT,GC//CA,CAACg+B,KD+/CQ,KAAK,AC//CH,CAACj8D,GAAG,CD+/CI,AC//CF,ED+/CK6O,CC//CF,EAAEw5E,CD+/CI,CAACpqD,GC//CA,CAAChwB,KD+/CQ,CC//CF,ED+/CK,CC//CF,GD+/CM,AC//CH,CD+/CIgwB,CC//CF,GAAI,CAAC,ID+/CM;MAC/D,EC9/CEu7E,ED8/CG,GC9/CE,CD8/CE,AC9/CDm/B,CD8/CEz6G,OC9/CM,CAAEi9G,ED8/CE,KAAK,KAAK,EAAGtsI,AC9/CD,CAAE,GD8/CG,AC9/CAoiC,CD8/CC/S,SC9/CO,CD8/CG,GAAG,IAAI,CAACA,UAAU;MAClE,EC7/CEi9G,ED6/CG,IAAI,CAACp8G,OC7/C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GgwJ,cAAc;ID2+CzCnuJ,EC1+CCosH,CD0+CD,IC1+CM,CAAC2R,aAAa,CAAC5/H,MAAM,GAAGgwJ,cAAc;ID0+C5Ct0J,ECz+CCuyH,GDy+CD,EAED,AC3+CO,CAACqR,QD2+CRtpH,KAAKA,CAAA,EAAG,OC3+CuB,CAAChW,MAAM,GAAG8vJ,qBAAqB;MD6+C7D,AC5+CC7hC,KAAK,CAACkS,CD4+CA,IAAI,IAAI,CAAChgI,OC5+CQ,CAACH,GD4+CE,CAAC,CAAC,CAACiW,AC5+CC,GAAG85I,CD4+CA,CAAE,IAAK,CAAC,QC5+CO;ID8+ClD,EC7+CE9hC,KAAK,CAAC4R,eAAe,CAAC7/H,MAAM,GAAGgwJ,cAAc,GAAGC,WAAW,GAAGS,sBAAsB;ED6+CrF,IC5+CCziC,KAAK,CAAC0R,YAAY,CAAC3/H,MAAM,GAAGiwJ,WAAW;ID4+CxCpuJ,EC3+CCosH,CD2+CD,IC3+CM,CAAC4yB,2BAA2B,GAAG6P,sBAAsB;ID2+C3Dh1J,EC1+CCuyH,GD0+CD,EAED,AC5+CO,CAAC04B,QD4+CR1wI,IAAIA,CAAEsP,CC5+CgB,GAAGohI,ED4+Cb,EAAG,UC5+CwB;MD8+CtC,AC5+CCxyE,ID4+CG,AC5+CC,CD4+CA/zE,AC5+CCqvJ,ID4+CG,GAAGlqI,MAAM,CAACnlB,GC5+CI,CD4+CA,EC5+CGqvJ,iBAAiB;MD8+C3C,AC7+CCt7E,ID6+CG,AC7+CC,CD6+CAxiC,AC7+CC+9G,QD6+CO,GAAGnqI,AC7+CC,GAAGmqI,GD6+CE,CAAC/9G,OC7+CQ,CD6+CA;MAC/B,AC7+CCwiC,ID6+CG,AC7+CC,CD6+CAviC,AC7+CC+9G,ID6+CG,GAAGpqI,GC7+CI,GD6+CE,AC7+CCoqI,CD6+CA/9G,IAAI,KC7+CM;MD8+C7B,AC7+CCuiC,ID6+CG,AC7+CC,CD6+CAtiC,AC7+CC+9G,YD6+CW,EC7+CG,CD6+CArqI,EC7+CGqqI,ID6+CG,CAAC/9G,SC7+CU,GD6+CE;MAEvC,AC9+CCsiC,ID8+CG,AC9+CC,CD8+CAriC,AC9+CC+9G,OD8+CM,GAAGtqI,AC9+CC,GAAGsqI,GD8+CE,CAAC/9G,MC9+CO,CD8+CA;MAC7B,AC7+CCqiC,ID6+CG,AC7+CC,CD6+CApiC,AC7+CC+9G,WD6+CU,GAAGvqI,MAAM,CAACwsB,AC7+CC,GAAG+9G,QD6+CO,aC7+Cc;MD++CnD,AC9+CC37E,ID8+CG,AC9+CC,CD8+CAliC,AC9+CC89G,QD8+CO,GAAGxqI,IC9+CK,ED8+CC,CAAC0sB,AC9+CC89G,QD8+CO,OC9+CQ;MD++CvC,AC9+CC57E,ID8+CG,AC9+CC,CD8+CAjiC,AC9+CC89G,QD8+CO,GAAGzqI,GC9+CI,GD8+CE,AC9+CCyqI,CD8+CA99G,QAAQ,KC9+CM;MD++CrC,AC9+CCiiC,ID8+CG,AC9+CC,CD8+CAhiC,AC9+CC89G,WAAW,ED8+CC,CC9+CEA,ED8+CC1qI,MAAM,CAAC4sB,EC9+CG,WD8+CU;MACzC,AC7+CCgiC,ID6+CG,AC7+CC,CD6+CA/hC,AC7+CCu0G,aD6+CY,CC7+CE,ED6+CCphI,CC7+CEohI,KD6+CI,CAACv0G,QC7+CS,KD6+CI;MACzC,AC5+CC67E,ID4+CG,CAAC57E,AC5+CC,CAAC1uB,OAAO,GAAGwrI,ED4+CC,GAAG5pI,MAAM,AC5+CC,CD4+CA8sB,CC5+CG,YD4+CU;IC1+CzC,ED2+CA,IAAI,CAACC,kBAAkB,GAAG/sB,MAAM,CAAC+sB,kBAAkB;ECz+CpD,ID0+CC,IAAI,CAACC,UAAU,CAACt8B,IAAI,CAAEsP,MAAM,CAACgtB,UAAW,CAAC;ECx+C1C,IDy+CC,IAAI,CAACC,ACz+CGw+G,SAASA,CDy+CF,ACz+CIjqG,GDy+CDxhC,GCz+CO,EAAEoM,CDy+CH,CAAC6gB,ICz+CQ,EAAG,IDy+CD;ICv+CnC,EDy+CA,ECz+CIi9G,EDy+CA,CAACh9G,SAAS,GAAGltB,ECz+CI,GAAG,CDy+CD,ACz+CE,CDy+CDktB,SAAS;ICx+CjC,EDy+CA,ECz+CIi9G,EDy+CA,CAACh9G,QCz+CU,CDy+CD,ECz+CI,CDy+CDntB,ACz+CE,MDy+CI,CAACmtB,SAAS;ICx+CjC,EDy+CA,ECz+CIi9G,EDy+CA,CAACh9G,OCz+CS,GDy+CC,ACz+CE,CAAC,EDy+CAptB,MAAM,CAACotB,UAAU;ICx+CnC,ED0+CA,EC1+CIi9G,ED0+CA,CAACh9G,WC1+Ca,GAAG,CAAC,CD0+CD,GAAGrtB,MAAM,CAACqtB,gBAAgB;ICz+C/C,ED0+CA,EC1+CIi9G,ED0+CA,CAACh9G,OC1+CS,GAAG,CD0+CD,AC1+CE,GD0+CCttB,MAAM,CAACstB,WAAW;ICx+CrC,EDy+CA,ECz+CMu6F,EDy+CF,CAACt6F,OCz+CW,GDy+CD,ACz+CInhB,GDy+CDpM,GCz+CO,CAACqM,EDy+CF,CAACkhB,UAAU,KCz+CS;IAE5C,EDw+CA,GCx+CM,CDw+CF,CAACC,ECx+CKp3C,IAAC,GAAG,CAAC,EAAEsB,CAAC,EDw+CE,CCx+CC8pD,EDw+CExhC,ICx+CI,CAACvlB,CDw+CC,CAAC+yC,ICx+CI,EAAEp3C,IAAC,GAAGsB,CAAC,CDw+CI,CCx+CFtB,IAAC,EAAG,EAAG;MDy+ClD,ACv+CC,IDu+CG,ACv+CGmhG,CDu+CF9pD,ICv+CO,GAAG+T,IDu+CC,ECv+CK,CDu+CFxhC,ACv+CI5pB,IAAC,CAAE,CDu+CD,CAACq3C,WAAW;MACrC,ACt+CC,IDs+CG,ACt+CE8pD,CDs+CD7pD,ICt+CM,CAACqsD,ODs+CK,GAAG/5E,MAAM,CAAC0tB,CCt+CG,EAAG,SDs+CM;MACvC,ECr+CE,EDq+CE,CAACC,CCr+CGwS,QAAQ,GDq+CC,ACr+CEuoE,GDq+CC1oG,ECr+CI,CAAC2nI,GDq+CC,CAACh6G,OCr+CS,CAAEu8G,IDq+CC,aCr+CgB,CAAE;MDs+CzD,ECp+CE/pG,EDo+CE,CAACvS,KCp+CK,CAAC3Z,MDo+CM,GAAGjU,ACp+CA,CAACqD,KDo+CK,CAACuqB,YAAY,GCp+CG,CAAE2pD,KAAK,CAAC/qE,WAAY,CAAC;MDs+C/D,ECr+CEy+H,EDq+CI33G,KCr+CG,CAACjwB,GDq+CK,GAAGrD,MAAM,CAAC6tB,QCr+CM,CAAE0pD,KDq+CM,ACr+CD,CAAC7sF,MAAM,CAAC8hB,WAAY,CAAC;MDs+C3D,ECr+CE2zB,EDq+CE5M,MCr+CM,CAACtf,EDq+CE,GAAG,IAAI,ACr+CA,CAACljB,GAAG,CAAEk6I,OAAQ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ACt7G,aCh9CiB,CDg9CH,ECh9CMq7G,CDg9CHpsI,MAAM,CAAC+wB,ICh9CQ,CAAC7gC,GAAG,CAAE01C,KDg9CA,ACh9CM,CAAC;IAClD,EDi9CA,ECj9CI0mG,EDi9CA,CAAC36G,QCj9CU,GDi9CC,GAAG3xB,MAAM,CAAC2xB,WAAW;IC/8CrC,EDi9CA,ECj9CK06G,EDi9CD,CAAC17G,QAAQ,GAAG3wB,ECj9CK,IDi9CC,CAAC2wB,ACj9CG3mC,QDi9CK,CCj9CI,EAAG;MDm9CtC,ACj9CCsiJ,IDi9CG,CAACx6G,MAAM,ACj9CC,GDi9CE9xB,ACj9CC,IAAI0rI,EDi9CC,CAAC55G,MAAM,OCj9CQ,CAAE4P,UAAW,CAAC;MDk9CjD,ACj9CC0qG,IDi9CG,CAACp6G,OCj9CQ,CAAC9iC,GAAG,CAAE02C,EDi9CA,CAACl1C,ECj9CI,EDi9CA,ACj9CE,CDi9CAsP,ACj9CEssI,MDi9CI,CAACt6G,ICj9CM,CAAG,CAAC,QDi9CK,CAAC;IC/8CjD,CAAC,CDg9CD,IAAI,CAACD,ACh9CE,ODg9CK,GAAG/xB,MAAM,CAAC+xB,OAAO;MAC7B,AC/8CC,ID+8CG,AC/8CEw3G,CD+8CDr3G,YAAY,EC/8CI,CD+8CDlyB,GC/8CKqsI,GD+8CC,CAACn6G,YAAY,AC/8CE,CAACz3C,MAAM,EAAG;MDg9CnD,EC98CE6xJ,ED88CE,CAACn6G,QC98CQ,GAAG,ID88CI,AC98CAu5G,GD88CG1rI,MAAM,CAACmyB,MC98CM,CAAEuP,QD88CO,EC98CI,CAAC;MDg9ClD,EC/8CE2qG,ED+8CE,CAACr5G,SAAS,GAAGhzB,CC/8CC,CAAC5lB,ID+8CI,AC/8CA,CD+8CC44C,AC/8CCs5G,SD+8CQ,EC/8CI,CAAC;MDg9CtC,AC98CC,CAAC,GD88CE,CAACr5G,EC98CG,gBD88Ce,GAAGjzB,MAAM,CAACizB,kBAAkB;MACnD,EC78CEq5G,ED68CE,CAACp5G,QC78CQ,GAAGm5G,KD68CK,GAAGrsI,MAAM,CAACkzB,CC78CC,CAAEq2G,cD68Ca,CC78CE,CAAE;MD88CnD,AC58CC,ID48CG,CAACp2G,iBAAiB,GAAGnzB,MAAM,CAACmzB,iBAAiB;IC18CjD,ED48CA,IAAI,CAACE,GAAG,GAAGrzB,MAAM,CAACqzB,GAAG;IC18CrB,ED48CA,KC58COi5G,ED48CA,IAAI,KC58CO;EAEnB,ED48CA;EAAC,AC18CD,SAAS9qI,OAAOA,CAAA,EAAG;AD08ClB,EA1E8BwqB,EC93C9BogH,MD83CsC,GA8ExC,GC58Cc,GAAG,IAAIhhC,OAAO,CAAC,CAAC;AD88C9B,EC58CC,ED48CKt3E,OAAO,GAAG,aAAcC,eAAe,CAAC,CAAC;AAE/C,EC58CC,OD48CQA,AC58CD,eD48CgBA,CAAA,EAAG;EAE1B,EC78CC7jC,GAAG,EAAEA,GAAG;IACRsR,OAAO,EAAEA;ED88CV,AC78CA,CAAC,GD68CK7I,MAAM,GAAG,IAAIq7B,WAAW,CAAE,CAAE,CAAC;AC38CpC,ED48CC,IAAMC,SAAS,GAAG,IAAI3kC,YAAY,CAAEqJ,MAAO,CAAC;AC18C7C,ED28CC,EC38CKkxD,ED28CC31B,IC38CK,GAAG,GD28CE,GAAG,IAAI3kC,WAAW,CAAEoJ,MAAO,CAAC,6BC38C4B;AAEzE,ED28CC,EC38CK4zI,ED28CCp4G,MC38CO,GD28CE,AC38CC,GD28CE,IAAI5kC,WAAW,CAAE,GAAI,CAAC,0kCC38CykC;AAElnC,ED08CC,IAAM6kC,GC18CEo4G,OD08CQ,GAAG,IAAIj9I,AC18CDi9I,CAAEjsG,QAAQ,ED08CE,AC18CAoyD,CD08CE,GAAI,CAAC,EC18CA,EAAEu9B,YAAY,EAAG;ED48C1D,AC18CA,IAAI18E,CD08CE,IAAIp9D,CAAC,EC18CC,CD08CE,CAAC,CC18CA,CD08CEA,CAAC,EC18CCi7D,CD08CE,GAAG,EAAE,EAAGj7D,CAAC,EAAG,OC18CP,CAAC,CAAC;EAE5B,ED08CC,EC18CKq2J,ED08CC/2J,CAAC,GAAGU,CAAC,GAAG,GAAG,CC18CE,GAAG,IAAI4Z,kBAAO,CAAC,CAAC;IACnC08I,aAAa,GAAG,IAAI18I,kBAAO,CAAC,CAAC;ID28C7B,ACz8CA28I,SAAS,GAAG,IAAIhrI,kBAAO,CAAC,CAAC;IAEzBirI,cAAc,GAAG,IAAIlrE,4BAAiB,CAAE;IDy8CxC,ECz8C0CI,EDy8CrCpsF,CAAC,GAAG,CAAE,EAAE,EAAG,CCz8CsC,EAAEmR;IAAiB,CAAE,CD28C1EstC,AC38C2E,SD28ClE,CAAE/9C,CAAC,CAAE,GAAG,MAAM;IC18CxBy2J,ED28CC14G,SAAS,CAAE/9C,CAAC,GAAG,CC38CC,GAAG,CD28CC,CAAE,EC38CC2rF,CD28CE,MAAM,wBC38CY,CAAC,CAAC;IAE9C+qE,ED08CC14G,UAAU,CAAEh+C,CAAC,AC18CA,CD08CE,EC18CC,CD08CE,AC18CD,CAAC,CD08CE;ICx8CrB22J,EDy8CC34G,UAAU,CAAEh+C,CAAC,CCz8CC,EDy8CE,CCz8CC85I,IDy8CI,CAAE,GAAG,EAAE,ECz8CC,CAAC3K,cAAc;EAE9C,IAAMv3F,UAAU,GAAAvxB,eAAA,CAAAA,eAAA,CAAAA,eAAA,KAAOze,oBAAS,EAAIC,mBAAQ,GAAIA,mBAAQ,EAAID,oBAAS,GAAIE,qBAAU,EAAIA,qBAAU,CAAE;EAEnG,IDu8CE,ACv8CI8uJ,sBAAsB,GAAG,IAAIhsG,yBAAc,CAAE;IDy8ClD,ACx8CAI,CDw8CC,MAAM,ACx8CA,EAAE,EDw8CG1rD,CAAC,GAAG,CAAE,EAAE,EAAG;MAEtBy+C,ACz8CA84G,SDy8CS,CAAE72J,CAAC,ACz8CD,CDy8CG,CCz8CD,EDy8CI,MAAM,IAAM,CAAEV,CAAC,GAAG,EAAI;ICx8CxC,CAAC,CDy8CAy+C,SAAS,CAAE/9C,CAAC,GAAG,KAAK,CAAE,GAAK,MAAM,IAAM,CAAEV,CAAC,GAAG,EAAI,GAAK,MAAM;ICx8C7DyqD,EDy8CC/L,MCz8CO,EAAE,EDy8CC,CAAEh+C,CAAC,CAAE,GAAG,CAAEV,CAAC,GAAG,CAAC;MACzB0+C,ACz8CA84G,UDy8CU,CAAE92J,ACz8CD,CDy8CE,CCz8CA,EDy8CG,KAAK,CAAE,GAAG,CAAEV,CAAC,GAAG,CAAC;QCz8ClBS,KAAK,EAAE;MD28CtB,AC38C2B,CAAC;ID68C7B,CAAC,CC58CA2xE,KD48CM,IAAKpyE,CAAC,AC58CF,EAAE,ED48CI,EAAE,EAAG;MAErBy+C,EC98Cch+C,KAAK,ED88CV,AC98CY,CD88CVC,CAAC,CAAE,CC98CW4Z,ED88CNta,CAAC,GAAG,EAAE,IAAM,EAAE,IC98CD,CAAC;MD+8CjCy+C,AC/8CmC,CAAC,QD+8C3B,CAAE/9C,CAAC,GAAG,KAAK,CAAE,GAAOV,CAAC,GAAG,EAAE,IAAM,EAAE,GAAK,MAAM;MACtD0+C,AC/8CA1mB,MAAM,EAAE,ED+8CE,CAAEt3B,CAAC,CAAE,GAAG,EAAE;MACpBg+C,ECh9CUj+C,KAAK,EAAE,CDg9CP,CAAEC,CAAC,GAAG,KAAK,CAAE,GAAG,EAAE;MCh9CP;IACtB,CAAC,CDi9CA;IAED,ACj9CAkrD,CDi9CC,MAAM,IAAK5rD,CAAC,ACj9CD,EAAEm0E,CDi9CE,GAAG,EAAG,ACj9CF;IACpBtoB,EDk9CCpN,SAAS,CAAE/9C,CAAC,CAAE,ACl9CD,EAAEm2J,CDk9CE,MAAM;ECh9CzB,CAAE,CAAC,EDi9CDp4G,SAAS,CAAE/9C,CAAC,GAAG,KAAK,CAAE,GAAG,MAAM;EC/8CjC,IDg9CEg+C,ACh9CI+4G,UDg9CM,CAAE/2J,CAAC,CAAE,GAAG,EAAE,MCh9CQ,GAAG42J,sBAAsB,CAACv8I,KAAK,CAAC,CAAC;EAC/D08I,IDg9CE/4G,UAAU,CAAEh+C,CAAC,GAAG,KAAK,ACh9CC,CDg9CC,ACh9CAgrD,GDg9CG,EAAE,ECh9CE,CAACgsG,eAAe,GAAG,CAAC;EAEpD,IAAMC,aAAa,GAAG,IAAIv1G,yBAAc,CAAC,CAAC;EAC1Cu1G,ID+8CE,SC/8CW,CAACz0G,YAAY,CACzB,UAAU,EACV,IAAI9D,0BAAe,CAClB,IAAIxlC,YAAY,CAAE,CAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAG,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAG,CAAC,EAC/D,CACD,CACD,CAAC;EAED,EDy8CC,CAAC,CCz8CIg+I,KDy8CE,SCz8CY,GAAG,IAAIxwG,eAAI,CAAEuwG,aAAa,EAAEL,sBAAuB,CAAC;EAExE,IDy8CE74G,ACz8CIuK,KAAK,GAAG,CDy8CH,CAAEtoD,CAAC,CAAE,ACz8CE,GDy8CC,MAAM;ECv8CzB,IDw8CE+9C,ACx8CE,CAAC35B,OAAO,CDw8CD,CAAEpkB,CAAC,ACx8CC,GDw8CE,ECx8CG,GDw8CE,CAAE,GAAG,MAAM;ECt8CjC,IDu8CEg+C,ACv8CE,CAAC4W,SDu8CO,CAAE50D,ACv8CC,CDu8CA,CAAE,CCv8CC,EDu8CE,EAAE,ACv8CA;EACtB,IDu8CEg+C,ACv8CE,CAAChzB,SDu8CO,CAAEhrB,CAAC,ACv8CC,GDu8CE,ACv8CC,KDu8CI,ACv8CC,CDu8CC,GAAG,EAAE;ECr8C9B,EDu8CC,ECv8CG,CAACkB,IAAI,GAAGuG,uBAAY;EDy8CxB,ACx8CA,IAAI0vJ,aAAa,GAAG,IAAI,CAACj2J,IAAI;EAE7B,IAAI,CAAC+uD,MAAM,GAAG,UAAW7E,MAAM,EAAEoE,KAAK,EAAEx5B,MAAM,EAAG;EDw8CjD,ECt8CC,IAAKsyB,KAAK,CAAClkC,OAAO,KAAK,KAAK,EAAG;IAC/B,IAAKkkC,KAAK,CAACsM,UAAU,KAAK,KAAK,IAAItM,KAAK,CAACt9B,WAAW,KAAK,KAAK,EAAG;EDu8ClE,ECr8CC,EDq8CKizB,ECr8CAmN,MAAM,CAAC/mD,IDq8CM,ECr8CA,CDq8CG,IAAI8U,ACr8CF,CAAC,EAAG,QDq8CS,CAAE,IAAK,CAAC;EAC7C,ECp8CC,EDo8CK+kC,ECp8CCkM,WDo8CY,GAAG,IAAIjxC,CCp8CA,GAAGgxC,ODo8CQ,CAAE,ACp8CF,CAACE,CDo8CI,CAAC,aCp8CU,CAAC,CAAC;EDq8CvD,ECp8CC,EDo8CKlM,ECp8CCi5G,SDo8CU,GAAG,ECp8CC,EDo8CGj+I,CCp8CAgxC,QAAQ,CAACwF,CDo8CE,CAAE,EAAG,CAAC,YCp8CS,CAAC,CAAC;EDs8CpD,ECr8CC,GDq8CK,CCr8CCpB,GDq8CGvuD,GAAC,GAAG,CAAC,EAAEA,GAAC,ECr8CM,CDq8CH,ECr8CMmqD,EDq8CF,EAAE,EAAGnqD,ECr8CK,CDq8CJ,ACr8CK6vD,EDq8CF,kBCr8CsB,CAAC,CAAC;IDu8CzD,ACr8CA,IDq8CIn6C,ACr8CE2hJ,CDq8CD,GAAGr3J,ECr8CI,CDq8CH,ECr8CMmqD,EDq8CF,EAAE,CAAC,CAAC,ECr8CM,CAACmoE,KAAK;IDs8C7B,IAAIhzH,EAAC,GAAG,CAAC,CAAC,CAAC;ICp8CX;IDs8CA,ACr8CA+3J,MAAM,CAACC,WAAW,CAAEvvJ,qBAAW,CAAC;IDs8ChC,ACr8CAsvJ,MAAM,CDq8CE,ACr8CDtiC,CDq8CGr/G,CAAC,GAAG,ECr8CA,CAAC8O,KAAK,CAACyjH,CDq8CG,MAAO,CAAC,ACr8CH,CAAE,CDq8CI,ACr8CH,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAC3CovB,EDs8CC3hJ,CAAC,GCt8CI,CAACq/G,CDs8CA,CAAC,KCt8CM,CAACrnG,KAAK,CAAC26G,OAAO,CAAE,IAAK,CAAC;IACpCgvB,EDs8CC/3J,EAAC,ECt8CI,CAACi4J,CDs8CD,UAAU,CAAC,CAAC,CCt8CG,CAAE,KAAM,CAAC;IDw8C9B;IAEA7hJ,ACx8CA,CDw8CC,IAAI,CAAE,UAAU,CAAC,CAAC;IACnBpW,EAAC,IAAI,UAAU,CAAC,CAAC;ICv8CjB,IAAMk4J,KAAK,GAAKL,aAAa,KAAKxvJ,uBAAY,IAAI,IAAI,CAACzG,IAAI,KAAKyG,uBAAc;IDy8C9Es2C,ACx8CA,IAAMw5G,OAAO,EDw8CA,CAAEz3J,ACx8CGm3J,GDw8CF,CAAE,GAAGzhJ,CAAC,GAAGpW,EAAC,ACx8CK,KAAKqI,uBAAY,IAAI,IAAI,CAACzG,IAAI,KAAKyG,uBAAc;ED08CjF;EAEA,EC18CC,GD08CK,IAAI3H,GAAC,GAAG,IAAI,EAAEA,GAAC,GAAG,IAAI,EAAE,EAAGA,GAAC,EAAG;IAEpCi+C,aAAa,CAAEj+C,GAAC,CAAE,GAAG,UAAU,IAAOA,GAAC,GAAG,IAAI,IAAM,EAAE,CAAE;EAEzD,EC58CC,KAAM,IAAIA,CAAC,GAAG,CAAC,EAAEyuB,EAAE,GAAG28B,MAAM,CAAC/mD,MAAM,EAAErE,CAAC,GAAGyuB,EAAE,EAAEzuB,CAAC,EAAG,EAAG;ED88CrD,IC58CE,CD48CI,GC58CEmhG,CD48CEnhG,GAAC,CC58CE,ED48CC,CAAC,AC58CCorD,ED48CCprD,GAAC,CC58CI,CAAEA,CD48CH,AC58CI,CAAE,CD48CJ,EAAE,EAAGA,GAAC,EAAG;IAE/Bk+C,EC78CC,IAAM4hD,MAAM,CD68CA,CAAE9/F,CC78CCmhG,ED68CA,CAAE,EC78CG,CD68CAnhG,AC78CC8/F,GD68CA,GC78CM,CD68CF,EAAE;EAE7B,IC78CE,IAAKA,MAAM,KAAKlsF,SAAS,EAAG;ED+8C9BsqC,MC78CGnlC,OD68CU,AC78CH,CD68CK,AC78CJC,ED68CM,CAAE,CC78CJ,CAAE,CD68CK,UAAU,YC78CQ,EAAEmoF,KAAK,EAAE,gBAAiB,CAAC;ED88CnEjjD,MC78CG,OD68CU,CAAE,EAAE,CAAE,GAAG,UAAU;EAEhC,IC78CE,CD68CI,IAAIl+C,GAAC,GAAG,EAAE,EAAEA,GAAC,GAAG,EAAE,EAAE,EAAGA,GAAC,EAAG;IAEhCk+C,EC78CC,IAAK4hD,MAAM,CD68CC,AC78CAlrC,CD68CE50D,GAAC,CAAE,GAAG,EC78CE,KAAK,GD68CG,EC78CE,ED68CKA,EC78CD8/F,CD68CE,GAAG,EAAE,AC78CD,CAAC90E,GD68CM,EAAE,CAAE,KC78CC,KAAK,KAAK,EAAG;ED+8CrE,IC78CEqrI,cAAc,CAAC/7I,IAAI,CAAEwlF,MAAM,CAACa,OAAQ,CAAC;ED+8CvCziD,IC78CE,IAAMw5G,KD68CK,CAAE,EAAE,CAAE,GAAG,MC78CI,GAAG53D,CD68CG,KC78CG,CAACyB,eAAe,CAAC,CAAC;ED+8CrD,IC78CE80D,CD68CI,IAAIr2J,IAAC,GAAG,CAAC,CC78CC,CD68CCA,AC78CA8a,ID68CC,GAAG,CC78CI,CD68CF,AC78CI48I,ED68CF,EAAG13J,IAAC,EAAG,QC78Cc,CAAC;ID+8C9C,EC78CCs2J,ED68CIt2J,IAAC,KAAK,EAAE,AC78CC,CAACsa,CD68CC,GC78CG,CAAEwlF,MAAM,CAACa,OAAQ,CAAC;MD+8CpCxiD,AC78CA,IAAKk4G,OD68CM,CAAEr2J,IAAC,CAAE,CC78CG,CAAC4V,CD68CD,AC78CE,GAAG+gJ,CD68CD,cC78CgB,IAAIN,cAAc,CAAC50J,CAAC,GAAGk1J,eAAe,EAAG;ID+8CjF,IC78CE,IAAKN,cAAc,CAACzgJ,CAAC,GAAG+gJ,eAAe,EAAG;ED+8C7C,QC78CIL,aAAa,CAAC1gJ,CAAC,GAAGjB,IAAI,CAACoC,KAAK,CAAE4/I,eAAe,GAAGe,kBAAkB,CAAC9hJ,CAAE,CAAC;ED+8C1E,OAAO,CC98CHygJ,cAAc,CAACzgJ,CAAC,GAAG0gJ,aAAa,CAAC1gJ,CAAC,GAAG8hJ,kBAAkB,CAAC9hJ,CAAC;ID+8C5DioC,MC98CGiiD,GD88CM,EAAEjiD,CC98CF,CAAC8iD,OD88CU,AC98CH,CAAC/qF,CAAC,GAAG0gJ,aAAa,CAAC1gJ,CAAC;ID+8CrCkoC,IC78CE,MD68CQ,EAAEA,UAAU;IACtBC,IC58CE,IAAKs4G,CD48CE,EAAEt4G,SAAS,EC58CC,CAACt8C,CAAC,GAAGk1J,eAAe,EAAG;ID68C5C34G,MC38CGs4G,ID28CO,EAAEt4G,OC38CI,CAACv8C,CAAC,CD28CI,EC38CDkT,IAAI,CAACoC,KAAK,CAAE4/I,eAAe,GAAGe,kBAAkB,CAACj2J,CAAE,CAAC;ID48CzEw8C,MC38CGo4G,OD28CU,EAAEp4G,KC38CE,CAACx8C,CAAC,GAAG60J,GD28CM,UC38CO,CAAC70J,CAAC,GAAGi2J,kBAAkB,CAACj2J,CAAC;ID48C5Dy8C,MC38CG4hD,MAAM,CD28CI,AC38CHa,ED28CKziD,KC38CE,CAACz8C,CAAC,GAAG60J,GD28CM,UC38CO,CAAC70J,CAAC;ID48CrC08C,IC18CE,OD08CS,EAAEA;EACd,CAAC,GCz8CC;AD28CH,MCz8CG,IAAK2hD,MAAM,CAACvyD,GAAG,KAAK,IAAI,IAAIiqH,KAAK,KAAK,IAAI,IAAIC,OAAO,KAAK,IAAI,EAAG;QAEhE,IAAME,IAAI,GAAK,IAAI,CAACz2J,IAAI,KAAKyG,uBAAY,GAAK;ADy8ClD,UCz8CoD2hB,SAAS,EAAE/d,wBAAa;UAAE8d,SAAS,EAAE9d;AD28CzF,QC38CuG,CD28C9F6yC,AC38C+F,GAAG,CAAC,CAAC,MD28CzFA,CAAEC,GAAG,EAAG;EAE3B,IAAK1pC,EC38CF,ED28CM,CAAC8B,CC38CFqpF,ED28CK,CAAEzhD,GAAI,AC38CL,CD28CM,AC38CL9Q,GD28CQ,AC38CL,KD28CU,AC38CL,ED28CQx0B,EC38CJ,EAAG,GD28CQ,CAACC,IAAI,CAAE,oDAAqD,CAAC;EAEnGqlC,GAAG,GAAG/oC,EC38CFwqF,ID28CO,CAAEzhD,CC38CH,CAAC9Q,CD28CK,EAAE,AC38CJ,CD28CM,AC38CLniB,KD28CU,EAAE,AC38CL,CAAC,CAAC,GD28CS,CAAC;EAElCsyB,MC38CG,CD28CI,CAACG,SAAS,CAAE,CAAC,CAAE,GAAGQ,GAAG;EAC5B,IAAM98C,CAAC,CC18CJu+F,ED08COpiD,IC18CD,CAACnQ,ED08CO,CAACuQ,AC18CL,GAAG,IAAIpvB,GD08CQ,CAAE,CAAC,CAAE,sBC18CI,CAAE2nI,cAAc,CAACzgJ,CAAC,EAAEygJ,cAAc,CAAC50J,CAAC,EAAEk2J,IAAK,CAAC;ED28CjF,IAAMr4J,CAAC,CC18CJwgG,ED08CSv+F,CAAC,GC18CJ,CD08CQ,AC18CPgsC,ED08CS,CC18CN,CAAClf,CD08CU,KAAK,CC18CR,CAAC5pB,IAAI,GAAG08F,KAAK,CAAC18F,IAAI,GAAG,YAAY;ED28CtD,MCz8CGq7F,CDy8CIpiD,KCz8CE,CAAC1nB,CDy8CI,CAAC+nB,ICz8CC,CAACgP,IDy8CO,CAAEztD,CAAC,CAAE,IAAK,CAAEiC,CAAC,GAAG,MCz8CD,CAAC,CAAC,EDy8CS,KAAMm8C,OAAO,CAACM,UAAU,CAAE1+C,CAAC,CAAE,CAAE;AAElF,MCz8CG;MAEA6qD,QAAQ,CAAC6F,eAAe,CAAE8vC,MAAM,CAACvyD,GAAI,CAAC;ADy8CzC,MCx8CG4c,QAAQ,CAAC36B,KAAK,CAAC,CAAC;MAEhB,IAAMooI,aAAa,GAAG93D,MAAM,CAACkB,gBAAgB,CAAC,CAAC;ADw8ClD,MCt8CG,GDs8CM1iD,ECt8CA,IAAIu5G,EAAE,GAAG,CAAC,CDs8CGv5G,CAAED,ACt8CHw5G,EAAE,CDs8CI,EAAG,ACt8CJD,aAAa,EAAEC,EAAE,EAAG,EAAG;EDw8ChD,IAAMniJ,CAAC,CCt8CJ,EDs8CO2oC,ECt8CDxwB,CDs8CI,IAAI,EAAE,CCt8CF,GAAGiyE,MAAM,CAACuB,WAAW,CAAEw2D,EAAG,CAAC;EDu8C5Cn6G,MCr8CG64G,CDq8CI,CAACz4G,OCr8CI,CAAChlC,EDq8CK,CAAE,ACr8CJ,CDq8CK,ACp8CjBw9I,CDo8CmB,GAAG54G,OAAO,CAACO,CCp8CjB,CAACroC,CAAC,GAAGiY,ODo8CyB,CAAE6vB,ACp8CnB,CAAC9nC,CAAC,EAC5B0gJ,GDm8CoD,CAACn4G,SCn8CxC,CAAC18C,CDm8CkD,ACn8CjD,CDm8CmDiU,CAAC,CAAE,ACn8CnDmY,IDm8CwDwwB,GAAG,CCn8CnD,CAAC58C,CDm8CqD,ACn8CpD,EAC5B60J,GDk8CqF,CAAE,CAAE,GAAG54G,KCl8C/E,CAAC9nC,CDk8CqF,ACl8CpF,CDk8CqFsoC,ECl8ClFrwB,QAAQ,CAACrC,CAAC,CDk8CqF,CAAE9V,ACj8CnH4gJ,CDi8CoH,CAAE,WCj8CzG,CAAC70J,CAAC,GAAGosB,QAAQ,CAACpC,CAC5B,CAAC;EDi8CJ,MC/7CG4rI,CD+7CI35G,KC/7CE,CAAC7vB,CD+7CI,CAACgwB,MC/7CG,CAAE04G,ED+7CI,CAAE,CAAC,CAAE,IC/7CC,CAAC;ADi8ChC,QC/7CIz2D,MAAM,CAACoB,cAAc,CAAEC,KAAK,EAAE02D,EAAG,CAAC;ADi8CtC,IAAMt5G,IC/7CF6e,KD+7CW,GAAA32D,AC/7CH,GAAGq5F,ID+7CA,CAAAvhD,CC/7CM,CAAC0iD,OD+7CP,GAAG,AC/7Cc,CAAC,CAAC;EDg8CjC7iD,MC97CG05G,KD87CQ,EAAE15G,KC97CE,CAAEoR,KD87CO,AC97CF,EAAEx5B,MAAM,EAAE8pE,MAAM,CAAC9pE,MAAM,EAAEmrE,KAAK,EAAE,IAAI,CAACjgG,IAAK,CAAC;ED+7CjEo9C,IC77CE,SD67CW,EAAEA;AAChB,CAAC;AAED,IAAME,EC97CH,OD87CY,GAAG,aAAc,IAAIzpB,OAAO,CAAC,CAAC;AAC7C,IAAM0pB,UAAU,GAAG,aAAc,IAAI7kC,OAAO,CAAC,CAAC;AAAC,IAEzC8kC,EC/7CH,IAAKohD,MAAM,CAACyC,ED+7CM,GAAA97F,OAAA,CAAAi4C,KC/7CY,KAAK,IAAI,CD+7CrB,GC/7CyB,IAAI,CAACx9C,IAAI,KAAKyG,uBAAY,EAAG;EDi8C1E,MC/7CGowJ,GD+7CHr5G,IC/7CU,CAAEohD,MAAM,EAAE9pE,GD+7CPzhB,GC/7Cc,CAAC,CD+7CV,EAAEoqC,QAAQ,EAAuB;IAAA,EC77CjD,ED67C4BC,UAAU,GAAApoC,SAAA,CAAAnS,MAAA,QAAAmS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,KAAK;IAAAzQ,EC37C9C+5F,MAAM,CAAC90E,MD27CuC,KC37C5B,ED27C4B0zB,CC37CzB,KAAK,SD27CoB;IAE/C,AC37CA,ID27CKn2B,KAAK,CAACC,OAAO,CAAEjU,KAAM,CAAC,EAAG;ICz7C9B4iJ,ED27CC,MAAM,IAAI7zJ,CC37CE,GAAG,IAAI,CD27CA,AC37CCpC,CD27CC,GC37CG,oDD27CqD,CAAC;IAE/E,AC37CAonD,KAAK,CAACt9B,WAAW,GAAG,KAAK;ID67CzB,AC37CAm/B,ID27CI,CAACtL,GC37CG,CAACmR,aD27Ca,EC37CE,CD27CC,AC37CC5F,ID27CG,eC37CgB,EAAEgtG,cAAc,EAAE7oG,iBAAkB,CAAC;EAEnF,CAAC,CD27CA,IAAI,CAAC9pD,IAAI,GAAG,EAAE;ECz7Cf,ED27CC,IAAI,CAAC8P,EC37CGwjJ,GD27CE,GAAGxjJ,CC37CEwjJ,CAAEj4D,GD27CC,GC37CK,EAAE9pE,MAAM,EAAG;ID47ClC,AC17CA,ID07CI,AC17CE2D,CD07CDglB,OC17CS,CD07CD,EC17CI49D,CD07CD59D,MC17CQ,CAAC5tB,CD07CD,KC17CO,CAAEmmI,cAAe,CAAC;ID27CjD,ACz7CA,IDy7CI,ACz7CCN,CDy7CAxoI,KAAK,GAAG7Z,KAAK,KAAKX,GCz7CI,CAACo3C,KDy7CI,ECz7CG,CDy7CAz2C,ACz7CCsiJ,KDy7CI,CAACxyJ,KCz7CM,CDy7CA,GAAGs6C,CCz7CEmhD,MAAM,CDy7CA,ACz7CCY,GDy7CE,CAAC,OCz7CQ,EAAG;ID07CzE,ECx7CCk2D,EDw7CG,CAACh4G,UAAU,GAAGA,MCx7CK,CAACoM,GDw7CI,ICx7CG,CAAC6rG,WAAW,GAAG/2D,MAAM,CAACY,WAAW;ID07ChE,ECz7CCq2D,EDy7CG,CAACj4G,KAAK,GAAGnsC,aCz7CY,CAACq4C,CDy7CE,MCz7CK,CAAC6rG,WAAW,GAAG/2D,MAAM,CAACY,WAAW;ID07ClE,ECx7CCk2D,EDw7CG,CAAC73G,YAAY,GAAG,EAAE,ECx7CC,CAAC/zB,WAAW,GAAG,IAAI;IDy7C1C,ECx7CC+rI,EDw7CG,CAAC/3G,OAAO,GAAGzyC,SAAS,ECx7CC,CAACye,WAAW,GAAG,IAAI;ID07C5C,ACx7CA,IDw7CI,CAAChD,OAAO,GAAG,CAAC;EAEjB,ECx7CC,IAAK83E,MAAM,CAACc,OAAO,KAAK,IAAI,EAAG;EDw7C/B,ICt7CCd,GDs7CD35F,GCt7CO,CAACy6F,OAAO,CDs7Cf,CAAAliD,CCt7CkB,IAAIhwB,UDs7CtB,kBCt7CuC,CAAE2nI,cAAc,CAACzgJ,CAAC,EAAEygJ,cAAc,CAAC50J,CAAE,CAAC;IDs7C7EyE,ACp7CA,GDo7CA;IAAAnG,KAAA,EAED,SAAAk/C,gBAAgBA,CAAA,EAAG,CAAC;EAAC,ECp7CpB;IDo7CoB/4C,GAAA;IAAA4S,ACl7CpB89I,GDk7CoB,EAErB,SAAA99I,IAAiB/Y,ICp7CM,CDo7CD,ACp7CEgqD,EDo7CC,MCp7CO,CAAC+sG,WAAW,CAAC/2J,KAAK,GAAG+/F,MAAM,CAACvyD,GAAG,CAAClf,OAAO;IACtEuoI,EDq7CA,IAAK72J,KAAK,KAAK,IAAI,EAAG,ACr7CA,CAACgqD,GDq7CG,CAAC/hC,ICr7CI,CAAC0pD,EDq7CE,EAAG,MCr7CK,CAAC3xE,KAAK,GAAG+/F,MAAM,CAACa,OAAO;IDu7ClE,ACt7CCi2D,sBAAsB,CAAC7sG,QAAQ,CAACzyB,MAAM,CAACv3B,KAAK,GAAG+/F,MAAM,CAACxoE,MAAM;EDs7C5D,ECr7CA6yB,QAAQ,CAAC6F,eAAe,CAAE8vC,MAAM,CAACc,OAAQ,CAAC;IDq7C1C16F,ACp7CAikD,GDo7CA,KCp7CQ,CAAC36B,KAAK,CAAC,CAAC;IDo7ChBzvB,ACn7CAoqD,KDm7CA,EAED,CCr7CS,CAAC6tG,ODq7CV94G,QAAQA,CAAEn/C,ECr7CkB,CAAEi2B,EDq7Cf,EAAG,ECr7CkB,EAAE,IAAI,EAAE2D,QAAQ,EAAEi9H,sBAAsB,EAAEM,cAAc,EAAE,IAAK,CAAC;MDu7CnG,IAAI,CAACp4G,KAAK,GAAG/+C,KAAK;ICr7ClB,EDu7CA,OAAO,IAAI;IAEZ;EAAC,ECv7CAg3J,wBAAwB,CAAChtG,QAAQ,CAAC+sG,WAAW,CAAC/2J,KAAK,GAAG+/F,MAAM,CAACc,OAAO,CAACvyE,OAAO;IDu7C5EnoB,ACt7CA6wJ,GDs7CA,qBCt7CwB,CAAChtG,QAAQ,CAAC2nB,UAAU,CAAC3xE,KAAK,GAAG+/F,MAAM,CAACa,OAAO;IDs7CnE5gG,ACr7CAg3J,KDq7CA,EAED,SAAA53G,QCv7CyB,CAAC4K,KDu7CZ5K,CAAEC,ECv7CkB,CAAC9nB,EDu7Cd,EAAElJ,ECv7CkB,CAACruB,EDu7Cd,EAAG,CCv7CgB,GAAG+/F,MAAM,CAACxoE,MAAM;IAC9D6yB,EDw7CA,IAAI,CAACpL,CCx7CG,CAACiR,UDw7CQ,CAAChsD,IAAI,ACx7CE,CDw7CA,ACx7CE87F,MAAM,CAACvyD,GAAI,CAAC;IACtC4c,IDu7C0B/K,ICv7ClB,CDu7CuB,ACv7CtB5vB,EDu7CiB4vB,GCv7CZ,CAAC,CDu7CgB,ACv7Cf;IAChB+K,IDs7CiC/7B,ICt7CzB,CDs7C8B,ACt7C7B4pI,EDs7CwB5pI,gBCt7CN,CAAE4H,MAAM,EAAE,IAAI,EAAE2D,QAAQ,EAAEo9H,wBAAwB,EAAEG,cAAc,EAAE,IAAK,CAAC;EAEtG,IDo7CwC,CAAE,CAAC;ECl7C3C,EDo7CA,OCp7CSe,gBAAgBA,CAAEl/H,MAAM,EAAE8W,QAAQ,EAAEsxD,KAAK,EAAEjgG,IAAI,EAAG;EDo7C1D,ECl7CA,IAAIoqC,MAAM,GAAG,IAAI;IDk7CjBplC,ACh7CA,GDg7CA,CCh7CMgyJ,cAAc,GAAK/2D,KAAK,CAAC0B,YAAY,KAAK,IAAI,GAAK9pE,MAAM,CAACo/H,sBAAsB,GAAGp/H,MAAM,CAACq/H,mBAAmB;IDg7CnHr4J,AC96CA,IAAKm4J,CD86CL,EAED,SAAA74G,ECh7CoB,KAAKzrC,SAAS,CDg7CjByrC,CAAA,ACh7CoB,EDg7CjB;MAEnB,ACh7CC/T,IDg7CG,CAACyT,CCh7CE,GAAGm5G,QDg7CO,CAAC7zJ,KCh7CM,CDg7CA,GAAG,CAAC;IAE7B,ACh7CC,CAAC,MAAM;EDg7CP,IC96CCinC,MAAM,GAAK61D,KAAK,CAAC0B,YAAY,KAAK,IAAI,GAAK4zD,iBAAiB,GAAGD,cAAc;ID86C9EtwJ,EC56CC,CD46CD,GC56CQikD,QAAQ,CAACkmF,oBAAoB,IAAIxgG,QAAQ,CAAC8H,WAAW,KAAK,IAAI,IAAIpvB,KAAK,CAACC,OAAO,CAAEqnB,QAAQ,CAAC4H,cAAe,CAAC,IAAI5H,QAAQ,CAAC4H,cAAc,CAACpzC,MAAM,KAAK,CAAC,IACtJwrC,QAAQ,CAACoL,eAAe,IAAIpL,QAAQ,CAACqL,iBAAiB,KAAK,CAAG,IAC9DrL,QAAQ,CAAC0K,QAAQ,IAAI1K,QAAQ,CAAC8M,SAAS,GAAG,CAAG,IAC7C9M,QAAQ,CAACtC,GAAG,IAAIsC,QAAQ,CAAC8M,SAAS,GAAG,CAAG,EAAG;IDy6C/C58C,ICv6CE,CDu6CF,EAED,SAAAua,IAAIA,CAAEsP,MAAM,EAAG;MAEd,EC16CE,ED06CE,CAACnlB,IAAI,GAAGmlB,MAAM,CAACnlB,IAAI;MACvB,IAAI,CAAC8P,KAAK,GAAG,IAAIqV,MAAM,CAACrV,KAAK,CAAC/P,WAAW,CAAEolB,MAAM,CAACrV,KAAM,CAAC;MACzD,EC16CE,ED06CE,CAACoqC,CC16CG05G,IAAI,GD06CC,AC16CE/sH,GD06CC1hB,GC16CK,CAACxU,ED06CA,CAACupC,CC16CG,OD06CK;MAC/B,IAAI,AC36CwB25G,CD26CvBlqI,GC36C2B,ED26CtB,CC36CyByhB,ED26CtBjmB,MAAM,AC36CwB,CD26CvBwE,AC36CwBhZ,IAAI,CD26CvB;MACzB,EC16CE,ED06CE,CAACwpC,CC16CC25G,SD06CS,GAAG3uI,MAAM,CAACg1B,AC16CA,GAAG83G,OD06CO,OC16CO,CAAE2B,IAAI,CAAE;MD46ClD,EC16CE,ED06CE,CAACv5G,CC16CEy5G,ID06CG,GAAG3uI,MAAM,CAACk1B,KAAK,AC16CC,KAAKlrC,SAAS,EAAG;MD26C3C,IAAI,ACz6CD2kJ,CDy6CEv5G,OAAO,GAAGp1B,MAAM,CAACo1B,CCz6CA,GAAG,CAAC,CAAC,CDy6CE;MAE7B,IC16CG03G,GD06CI,IAAI,OC16CM,CAAE2B,IAAI,CAAE,GAAGE,mBAAmB;ID46ChD,IC16CG;ED06CF,MCx6CE,IAAIC,cAAc,GAAGD,mBAAmB,CAAED,IAAI,CAAE;IDw6ClDpyJ,GAAA,CCt6CE,IAAKsyJ,cAAc,KAAK5kJ,SAAS,EAAG;IDs6CtC7T,KAAA,CCp6CGy4J,CDs6CJ,SAAAl5G,ICt6CkB,EDs6CZA,CAAEC,ACt6CajU,MDs6CP,ACt6Ca,CAACjxB,CDs6CZgD,ICt6CiB,CAAC,CAAC,GDs6CV,EAAEmiC,MAAM,EAAG;MAEnCD,ICv6CGg5G,EDu6CG,IAAI,IAAI,CAAC55G,QAAQ,ACv6CD,CAAE25G,IAAI,CAAE,GAAGE,cAAc;MDw6C/Ch5G,ICv6CG3P,EDu6CG,IAAIxyB,ECv6CC,CAAC5J,MDu6CO,CAACkrC,QAAQ,CCv6CA,CAAE,SAAS,EAAE85G,iBAAkB,CAAC;MDy6C5D,ECv6CE,GDu6CI,IAAIz4J,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAG,IAAI,CAACq9C,QAAQ,EAAE3+C,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;QAEjD,ACv6CCsrC,IDu6CG,CAAC/2B,CCv6CE,GAAGikJ,CDu6CA,CAAEj5G,MAAM,GAAGv/C,CAAC,CAAE,CCv6CA,EDu6CGqd,SAAS,CAAC9I,KAAK,CAAEirC,MAAM,GAAGx/C,CAAC,CAAE;MAEzD,ACv6CC;IAED,EDu6CA,OAAO,IAAI;IAEZ,ACv6CCsrC,MAAM,CAACvC,OAAO,GAAG8G,QAAQ,CAAC9G,OAAO;EDu6CjC,ECt6CAuC,MAAM,CAACsR,SAAS,GAAG/M,QAAQ,CAAC+M,SAAS;IDs6CrC12C,ACp6CA,GDo6CA,CCp6CKhF,IAAI,KAAKyG,uBAAY,EAAG;IDo6C7B5H,ECl6CCurC,GDk6CD,EAED,CCp6CQ,CAAC2K,IAAI,GDo6CbwJ,ACp6CkB5P,QAAQ,CDo6CjB4P,ACp6CkB7H,CDo6ChBrjC,KAAK,EAAG,ECp6CkB,KAAK,IAAI,GAAKs7B,QAAQ,CAAC+H,UAAU,GAAG/H,QAAQ,CAACoG,IAAI;IAErF,CAAC,CDo6CD,IAAI,CAAC1hC,ACp6CE,KDo6CG,CAACuE,GAAG,CAAEvE,KAAM,CAAC;MAEvB,ACp6CC+2B,MAAM,CDo6CA,ACp6CC2K,IDo6CG,ACp6CC,GAAKpG,QAAQ,CAAC+H,UAAU,KAAK,IAAI,GAAK/H,QAAQ,CAAC+H,UAAU,GAAGA,UAAU,CAAE/H,QAAQ,CAACoG,IAAI,CAAE;IDs6CpG,ACp6CC;EDo6CA,ECl6CA3K,MAAM,CAACiP,QAAQ,GAAG1K,QAAQ,CAAC0K,QAAQ;IDk6CnCr0C,ACj6CAolC,GDi6CA,GCj6CM,CAACqR,SAAS,GAAG9M,QAAQ,CAAC8M,SAAS;IDi6CrC58C,ACh6CAurC,KDg6CA,CCh6CM,CDk6CP,ACl6CQiC,GAAG,GAAGsC,GDk6Cd30B,KCl6CsB,CAACqyB,GAAG,GDk6CdryB,CAAExF,CAAC,EAAG;ICh6CjB41B,EDk6CA,IAAK,ACl6CC,CAACqM,GDk6CE,CAACgH,OCl6CQ,CDk6CA,ECl6CG9O,GDk6CE,CAAC,EAAG,ECl6CE,CAAC8H,WAAW;IACzCrM,IDm6CC,ECn6CK,CAACmM,EDm6CA,IAAIz3C,CAAC,GAAG,CAAC,EAAEsB,CAAC,ACn6CE,GDm6CC,ACn6CEuuC,IDm6CE,CAACzhB,GCn6CK,CAACqpB,CDm6CD,EAAEz3C,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,CCn6CE,CDm6CC;ICl6ChDsrC,MDo6CEmT,ACp6CI,CAAC/G,SDo6CK,CAACt6B,MCp6CU,GAAGyyB,QAAQ,CAAC6H,CDo6CH,CAAE,IAAI,EAAE13C,CAAE,CAAC,MCp6CQ;IAEnDsrC,MDm6CEmT,ACn6CI,CAACxD,SDm6CK,CAAC//B,KCn6CS,GAAG20B,IDm6CA,CAAEn6B,CAAE,CAAC,CCn6CG,CAACulC,eAAe;IACjD3P,MDo6CE,ACp6CI,CAAC4P,GDo6CD,CAACwE,KAAK,CAAE1/C,CAAC,EAAEy+C,ICp6CO,GAAG5O,GDo6CA,CAACj6B,CAAC,EAAE6oC,CCp6CI,CAACvD,QDo6CK,CAACz5C,CAAE,CAAC,MCp6CQ;IACrD6pC,IDq6CC,ECr6CK,CAAC6P,gBAAgB,GAAGtL,QAAQ,CAACsL,gBAAgB;IAEnD7P,EDq6CA,CAAC,GCr6CK,CAACuR,EDq6CA,IAAK,IAAI,CAAC8B,OCr6CQ,CDq6CA,ECr6CG9O,GDq6CE,CAAC,EAAG,ECr6CE,CAACgN,kBAAkB;IACvDvR,IDs6CC,ECt6CK,CAACkR,EDs6CA,IAAIx8C,GCt6CK,CDs6CJ,ECt6CO6vC,CDs6CJ,CAAC,EAAEvuC,GAAC,CCt6CQ,CAACk7C,CDs6CN,IAAI,CAACpuB,GCt6CU,EDs6CL,EAAEpuB,IAAC,GAAGsB,GAAC,EAAEtB,IAAC,EAAG,EAAG;ICp6ChD,IAAKmhG,EDs6CH3iD,GCt6CQ,CAACqkD,KDs6CA,CAACzlF,MCt6CW,KAAK,IAAI,IDs6CD,ACt6CKkuB,CDs6CH,IAAI,CCt6CK,CDs6CHtrC,ACt6CI8rF,IDs6CF,CAAC,iBCt6CuB,KAAK,IAAI,EAAG;MAE5E,IDq6CCttC,ACr6CKyyF,SDq6CI,CAAC/1H,QCr6Ca,GAAGivC,CDq6CJ,CAAEz0C,CAAE,CAAC,ICr6CO,CAACytH,UAAU,CAACrpH,GAAG,CAAEwxB,MAAO,CAAC;MAC5D2lG,IDs6CC,IAAI,CAACtxF,MAAM,CAAE3/C,ECt6CI,CAACmhG,CDs6CJ,EAAE3iD,ECt6CO,GAAG2iD,IDs6CD,CAACvrF,ACt6CK,CDs6CJ,EAAE4oC,SAAS,CAAC/8C,CAAC,EAAE+8C,SAAS,CAAChzB,CAAE,CAAC;ICp6CzD,IDs6CC;ICp6CD,EDs6CA,KCt6CO8f,MAAM;EAEd,IDs6CC,OAAO,IAAI;ECp6CZ,EDs6CA,OCt6CSwsH,YAAYA,CAAE/+H,MAAM,EAAE/C,MAAM,EAAE0tC,YAAY,EAAEy9B,KAAK,EAAEjgG,IAAI,EAAG;EDs6ClE,ECp6CA,IAAK63B,MAAM,CAACgQ,OAAO,KAAK,KAAK,EAAG;IDo6ChC7iC,ACl6CA,GDk6CA,CCl6CM6iC,OAAO,GAAGhQ,MAAM,CAAC+N,MAAM,CAACngB,IAAI,CAAEqP,MAAM,CAAC8Q,MAAO,CAAC;IDk6CnD/mC,ACh6CA,IAAKgpC,CDg6CL,EAED,ICl6Ca,KDk6Cbld,ACl6CmBkN,MAAM,CAACgB,KDk6CdlO,CAAEnW,ACl6CkB,CDk6CjB,EAAG,CCl6CkBqjB,MAAM,CAACsW,MAAM,IAAItW,MAAM,CAACuW,QAAQ,CAAE,EAAG;MDo6CxE,ACl6CC,IAAK,CDk6CA,ACl6CEvW,IDk6CE/4B,CAAC,CCl6CG,CAACgpC,CDk6CD,CAAC,EAAE1nC,CAAC,GAAG,ECl6CI,EDk6CA,CAAC8sB,CCl6CK2K,IDk6CA,EAAE/4B,ACl6CI,CDk6CH,ACl6CIipC,GDk6CD3nC,CAAC,EAAEtB,CAAC,EAAG,EAAG,ECl6CI,IAAIkB,IAAI,KAAKyG,uBAAc,MAAQ,CAAEoxB,MAAM,CAACmQ,aAAa,IAAIk0B,QAAQ,CAACb,gBAAgB,CAAExjC,MAAO,CAAC,CAAE,EAAG;QDo6CvJylB,ACl6CCzlB,MAAM,CAAC0P,EDk6CC,CAACrrB,YCl6Ca,CAAC4B,MDk6CK,CAAE,IAAI,EAAEhf,CAAE,CAAC,CCl6CA,CAAE0jE,YAAY,CAACztC,kBAAkB,EAAE8C,MAAM,CAAC3C,WAAY,CAAC;QDo6C/FooB,ACl6CC,IAAM7kB,KDk6CE,CAAC9N,ECl6CK,GAAG0wF,ODk6CI,ACl6CG,CDk6CD7mG,ACl6CEqb,CDk6CA,CAAC,ICl6CK,CAAEgI,MAAO,CAAC;QDo6C1C,ACn6CC,IDm6CG,ACn6CG8W,CDm6CF8P,MAAM,CAAE3/C,ACn6CE,CDm6CD,EAAEw+C,ACn6CEzlB,MAAM,CAAC8W,EDm6CA,CAACj6B,CAAC,EAAE4oC,ECn6CI,ODm6CK,CAAC/8C,CAAC,EAAE+8C,SAAS,CAAChzB,CAAE,CAAC;MAExD,ECn6CE,IAAKjD,KAAK,CAACC,OAAO,CAAEqnB,QAAS,CAAC,EAAG;MDq6CnC,ICn6CG,GDm6CI,CCn6CEqS,GDm6CE,GCn6CI,GAAGvoB,QAAQ,CAACuoB,MAAM;IDq6ClC,MCn6CI,KAAM,IAAIisB,CAAC,GAAG,CAAC,EAAEuqF,EAAE,GAAGx2G,MAAM,CAAC79C,MAAM,EAAE8pE,CAAC,GAAGuqF,EAAE,EAAEvqF,CAAC,EAAG,EAAG;EDm6CvD,UCj6CI,IAAM9pB,KAAK,GAAGnC,MAAM,CAAEisB,CAAC,CAAE;IDi6C7BjoE,GAAA,KCh6CI,IAAMwhD,aAAa,GAAG7X,QAAQ,CAAEwU,KAAK,CAACzB,aAAa,CAAE;IDg6CzD7iD,KAAA,EAED,CCh6CK,IAAK2nD,IDg6CVpyB,SCh6CuB,IAAIoyB,IDg6CVpyB,CAAE5f,CAAC,EAAG,KCh6CiB,CAACqzB,OAAO,EAAG;MDk6ClD,KAAM,GCh6CD,CDg6CK/oC,CAAC,ECh6CA2jE,CDg6CG,CAAC,EAAEriE,CAAC,GAAG,IAAI,CAAC8sB,ACh6CF,GAAG6pI,EDg6CI,EAAEj4J,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG,ACh6CJ,CAAE+4B,MAAM,EAAE2uB,aAAa,EAAEy5C,KAAK,EAAEjgG,IAAK,CAAC;QDk6ChFs9C,MCh6CIzlB,GDg6CK,CAAC3b,ECh6CA,CAACisB,cAAc,CAAE8gB,CDg6CE,CAAE,IAAI,EAAEnqD,ACh6CF,CDg6CI,CAAC,ACh6CH+4B,MAAM,EAAE/C,MAAM,EAAE0tC,YAAY,EAAE/pC,QAAQ,EAAEgqC,aAAa,EAAEtf,KAAM,CAAC;QDk6CnG7F,MCh6CI2L,GDg6CK,CAAC70B,ICh6CE,CAAC0iI,YDg6Cc,CAAEtiJ,CAAE,CAAC,GCh6CD,CAAEguD,YAAY,EAAE,IAAI,EAAE/pC,QAAQ,EAAEgqC,aAAa,EAAE5qC,MAAM,EAAEsrB,KAAM,CAAC;QDk6C7F,IAAI,CAAC1E,CCh6CD5mB,KDg6CO,CAAE/4B,ACh6CH,CDg6CI,ACh6CHspC,EDg6CKkV,SAAS,CAAC5oC,CAAC,ACh6CH,CAAEu0C,CDg6CG3L,OCh6CK,EDg6CI,ACh6CFzlB,CDg6CGt3B,CAAC,EAAE+8C,ECh6CA,EAAExoB,KDg6CO,CAACxK,ACh6CF,CDg6CI,CAAC,ACh6CHk4C,YAAY,EAAE/pC,QAAQ,EAAEgqC,aAAa,EAAEtf,KAAM,CAAC;MDk6CnG,MCh6CI;MDk6CJ,ICh6CG,GDg6CI,IAAI;IAEZ,ICh6CG,CAAC,MAAM,IAAKxU,QAAQ,CAAC9G,OAAO,EAAG;EDg6CjC,QC95CG,IAAM46B,eAAa,GAAGs0F,gBAAgB,CAAEl/H,MAAM,EAAE8W,QAAQ,EAAEsxD,KAAK,EAAEjgG,IAAK,CAAC;ID85C1EgF,GAAA,GC55CG6yB,MAAM,CAACsQ,cAAc,CAAE8gB,QAAQ,EAAEpxB,MAAM,EAAE/C,MAAM,EAAE0tC,YAAY,EAAE/pC,QAAQ,EAAEgqC,eAAa,EAAE,IAAK,CAAC;ID45CjG5jE,KAAA,CC15CGoqD,CD45CJ,OC55CY,CAAC6tG,CD45Cb3hI,iBC55C+B,CD45CbA,AC55CeqtC,CD45CbhuD,CAAC,EAAG,QC55CqB,EAAE,IAAI,EAAEikB,QAAQ,EAAEgqC,eAAa,EAAE5qC,MAAM,EAAE,IAAK,CAAC;MD85C3F,IC55CGA,CD45CG,IAAI/4B,CAAC,AC55CF,CAACspC,ED45CI,CAAC,EAAEhoC,CAAC,GAAG,IAAI,AC55CF,CD45CG8sB,AC55CD+7B,KD45CM,EAAEnqD,CAAC,AC55CD,EAAE+4B,CD45CEz3B,CAAC,EAAEtB,CAAC,CC55CA,CD45CG,CC55CDg2B,CD45CI,KC55CE,EAAE0tC,YAAY,EAAE/pC,QAAQ,EAAEgqC,eAAa,EAAE,IAAK,CAAC;QD85C/FnlB,AC55CC,SD45CQ,CAACphC,mBAAmB,CAAE,IAAI,EAAEpd,CAAE,CAAC;MC15CxC,ED45CAw+C,SAAS,CAACnoB,kBAAkB,CAAE3gB,CAAE,CAAC;IC15ClC,ID45CC,IAAI,CAACiqC,MAAM,CAAE3/C,CAAC,EAAEw+C,SAAS,CAAC5oC,CAAC,EAAE4oC,SAAS,CAAC/8C,CAAC,EAAE+8C,SAAS,CAAChzB,CAAE,CAAC;IC15CxD,ED45CA,EC55CM6O,QAAQ,GAAGtB,MAAM,CAACsB,QAAQ;IAEhC,ED45CA,GC55CM,ID45CC,AC55CGr6B,CAAC,GD45CA,AC55CG,CAAC,EAAEsB,CAAC,GAAG+4B,QAAQ,CAACh2B,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;ID85CrD,EC55CE83J,YAAY,CAAEz9H,QAAQ,CAAEr6B,CAAC,CAAE,EAAEg2B,MAAM,EAAE0tC,YAAY,EAAEy9B,KAAK,EAAEjgG,IAAK,CAAC;ED45CjE,EC15CA;EAED,EDw5CCgF,GAAA;ECt5CD,EDs5CCnG,KAAA,EAED,ACx5CS04J,SDw5CT3/I,GAAGA,CAAE/Y,ICx5CqB04J,CDw5ChB,ACx5CkBpkJ,EDw5CH,GCx5CQ,EAAG;IAEnC,EDs5CwB,ECt5ClBw7B,EDs5CK3yB,MAAM,ACt5CH,GDs5CG1G,ACt5CAnC,KAAK,CAACC,GDs5CN,CAAAjQ,ECt5CY,IDs5CZ,QAAAmS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;ICp5CrBq5B,EDs5CA,MCt5CQ,CAAC77B,mBAAmB,CAAE,SAAS,EAAEykJ,iBAAkB,CAAC;MDu5C5D,IAAI,CAAClkJ,KAAK,CAACuE,GAAG,CAAE/Y,KAAK,EAAEmd,MAAO,CAAC;ICr5C/B,EDu5CA,OAAO,IAAI;IAEZ;EAAC,ECv5CA,KAAM,IAAMguB,EAAE,IAAIwrH,cAAc,EAAG;IDu5CnCxwJ,ECr5CC,CDq5CD,GCr5CO+pC,KAAK,GAAGymH,cAAc,CAAExrH,EAAE,CAAE;IDq5CnCnrC,ECn5CC,GDm5CD,CCn5COqV,CDq5CR,GCr5CY,GAAGf,GDq5Cf+F,ECr5CoB,CAAC9F,MAAM,CAACc,EDq5ChBgF,CAAElG,CCr5CkB,IDq5Cb,EAAE0rC,SAAS,EAAG;MAEhC,ACr5CC,IDq5CG7/C,ACr5CEqV,IAAI,CDq5CD,GAAG,ACr5CE66B,IDq5CE,CAAC17B,ACr5CE,EAAG,GDq5CA,CAAEL,KAAK,GAAG,IAAI,CAACyqC,QAAQ,GAAGiB,SAAS,CAAE;MAE3D,ECr5CE,EDq5CG,ECr5CG+4G,EDq5CC,CAAC/5G,UAAU,CCr5CE,CDq5CC7+C,ECr5CEkwC,GDq5CG,ECr5CE,CDq5CCh3B,ACr5CC7D,IAAI,CAAE,MDq5CI,CAAErV,KAAK,EAAE,IAAI,CAACwU,KAAM,CAAC;MAE/D,ECt5CEokJ,KDs5CK54J,KAAK,ICt5CI,CAACqrB,OAAO,CAAC,CAAC;IDw5C3B,ICv5CG,OAAO6kB,KAAK,CAAE76B,IAAI,CAAE;EDu5CtB,ICr5CC;IDq5CDlP,ACn5CA,GDm5CA;ECj5CD,EDi5CCnG,KAAA,EAED,SAAAoa,YAAYA,CAAEjG,KAAK,EAAE0rC,SAAS,EAAE7/C,KAAK,EAAG;ACj5CzC,MDm5CE,IAAK,IAAI,CAAC6+C,UAAU,EAAG7+C,KAAK,GAAG0Z,SAAS,CAAE1Z,KAAK,EAAE,IAAI,CAACwU,KAAM,CAAC;ACj5C/D,IAAMqkJ,EDm5CJ,IAAI,CAACrkJ,KAAK,CAAEL,ACn5CK,GAAAmS,EDm5CA,GAAG,IAAI,CAACs4B,KCn5CR,CAAAt4B,EDm5CgB,GAAGu5B,SAAS,CAAE,ACn5C9B,CAAAv5B,EDm5CiCtmB,KAAK,QCn5CtC,CAAAsmB,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,KAChB5c,qBAAU,EAAIC,sBAAW,GACzBC,oBAAS,EAAII,uBAAY,GACzBF,qBAAU,EAAIG,wBAAa,GAC3BJ,yBAAc,EAAIE,4BAAiB,GAEnCJ,sBAAW,EAAID,qBAAU,GACzBM,uBAAY,EAAIJ,oBAAS,GACzBK,wBAAa,EAAIH,qBAAU,GAC3BC,4BAAiB,EAAIF,yBAAc,CACrC;AAED,MDy4CE,GCz4COivJ,IDy4CA,IAAI,ECz4CMA,CAAE31I,EAAE,EAAEooC,UAAU,EAAG;EAAA,ED24CrC,EC34CqCwtG,WAAA;ED24CpC,ACz4CD,SAASC,WAAWA,CAAA,EAAG;IDy4CtB7yJ,ACv4CA,GDu4CA,CCv4CI8yJ,MAAM,GAAG,KAAK;IDu4ClBj5J,ACr4CA,IAAMykB,CDq4CN,EAED,ECv4CY,GAAG,IDu4CflH,ACv4CmBiO,IDu4CfjO,CAAEpJ,KAAK,EAAG,MCv4CY,CAAC,CAAC;IAC3B,EDw4CA,ECx4CI+kJ,EDw4CArjJ,CAAC,GAAG,IAAI,CAACrB,KAAK,ACx4CE,CDw4CAL,ECx4CG,GDw4CE,CCx4CE,EDw4CC,IAAI,CAACyqC,QAAQ,CAAE;ICv4C3C,EDy4CA,ECz4CMu6G,EDy4CD,IAAI,CAACt6G,UAAU,ACz4CG,EDy4CAhpC,CAAC,ACz4CE,GDy4CCqD,CCz4CGsS,UDy4CQ,CAAE3V,CAAC,EAAE,IAAI,ACz4CV,CDy4CWrB,ACz4CT,CAAC,EAAE,CAAC,CDy4CW,CAAC,ACz4CV,CAAC,EAAE,CAAE,CAAC;IAEnD,EDy4CA,KCz4CO,EDy4CAqB,CAAC;IAET,ECz4CE0yH,OAAO,EAAE,SAATA,OAAOA,CAAa6wB,SAAS,EAAG;EDy4CjC,MCv4CE,IAAKF,gBAAgB,KAAKE,SAAS,IAAI,CAAEH,MAAM,EAAG;IDu4CpD9yJ,GAAA,GCr4CGgd,EAAE,CAACi2I,SAAS,CAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAU,CAAC;IDq4C7Dp5J,KAAA,CCp4CGk5J,CDs4CJ,SAAAh/I,IAAIA,CAAE/F,CCt4Cc,GAAGilJ,CDs4CZ,EAAEvjJ,CAAC,EAAG,GCt4Ce;MDw4C/B,ECt4CE,EDs4CG,IAAI,CAACgpC,UAAU,EAAGhpC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;MAErD,ACt4CC,CAAC,GDs4CE,CAACA,KAAK,CAAEL,KAAK,GAAG,IAAI,CAACyqC,QAAQ,CAAE,GAAG/oC,CAAC;MAEvC,ACt4CCwjJ,ODs4CM,ECt4CG,EDs4CC,ACt4CC,SAAXA,SAASA,CAAaC,IAAI,EAAG;IDw4C/B,ICt4CGL,MAAM,GAAGK,IAAI;EDs4Cf,ICp4CC,CAAC;IDo4CFnzJ,ECl4CC+hI,CDk4CD,OCl4CS,EAAE,SAAVA,QAAQA,CAAazoI,CAAC,EAAEyC,CAAC,EAAEiW,CAAC,EAAEhY,CAAC,EAAEk4C,kBAAkB,EAAG;IDk4CvDr4C,ICh4CE,CDg4CF,EAED,CCl4CQq4C,QDk4CR76B,IAAIA,CAAErJ,KAAK,ACl4Ce,EDk4CZ,GCl4CiB,IAAI,EAAG;MDo4CrC,IAAIzS,ACl4CDjC,CDk4CE,ACl4CD,GDk4CI,CCl4CAU,CAAC,EDk4CG,CAACqU,KAAK,CAAEL,KAAK,GAAG,IAAI,CAACyqC,QAAQ,GAAG,CAAC,CAAE;MAE/C,IAAK,ACp4CM18C,CAAC,GDo4CH,CAAC28C,ACp4CM1+C,CAAC,SDo4CG,EAAGuB,CAAC,GAAGwX,WAAW,CAAExX,CAAC,EAAE,IAAI,CAAC8S,KAAM,CAAC;MAEvD,ICt4CmB2D,CAAC,EDs4CbzW,CAAC,CCt4CgBvB,CAAC;IDw4C1B,ICt4CG;EDs4CF,MCp4CEskB,KAAK,CAAC1L,GAAG,CAAEtZ,CAAC,EAAEyC,CAAC,EAAEiW,CAAC,EAAEhY,CAAE,CAAC;IDo4CzBgG,GAAA,CCl4CE,IAAKgzJ,iBAAiB,CAACl8I,MAAM,CAAEwH,KAAM,CAAC,KAAK,KAAK,EAAG;IDk4CrDzkB,KAAA,CCh4CGmjB,CDk4CJ,CCl4CM,CAACqkH,ODk4CPrtH,GCl4CiB,CDk4CbA,ACl4Ce1a,CDk4Cb0U,ACl4Cc,EAAEjS,CAAC,EDk4CZ,ACl4CciW,CAAC,CDk4CbzW,CAAC,ACl4CcvB,CAAE,CDk4Cb,ACl4Cc;MDo4C9B,IAAK,ACn4CFg5J,IDm4CM,CAACt6G,UAAU,EAAGn9C,ACn4CH,CDm4CI,ACn4CH6Y,GDm4CMb,CCn4CF,CAAE+K,KAAM,CAAC,CDm4CE,CAAE/iB,CAAC,EAAE,IAAI,CAAC8S,KAAM,CAAC;MAErD,ECn4CE,EDm4CE,CAACA,KAAK,CAAEL,KAAK,GAAG,IAAI,CAACyqC,QAAQ,GAAG,CAAC,CAAE,GAAGl9C,CAAC;MAE3C,ACn4CC,CAAC,MDm4CK,IAAI;IAEZ,ECn4CE0C,KAAK,EAAE,SAAPA,KAAKA,CAAA,EAAc;EDm4CpB,MCj4CE60J,MAAM,GAAG,KAAK;IDi4ChB9yJ,GAAA,CC/3CE+yJ,gBAAgB,GAAG,IAAI;ID+3CzBl5J,IC93CEm5J,CD83CF,EAED,SAAAhsI,IAAIA,CAAEhZ,ACh4Cc,CAAC4E,GAAG,CDg4Cb,ACh4Ce,CAAE,CDg4Cd,ACh4Ce,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC;MDk4CzC,ACh4CC,IDg4CG0S,CAAC,GAAG,IAAI,CAACjX,KAAK,CAAEL,KAAK,GAAG,IAAI,CAACyqC,QAAQ,GAAG,CAAC,CAAE;IC93C/C,CAAC,CDg4CD,IAAK,IAAI,CAACC,UAAU,EAAGpzB,CAAC,GAAGvS,WAAW,CAAEuS,CAAC,EAAE,IAAI,CAACjX,KAAM,CAAC;EC93CxD,IDg4CC,OAAOiX,CAAC;EC93CT,EDg4CA,OCh4CS8tI,WAAWA,CAAA,EAAG;EDg4CtB,EC93CA,IAAIN,MAAM,GAAG,KAAK;ID83ClB9yJ,AC73CA,GD63CA,CC73CIqzJ,QAAQ,GAAG,KAAK;ID63CpBx5J,AC33CA,IAAIy5J,CD23CJ,EAED,SAAA7tI,IAAIA,AC73CiB,CD63CfzX,EC73CkB,GD63Cb,CC73CiB,CD63CfsX,CAAC,EAAG;IC53ChB,ED83CA,EC93CIiuI,ED83CC,IAAI,CAAC76G,SC93CU,CD83CA,EAAGpzB,AC93CA,CD83CC,GAAG/R,AC93CA,SD83CS,CAAE+R,CAAC,EAAE,IAAI,CAACjX,KAAM,CAAC;IC73CrD,ED+3CA,EC/3CImlJ,ED+3CA,CAACnlJ,KAAK,CAAEL,KAAK,GAAG,AC/3CC,GAAG,CD+3CA,CAACyqC,EC/3CG,MD+3CK,GAAG,CAAC,CAAE,GAAGnzB,CAAC;IC73C3C,ED+3CA,KC/3CO,ED+3CA,IAAI;IAEZ,EC/3CEmuI,WAAW,EAAE,SAAbA,WAAWA,CAAa55J,KAAK,EAAG;ED+3CjC,MC73CE,IAAKw5J,QAAQ,KAAKx5J,KAAK,EAAG;ID63C5BmG,GAAA,GC33CG,IAAM0zJ,GAAG,GAAGtuG,UAAU,CAACxxC,GAAG,CAAE,kBAAmB,CAAC;ID23CnD/Z,KAAA,CCz3CG,CD23CJ,GC33CSw5J,MD23CTpsI,EC33CiB,ED23CbA,AC33CgB,CD23CdjZ,KAAK,EAAG;MAEb,IAAIuX,CAAC,CC33CDmuI,ED23CI,CC33CD,CAACC,ED23CI,CAACtlJ,KAAK,CAAEL,KAAK,AC33CH,CAAE0lJ,ED23CI,CC33CD,CAACE,ED23CI,CAACn7G,QAAQ,GAAG,AC33CF,CD23CG,CAAE,AC33CHi7G,GAAG,CAACG,eAAgB,CAAC;MD63CjE,IAAK,AC33CF,CAAC,GD23CK,CAACn7G,EC33CA,QD23CU,EAAGnzB,CAAC,GAAGxS,WAAW,CAAEwS,CAAC,EAAE,IAAI,CAAClX,KAAM,CAAC;MAEvD,MC33CIqlJ,CD23CGnuI,CAAC,CC33CD,CAACouI,cAAc,CAAED,GAAG,CAACE,cAAc,EAAEF,GAAG,CAACI,uBAAwB,CAAC;ID63C1E,MC33CI;ED23CH,QCz3CG,IAAMC,QAAQ,GAAGP,iBAAiB;IDy3CrCxzJ,GAAA,GCx3CGwzJ,iBAAiB,GAAG,IAAI;IDw3C3B35J,KAAA,CCv3CG,CDy3CJ,GCz3CQ,CAACkoI,KDy3CTr8G,GCz3CiB,CDy3CbA,ACz3CequI,CDy3Cb/lJ,KAAK,EAAEuX,ACz3Ce,CDy3Cd,ACz3Ce,EDy3CZ;MAEhB,ECz3CE,EDy3CG,IAAI,CAACmzB,UAAU,EAAGnzB,CAAC,GAAGhS,SAAS,CAAEgS,CAAC,EAAE,IAAI,CAAClX,KAAM,CAAC;MAErD,ECz3CEglJ,EDy3CE,CAAChlJ,KAAK,ACz3CA,CDy3CEL,ECz3CCnU,GDy3CI,ECz3CC,CDy3CE,IAAI,CAAC4+C,QAAQ,GAAG,CAAC,CAAE,GAAGlzB,CAAC;MAE3C,ACz3CC,CAAC,MDy3CK,IAAI;IAEZ,ECz3CEujI,WAAW,EAAE,SAAbA,WAAWA,CAAA,EAAc;EDy3C1B,MCv3CE,OAAOuK,QAAQ;IDu3CjBrzJ,ECr3CC,CDq3CD,ACr3CE;IDq3CFnG,ECn3CCsoI,GDm3CD,EAED,ECr3CS,EAAE,KDq3CX3oF,ICr3CE2oF,CDq3CG3oF,CAAExrC,KAAK,ACr3CHm0H,CAAatxF,CDq3CRnhC,CAAC,EAAEnU,CAAC,EAAG,ECr3CU,EAAG;MDu3CjCyS,ECr3CE,GDq3CG,CCr3CE6iC,GDq3CE,IAAI,CAAC4H,CCr3CE,EAAG,KDq3CG;MAEtB,IAAK,ACr3CFlY,IDq3CM,CAACmY,CCr3CD,CAAE17B,EAAE,CAACg3I,KDq3CM,EAAG,GCr3CE,CAAC;QDu3CzBtkJ,ACr3CC,CDq3CA,ACr3CC,GDq3CE6D,GCr3CI,MDq3CK,CAAE7D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;QAC9B9S,CAAC,CCp3CCmlC,EDo3CEntB,KCp3CK,CAAEyJ,EAAE,CDo3CA,ACp3CCg3I,CDo3CCz4J,CAAC,EAAE,IAAI,CAAC8S,CCp3CE,CAAC,GDo3CG,CAAC;MAE/B,ECp3CE;MDs3CF,ACp3CC,CAAC,GDo3CE,CAACA,KAAK,CAAEL,KAAK,GAAG,CAAC,CAAE,GAAG0B,CAAC;MAC3B,ACn3CC0yH,IDm3CG,CAAC/zH,ECn3CG,EAAE,CDm3CA,CAAEL,KAAK,ECn3ChBo0H,CDm3CmB,CAAC,CAAE,GAAG7mI,CAAC,ACn3CnB6mI,CAAa6xB,SAAS,EAAG;MDq3CjC,ECn3CE,IAAKX,CDm3CA,IAAI,WCn3CY,KAAKW,SAAS,IAAI,CAAEnB,MAAM,EAAG;IDq3CrD,MCn3CI91I,EAAE,CAACi3I,SAAS,CAAEA,SAAU,CAAC;EDm3C5B,QCl3CGX,gBAAgB,GAAGW,SAAS;IDk3C/Bj0J,GAAA,CCh3CE;IDg3CFnG,EC92CC,CAAC,ED82CF,EAED,SAAA4/C,MAAMA,CAAEzrC,KAAK,EAAE0B,CAAC,EAAEnU,CAAC,EAAE+pB,CAAC,EAAG;MAExBtX,ACh3CCkmJ,KDg3CI,ECh3CG,EDg3CC,ACh3CC,IDg3CG,CAACz7G,ICh3Cby7G,IDg3CqB,GCh3CdA,CAAatjH,SAAS,EAAG;MDk3CjC,ECh3CE,EDg3CG,ECh3CEyiH,EDg3CE,CAAC36G,KCh3CK,EAAG9H,GDg3CE,EAAG,ICh3CI,GAAG8hH,aAAa,CAAE9hH,SAAS,CAAE;QDk3CvDlhC,ACh3CC,CDg3CA,GAAG6D,ACh3CEggJ,SDg3CO,CAAE7jJ,CAAC,EAAE,GCh3CI,CDg3CA,CAACrB,GCh3CIuiC,EDg3CE,CAAC,MCh3CM,EAAG;QDi3CvCr1C,CAAC,CC/2CC,ED+2CEgY,MC/2COq9B,GD+2CE,CAAEr1C,CAAC,EAAE,EC/2CE,ED+2CE,CAAC8S,KAAM,CAAC;QAC9BiX,CAAC,GAAG/R,AC92CD,KAAKhQ,ID82CK,CAAE+hB,CAAC,EAAE,IAAI,CAACjX,KAAM,CAAC,EC92CZ;MDg3CnB,QC92CK2O,EAAE,CAAC4zB,SAAS,CAAE5zB,EAAE,CAACm3I,KAAM,CAAC;MDg3C7B,IAAI,CAAC9lJ,GC/2CA,ED+2CK,CAAEL,KAAK,GAAG,CAAC,CAAE,GAAG0B,CAAC;MAC3B,IAAI,CAACrB,CC92CD,ID82CM,CAAEL,AC92CHxK,KD82CQ,GAAG,CAAC,CAAE,GAAGjI,CAAC,QC92CP;MD+2CpB,IAAI,CAAC8S,GC72CA2O,ED62CK,AC72CH,CD62CKhP,AC72CJ4iC,KD62CS,GAAG,CAAC,AC72CJ,CD62CM,AC72CJ5zB,EAAE,CD62CKsI,AC72CJ8uI,CD62CK,KC72CE,CAAC;MD+2C9B,OAAO,CC92CF,GD82CM;IAEZ,QC92CK,KAAK3wJ,oBAAS;ED82ClB,YC52CKuZ,EAAE,CAAC4zB,SAAS,CAAE5zB,EAAE,CAACq3I,IAAK,CAAC;ID42C5Br0J,GAAA,OC32CK;ID22CLnG,KAAA,EAED,CC32CK,KAAK6J,GD22CVi2C,OAAOA,CAAE3rC,KAAK,EAAE0B,CAAC,EAAEnU,CAAC,EAAE+pB,CAAC,AC32CC,ED22CCC,CAAC,EAAG;MAE5BvX,KAAK,GC32CAgP,CD22CI,CC32CF,CAAC4zB,ED22CK,CAAC6H,MC32CG,CAAEz7B,CD22CG,CC32CD,CAACs3I,MAAO,CAAC;MD62C9B,IAAK,IAAI,AC52CJ,CD42CK57G,UAAU,EAAG;QAEtBhpC,CAAC,GAAG6D,AC52CD,KAAK5P,ID42CK,CAAE+L,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC,EC52CZ;QD62ClB9S,CAAC,GAAGgY,EC32CAyJ,EAAE,CAAC4zB,ID22CM,CAAEr1C,CAAC,EAAE,CC32CF,CAAEyhB,ED22CI,AC32CF,CD22CG3O,AC32CFkmJ,KD22CQ,AC32CF,CD22CG,AC32CF;QD42C5BjvI,CAAC,GAAG/R,EC32CA,OD22CS,CAAE+R,CAAC,EAAE,IAAI,CAACjX,KAAM,CAAC;QAC9BkX,CAAC,GAAGhS,AC12CD,KAAK3P,ID02CK,CAAE2hB,CAAC,EAAE,IAAI,CAAClX,KAAM,CAAC,SC12CL;MD42C1B,QC12CK2O,EAAE,CAAC4zB,SAAS,CAAE5zB,EAAE,CAACw3I,MAAO,CAAC;MD42C9B,IAAI,CAACnmJ,GC32CA,ED22CK,CAAEL,KAAK,GAAG,CAAC,CAAE,GAAG0B,CAAC;MAC3B,IAAI,CAACrB,CC12CD,ID02CM,CAAEL,AC12CHnK,KD02CQ,GAAG,CAAC,CAAE,GAAGtI,CAAC,SC12CN;MD22CrB,IAAI,CAAC8S,GCz2CA2O,EDy2CK,ACz2CH,CDy2CKhP,ACz2CJ4iC,KDy2CS,GAAG,CAAC,ACz2CJ,CDy2CM,ACz2CJ5zB,EAAE,CDy2CKsI,ACz2CJmvI,CDy2CK,MCz2CG,CAAC;MD02C/B,IAAI,CAACpmJ,GCz2CA,EDy2CK,CAAEL,KAAK,GAAG,CAAC,CAAE,GAAGuX,CAAC;MAE3B,MCz2CI,CDy2CG,IAAI,ACz2CFzhB,wBAAa;ID22CvB,UCz2CMkZ,EAAE,CAAC4zB,SAAS,CAAE5zB,EAAE,CAAC03I,QAAS,CAAC;EDy2ChC,YCx2CK;IDw2CL10J,GAAA,KCt2CI;IDs2CJnG,KAAA,EAED,GCt2CMmjB,EAAE,CAAC4zB,GDs2CTgJ,MCt2CkB,CAAE58B,CDs2CZ48B,CAAEpsB,ACt2CY,CAAC8mI,MAAO,CDs2CZ,ACt2Ca,EDs2CV;MAEpB,IAAI,ACt2CD,CDs2CEv7G,gBAAgB,GAAGvrB,QAAQ;MAEhC,ICt2CG+lI,GDs2CI,IAAI,SCt2CQ,GAAG3iH,SAAS;IDw2ChC,ICt2CG;EDs2CF,ICp2CC,CAAC;IDo2CF5wC,ECl2CCkzJ,CDk2CD,QCl2CU,EAAE,SAAXA,SAASA,CAAaC,IAAI,EAAG;IDk2C9Bt5J,ICh2CEi5J,CDg2CF,EAED,GCl2CS,GAAGK,GDk2CZh/I,CCl2CgB,IDk2CXA,CAAA,EAAG;MAEP,ACl2CC,CAAC,MDk2CK,IAAI,IAAI,CAAC7V,WAAW,CAAE,IAAI,CAAC+P,KAAK,EAAE,IAAI,CAACoqC,QAAS,CAAC,CAACrkC,IAAI,CAAE,IAAK,CAAC;IAEtE,ECl2CE2tH,QAAQ,EAAE,SAAVA,QAAQA,CAAav6G,KAAK,EAAG;EDk2C9B,MCh2CE,IAAKgsI,iBAAiB,KAAKhsI,KAAK,EAAG;IDg2CrCxnB,GAAA,GC91CG,IAAKqzJ,QAAQ,EAAG;ID81CnBx5J,KAAA,EAED,CC91CK2tB,KAAK,GD81CVzF,AC91Ca,CAAC,GAAGyF,ED81CXzF,CAAA,EAAG,AC91Ca;MDg2CrB,IAAMN,AC91CH,ID81CO,GAAG;QACZg3B,EC71CEz7B,EAAE,CAAC23I,GD61CG,EAAE,IAAI,CAACl8G,AC71CA,CAAEjxB,KAAM,CAAC,CD61CD;QACvBxsB,EC71CEw4J,ED61CE,EAAE,IAAI,CAACnlJ,KAAK,CAAC/P,EC71CE,GAAGkpB,KAAK,CD61CC,CAACjpB,IAAI;QACjC8P,AC51CC,KD41CI,EAAEgU,KAAK,CAACI,IAAI,CAAE,IAAI,CAACpU,KAAM,CAAC;MC11C/B,CAAC,CD21CDqqC,UAAU,EAAE,IAAI,CAACA;MAClB,AC11CCz6C,CD01CA,IC11CK,EAAE,SAAPA,KAAKA,CAAA,EAAc;MD41CpB,EC11CE60J,ED01CG,IAAI,AC11CD,CD01CEv0J,EC11CC,ED01CG,GC11CE,ED01CG,EAAE,EAAGkjB,IAAI,CAACljB,IAAI,GAAG,IAAI,CAACA,IAAI;MAC7C,ECz1CE+0J,EDy1CG,IAAI,CAAC16G,KAAK,ICz1CG,CDy1CEnsC,ECz1CC,IAAI,SDy1CU,EAAGgV,IAAI,CAACm3B,KAAK,GAAG,IAAI,CAACA,KAAK;MAE7D,EC11CE26G,KD01CK9xI,IAAI,OC11CO,GAAG,IAAI;ID41C1B,IC31CG+xI,iBAAiB,GAAG,IAAI;ED21C1B,MC11CEH,QAAQ,GAAG,KAAK;AD01ClB,KAIF,CC51CG;AD41CH,IAEMx5G,AC51CJ,CAAC,kBD41CsB,GAAAt5C,OAAA,CAAAs5C,mBAAA,0BAAAC,gBAAA;EAExB,AC51CA,SD41CAD,oBAAaxrC,KAAK,EAAEoqC,QAAQ,EAAEC,UAAU,EAAG;EC11C3C,ED01C2C74C,OC11ClC+0J,QD01CkC,KC11CrBA,CAAA,CD01CqB/6G,CC11ClB,kBD01CkB;IAAA,ACx1C1C,IAAIi5G,GDw1CsCtvI,GCx1ChC,GAAG,IDw1C6B,CCx1CxB,MDw1CwBq2B,mBAAA,GAEnC,IAAIvmC,SAAS,CAAEjF,KAAM,CAAC,EAAEoqC,QAAQ,EAAEC,UAAU;EAEpD,EC11CC,IAAIm8G,kBAAkB,GAAG,IAAI;ED01C7BpwI,ECz1CA,IAAIqwI,GDy1CJ,CAAAj7G,cCz1CsB,GAAG,EDy1CzB,EAAAC,ACz1C6B,gBDy1C7B;EAAA,ECx1CA,IAAIi7G,CDw1CJ90J,YAAA,CAAA45C,GCx1CqB,GAAG,IAAI,SDw1C5B;AAAA,EANgCrB,ECj1ChC,IAAIw8G,SDi1C2C,aCj1CrB,GAAG,IAAI;ADi1Cc,IAU3Cj7G,AC11CJ,IAAIk7G,gBD01CoB,EC11CF,CD01CE10J,EC11CC,IAAI,CD01CL,CAAAw5C,oBAAA,0BAAAC,iBAAA;EAEzB,EC31CC,IAAIk7G,GD21CLn7G,gBC31CwB,GAAG,ED21Cd1rC,EC31CkB,GD21Cb,EAAEoqC,QAAQ,EAAEC,UAAU,EAAG;IAAA74C,AC11C1C,IAAIs1J,WD01CsC,OAAAp7G,CC11CnB,GAAG,IAAI,YD01CY;IAAA,ACz1C1C,IAAIq7G,GDy1CsC5xI,UAAA,MCz1CnB,CDy1CmBu2B,ECz1ChB,IAAI,cDy1CY,GAEnC,IAAI5mC,UAAU,CAAE9E,KAAM,CAAC,EAAEoqC,QAAQ,EAAEC,UAAU;EAErD,EC31CC,OAAO;ED21CPj0B,ICz1CC09G,KDy1CD,CAAApoF,CCz1CQ,EAAE,SAATooF,OAAOA,CDy1CR,ACz1CqBkzB,EDy1CrBr7G,SCz1CgC,EAAG,MDy1CnC;EAAA,MCv1CE,CDu1CF/5C,GCv1CO,CAAE6yJ,MAAM,EDu1Cf,ACv1CkB,CDu1ClB/4G,oBAAA;AAAA,EANiCvB,QC/0C9B,IAAK68G,GD+0CwC,QC/0C7B,EAAG;AD+0C0B,IAU5Cp7G,QCv1CA1Z,MAAM,CAAEvjB,EAAE,CAACs4I,SDu1CgB,GAAA/0J,ACv1CH,CAAC,MDu1CE,CAAA05C,2BAAA,0BAAAC,iBAAA;EAEhC,QCv1CI,CDu1CJD,ACv1CK,MAAM,sBDu1CE5rC,KAAK,EAAEoqC,QAAQ,EAAEC,UAAU,EAAG;IAAA74C,QCr1CtC6gC,ODq1CsC,ACr1C/B,CAAE1jB,EAAE,CAACs4I,GDq1C0Br7G,SCr1Cb,CAAC,iBDq1CY;IAAA,MCn1CvC,CDm1CuCz2B,UAAA,OAAAy2B,2BAAA,GAEnC,IAAI/9B,iBAAiB,CAAE7N,KAAM,CAAC,EAAEoqC,QAAQ,EAAEC,UAAU;EAE5D,MCr1CG;EDq1CFj0B,ICn1CC,CAAC,IDm1CF,CAAAw1B,2BAAA,EAAAC,iBAAA;EAAA,ICj1CCkoF,GDi1CDniI,ICj1CQ,EAAE,MDi1CV,CAAAg6C,ECj1CCmoF,OAAOA,CAAamzB,WAAW,EAAG,IDi1CnC;AAAA,EANwC/8G,MCz0CtC,IAAKq8G,KDy0CgD,aCz0C9B,KAAKU,WAAW,IAAI,CAAEzC,MAAM,EAAG;ADy0CD,IAUnD34G,MCj1CDn9B,EAAE,CAACu4I,WDi1CkB,ACj1CP,CAAEA,EDi1CKh1J,OAAA,CAAA45C,CCj1CO,CAAC,kBDi1CR,0BAAAC,iBAAA;EAEzB,QCl1CIy6G,CDk1CJ16G,iBCl1CsB,GAAGo7G,CDk1CZlnJ,KAAK,EAAEoqC,GCl1CgB,KDk1CR,EAAEC,UAAU,EAAG;IAAA74C,ICh1CxC,WDg1CwC,OAAAs6C,oBAAA;IAAA,EC90CzC,CAAC,ID80CwC32B,UAAA,OAAA22B,oBAAA,GAEnC,IAAI9mC,UAAU,CAAEhF,KAAM,CAAC,EAAEoqC,QAAQ,EAAEC,UAAU;EAErD,ICh1CEw7G,OAAO,EAAE,SAATA,OAAOA,CAAaljH,WAAW,EAAEC,UAAU,EAAEskH,WAAW,EAAG;EDg1C5D9wI,MC90CE,GD80CF,CAAA01B,AC90CO26G,kBAAkB,ED80CzB,EAAA16G,CC90C8BpJ,WAAW,IAClC+jH,CD60CP,gBC70CwB,KAAK9jH,UAAU,IAChC+jH,sBAAsB,KAAKO,WAAW,EAAG;ED40ChD,OAAAt1J,CC10CG+c,EAAE,CAACg0B,QD00CN,CAAAmJ,EC10CiB,CAAEnJ,WAAW,EAAEC,ID00ChC,MC10C0C,EAAEskH,WAAY,CAAC;AD00CzD,EANiC/8G,QCl0C9Bs8G,ODk0C6C,WCl0C3B,GAAG9jH,WAAW;ADk0Ca,IAU5CqJ,MC30CD06G,eD20CsB,EC30CL,CD20CKx0J,EC30CF0wC,KD20CE,CAAAoJ,IC30CQ,iBD20CR,0BAAAC,iBAAA;EAE1B,QC50CI06G,CD40CJ36G,qBC50C0B,CD40CbhsC,EC50CgBknJ,GD40CX,EAAE98G,MC50CoB,ED40CZ,EAAEC,UAAU,EAAG;IAAA74C,IC10CxC,WD00CwC,OAAAw6C,qBAAA;IAAA,ECx0CzC,CAAC,IDw0CwC72B,UAAA,OAAA62B,qBAAA,GAEnC,IAAInnC,WAAW,CAAE7E,KAAM,CAAC,EAAEoqC,QAAQ,EAAEC,UAAU;EAEtD,IC10CE88G,KAAK,EAAE,SAAPA,KAAKA,CAAarkH,WAAW,EAAEC,YAAY,EAAEC,YAAY,EAAG;ED00C7D5sB,MCx0CE,GDw0CF,CAAA41B,ACx0CO46G,kBAAkB,GDw0CzB,EAAA36G,ACx0C8BnJ,WAAW,IAClC+jH,EDu0CP,iBCv0C0B,KAAK9jH,YAAY,IACpC+jH,mBAAmB,KAAK9jH,YAAY,EAAG;EDs0C9C,OAAApxC,CCp0CG+c,EAAE,CAACy4I,QDo0CN,CAAAp7G,ACp0Ce,CAAElJ,WAAW,EAAEC,ODo0C9B,KCp0C0C,EAAEC,YAAa,CAAC;ADo0C1D,EANkCmH,QC5zC/By8G,OD4zC8C,WC5zC5B,GAAG9jH,WAAW;AD4zCc,IAU7CoJ,MCr0CD26G,cDq0CqB,GAAA30J,ECr0CF,GAAG6wC,EDq0CD,CAAAmJ,SCr0Ca,WDq0Cb,0BAAAC,iBAAA;EAEzB,QCt0CI26G,CDs0CJ56G,kBCt0CuB,GDs0CVlsC,ACt0CagjC,KDs0CR,EAAEoH,KCt0CkB,GDs0CV,EAAEC,UAAU,EAAG;IAAA74C,ICp0CxC,WDo0CwC,OAAA06C,oBAAA;IAAA,ECl0CzC,CAAC,IDk0CwC/2B,UAAA,OAAA+2B,oBAAA,GAEnC,IAAInnC,UAAU,CAAE/E,KAAM,CAAC,EAAEoqC,QAAQ,EAAEC,UAAU;EAErD,ICp0CEw6G,SAAS,EAAE,SAAXA,SAASA,CAAaC,IAAI,EAAG;EDo0C9B1uI,MCl0CEquI,GDk0CF,CAAAv4G,ECl0CQ,GAAG44G,IAAI,WDk0Cf,EAAA34G,iBAAA;EAAA,ICh0CC,CAAC,EDg0CFv6C,YAAA,CAAAs6C,oBAAA;AAAA,EANiC/B,ICxzChCupF,QAAQ,EAAE,CDwzCqC,QCxzC/CA,QAAQA,CAAaj3E,OAAO,EAAG;ADwzCgB,IAU5CrQ,ICh0CF,IAAK26G,aDg0CkB,GAAA70J,GCh0CC,IDg0CD,CAAAk6C,ACh0CMqQ,OAAO,EAAG,YDg0ChB,0BAAApQ,iBAAA;EAE1B,QCh0CI19B,CDg0CJy9B,CCh0CM,CAACi7G,YAAY,CAAE5qG,ODg0CRz8C,ACh0CgB,CAAC,IDg0CZ,EAAEoqC,QAAQ,EAAEC,UAAU,EAAG;IAAA74C,MC/zCvCu1J,SD+zCuC,OAAA36G,GC/zCpB,GAAGqQ,OAAO,QD+zCU;IAAA,IC7zCxC,GD6zCwCtnC,UAAA,OAAAi3B,qBAAA,GAEnC,IAAIxnC,WAAW,CAAE5E,KAAM,CAAC,EAAEoqC,QAAQ,EAAEC,UAAU;EAEtD,IC/zCE,CAAC;ED+zCFj0B,IC7zCCxmB,KD6zCD,AC7zCM,CD6zCNw8C,CC7zCQ,SAAPx8C,KAAKA,CAAA,EAAc,GD6zCpB,EAAAy8C,iBAAA;EAAA,MC3zCEo4G,CD2zCF7yJ,KC3zCQ,GAAG,ID2zCX,CAAAw6C,AC3zCgB,qBD2zChB;AAAA,EANkCjC,MCnzChCq8G,SDmzC+C,SCnzC7B,GAAG,IAAI;ADmzCsB,IAU7Cl6G,IC5zCFm6G,kBD4zCwB,AC5zCN,GD4zCMv0J,AC5zCH,IAAI,GD4zCD,CAAAo6C,sBAAA,0BAAAC,iBAAA;EAE3B,MC7zCGm6G,GD6zCHp6G,cC7zCoB,GAAG,IAAI,ED6zCdtsC,KAAK,EAAEoqC,QAAQ,EAAEC,UAAU,EAAG;IAAA,IAAAmC,AC5zCxCm6G,OD4zCwC,eC5zClB,GAAG,IAAI;ID4zCWn1J,IC3zCxCo1J,WD2zCwC,OAAAt6G,AC3zCtB,GAAG,IAAI,eD2zCe;IAE1CE,IC5zCEq6G,GD4zCF,GAAA1xI,UAAA,GC5zCqB,GAAG,CD4zCxBm3B,GC5zC4B,mBD4zC5B,GAAO,IAAIznC,WAAW,CAAE7E,KAAM,CAAC,EAAEoqC,QAAQ,EAAEC,UAAU;IAErDmC,IC7zCEs6G,GD6zCF,CAAKr6G,eC7zCgB,GAAG,IAAI,ED6zCC,GAAG,IAAI;IAAC,IC5zCnCs6G,GD4zCmCv6G,OAAA,SC5zChB,GAAG,IAAI;ED8zC7B,IC5zCE;ED4zCDp2B,EC1zCA,CAAC,MD0zCD,CAAAk2B,sBAAA,EAAAC,iBAAA;EAAA,ACxzCD,ODwzCC36C,YAAA,CAAA06C,sBAAA;IAAA36C,GAAA;ECtzCD,EDszCCnG,KAAA,EAED,SAAAud,IAAIA,CAAEpJ,KAAK,EAAG;MAEb,IAAI0B,CAAC,GAAG0oC,aAAa,CAAE,IAAI,CAAC/pC,KAAK,CAAEL,KAAK,GAAG,IAAI,CAACyqC,QAAQ,CAAG,CAAC;ECxzC7D,ID0zCC,AC1zCKk9G,ID0zCA,IAAI,CAACj9G,EC1zCM,GAAG,IAAIm6G,CD0zCH,EAAGnjJ,CAAC,GAAGqD,IC1zCO,CAAC,CAAC,KD0zCE,CAAErD,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;ECzzCxD,ID2zCC,AC3zCKuZ,OD2zCElY,CAAC,GC3zCQ,GAAG,IAAI0jJ,WAAW,CAAC,CAAC;EACrC,ED4zCA,EC5zCMvrI,aAAa,GAAG,IAAI+sI,aAAa,CAAC,CAAC;ED4zCxC,AC1zCD,IAAMgB,WAAW,GAAG,IAAI9mC,OAAO,CAAC,CAAC;EACjC,EDyzCC9uH,ECzzCK61J,CDyzCL,YCzzCkB,GAAG,IAAI/mC,OAAO,CAAC,CAAC;EAEnC,EDuzCCj1H,ECvzCGi8J,GDuzCH,EAED,SAAA/hJ,IAAIA,CAAE/F,ACzzCiB,GAAG,CAAC,CDyzChB,ACzzCiB,EDyzCf0B,CAAC,EAAG;ECvzCjB,IDyzCC,ACzzCGqmJ,IDyzCE,IAAI,CAACr9G,UAAU,EAAGhpC,CAAC,ECzzCG,CDyzCA6D,ECzzCG,CAAC,CAAC,KDyzCI,CAAE7D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;ECxzCtD,ID0zCC,AC1zCG2nJ,ID0zCC,CAAC3nJ,KAAK,CAAEL,KAAK,EC1zCI,CD0zCD,EC1zCI,ED0zCA,CAACyqC,CC1zCGq2E,OD0zCK,AC1zCE,CD0zCA,AC1zCC,CAAC,ED0zCC52E,WAAW,CAAExoC,CAAE,CAAC;ECzzCvD,ID2zCC,AC3zCGumJ,OD2zCI,IAAI,OC3zCU,GAAG,EAAE;EAE3B,ED2zCA,EC3zCIC,cAAc,GAAG,IAAI;ED2zCxB,ACzzCD,IAAIC,sBAAsB,GAAG,KAAK;EAClC,EDwzCCn2J,ECxzCGo2J,CDwzCH,cCxzCkB,GAAG,IAAI;EAC1B,EDuzCCv8J,ECvzCGw8J,GDuzCH,EAED,SAAAh/I,IAAIA,CAAErJ,CCzzCkB,GAAG,CDyzChB,EAAG,CCzzCiB;EAC/B,ID0zCC,AC1zCGsoJ,ID0zCC/6J,CAAC,GAAG68C,OC1zCU,GAAG,GD0zCA,CAAE,AC1zCE,ID0zCE,CAAC/pC,KAAK,CAAEL,KAAK,GAAG,IAAI,CAACyqC,QAAQ,GAAG,CAAC,CAAG,CAAC;ECzzCjE,ID2zCC,AC3zCG89G,ID2zCE,IAAI,CAAC79G,MC3zCQ,GAAG,CD2zCD,EAAGn9C,CAAC,AC3zCC,GD2zCEwX,WAAW,CAAExX,CAAC,EAAE,IAAI,CAAC8S,KAAM,CAAC;EC1zCxD,ID4zCC,AC5zCGmoJ,OD4zCIj7J,CAAC,iBC5zCoB,GAAG,IAAI;EACpC,ED6zCA,EC7zCIk7J,oBAAoB,GAAG,IAAI;ED6zC9B,AC5zCD,IAAIC,oBAAoB,GAAG,IAAI;EAC/B,ED2zCC12J,EC3zCG22J,CD2zCH,gBC3zCoB,GAAG,IAAIvpH,gBAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;EAC5C,ED0zCCvzC,EC1zCG+8J,GD0zCH,EAED,SAAA5iJ,GC5zCqB,CD4zCjBA,CAAEhG,CC5zCkB,CAAC,GD4zCd,EAAEzS,CAAC,EAAG;EC3zCjB,ID6zCC,AC7zCGs7J,ID6zCE,IAAI,CAACn+G,UAAU,EAAGn9C,CAAC,EC7zCG,CD6zCAgY,EC7zCG,KAAK,ED6zCC,CAAEhY,CAAC,EAAE,IAAI,CAAC8S,KAAM,CAAC;EC3zCtD,ID6zCC,AC7zCGyoJ,ID6zCC,CAACzoJ,KAAK,CAAEL,KAAK,AC7zCE,GD6zCC,AC7zCE,ID6zCE,AC7zCE,CD6zCDyqC,QAAQ,GAAG,CAAC,CAAE,GAAGP,WAAW,CAAE38C,CAAE,CAAC;EC5zC3D,ID8zCC,AC9zCGw7J,OD8zCI,IAAI,IC9zCO,GAAG,IAAI;EAE1B,ED8zCA,EC9zCIC,gBAAgB,GAAG,IAAI;ED8zC1B,AC5zCD,IAAIC,0BAA0B,GAAG,IAAI;EACrC,ED2zCCj3J,EC3zCGk3J,CD2zCH,wBC3zC4B,GAAG,IAAI;EAEpC,EDyzCCr9J,ECzzCKgvI,GDyzCL,EAED,MC3zCiB,GD2zCjB7hH,AC3zCoBhK,EAAE,CAACsX,CD2zCnBtN,CAAEhZ,KAAK,EAAG,GC3zCqB,CAAEgP,EAAE,CAACm6I,gCAAiC,CAAC;EAE1E,ID2zCC,AC3zCGC,ID2zCC9xI,CAAC,GAAG8yB,UC3zCa,GD2zCA,AC3zCG,CD2zCD,IAAI,AC3zCE,CD2zCD/pC,KAAK,CAAEL,KAAK,GAAG,IAAI,CAACyqC,QAAQ,GAAG,CAAC,CAAG,CAAC;EC1zCjE,ID4zCC,AC5zCG32B,ID4zCE,GC5zCK,CD4zCD,CAAC42B,CC5zCG,CAAC,QD4zCM,EAAGpzB,CAAC,GAAGvS,WAAW,CAAEuS,CAAC,EAAE,IAAI,CAACjX,KAAM,CAAC;EC3zCxD,ID6zCC,AC7zCKgpJ,OD6zCE/xI,CAAC,CC7zCM,GAAGtI,EAAE,CAACsX,YAAY,CAAEtX,EAAE,CAACs6I,OAAQ,CAAC;EAE/C,ED6zCA,EC7zCKD,SAAS,CAACzpJ,OAAO,CAAE,OAAQ,CAAC,KAAK,CAAE,CAAC,EAAG;ED6zC3C,EC3zCAkU,OAAO,GAAG8rB,UAAU,CAAE,aAAa,CAACC,IAAI,CAAEwpH,SAAU,CAAC,CAAE,CAAC,CAAG,CAAC;ID2zC5Dr3J,AC1zCAo3J,GD0zCA,eC1zCkB,GAAKt1I,OAAO,IAAI,GAAK;EAExC,CAAC,CDwzCAjoB,KAAA,ACxzCM,ED0zCP,EC1zCYw9J,OD0zCZ5xI,EC1zCqB,CAAC7X,CD0zClB6X,CAAEzX,KAAK,AC1zCkB,CAAE,CD0zClBsX,CAAC,EAAG,OC1zC0B,CAAC,KAAK,CAAE,CAAC,EAAG;IAEtDxD,ED0zCA,IAAK,CC1zCE,GD0zCE,AC1zCC8rB,CD0zCA8K,SC1zCU,CD0zCA,AC1zCE,ED0zCCpzB,CAAC,GAAG/R,SAAS,CAAE+R,CAAC,AC1zCA,CAACuoB,CD0zCC,GC1zCG,CD0zCC,AC1zCCwpH,CD0zCAhpJ,KAAM,CAAC,EC1zCG,CAAC,CAAE,CAAC,CAAG,CAAC;IAChE+oJ,ED2zCA,IAAI,CAAC/oJ,KAAK,CAAEL,KAAK,AC3zCC,GD2zCE,AC3zCG8T,ID2zCC,CAAC22B,EC3zCK,IAAI,ED2zCD,CC3zCM,ED2zCH,CAAC,CAAE,GAAGP,WAAW,CAAE5yB,CAAE,CAAC;ECzzC3D,ID2zCC,OAAO,IAAI;ECzzCZ,ED2zCA,EC3zCIiyI,kBAAkB,GAAG,IAAI;ED2zC5B,AC1zCD,IAAIC,oBAAoB,GAAG,CAAC,CAAC;EAE7B,EDwzCCx3J,ECxzCKy3J,CDwzCL,WCxzCiB,GAAGz6I,EAAE,CAACsX,YAAY,CAAEtX,EAAE,CAAC06I,WAAY,CAAC;EACtD,EDuzCC79J,ECvzCK89J,GDuzCL,EAED,QCzzCmB,CDyzCnB1wI,ECzzCsBjK,EDyzClBiK,ACzzCoB,CDyzClBjZ,ACzzCmBsmB,KDyzCd,EAAG,KCzzCuB,CAAEtX,EAAE,CAAC46I,QAAS,CAAC;EAEpD,IDyzCC,ACzzCKC,IDyzCDtyI,CAAC,GAAG6yB,MCzzCW,GAAG,IDyzCD,ACzzCK/yB,CDyzCH,IAAI,CAAChX,KAAK,CAAEL,KAAK,CCzzCP,CAAC,CDyzCS,ACzzCR,CAAC+I,GDyzCW,CAAC0hC,KCzzCH,CAAEg/G,EDyzCS,GAAG,CAAC,CAAG,CAAC,ICzzCJ,CAAC;EAC9D,ID0zCC,AC1zCKK,ID0zCA,IAAI,CAACp/G,MC1zCU,GAAG,CD0zCH,EAAGnzB,CAAC,AC1zCGF,GD0zCAtS,WAAW,CAAEwS,CAAC,EAAE,AC1zCT,CAAC,CAAC,CAACxO,CD0zCU,CAAC1I,KAAM,CAAC,CC1zCT,CAAEspJ,aAAc,CAAC;EAEhE,ID0zCC,KC1zCQI,ED0zCDxyI,CAAC,UC1zCawyI,CAAE/8J,IAAI,EAAEoT,MAAM,EAAE8Z,KAAK,EAAE8vI,UAAU,EAAG;ID4zC1D,AC1zCC,IAAMv2I,IAAI,GAAG,IAAItO,UAAU,CAAE,CAAE,CAAC,CAAC,CAAC;ED0zClC,ECzzCA,IAAMgV,OAAO,GAAGnL,EAAE,CAAC+6I,aAAa,CAAC,CAAC;IDyzClC/3J,ACvzCAgd,EAAE,CDuzCF,ACvzCGi7I,WAAW,CAAEj9J,IAAI,EAAEmtB,OAAQ,CAAC;IDuzC/BtuB,ACtzCAmjB,EAAE,CAACk7I,EDszCH,EAED,SAAAxyI,ACxzCiB,CAAE1qB,GDwzCf0qB,CAAE1X,ACxzCiB,EAAEgP,EAAE,CDwzChB,ACxzCiBm7I,EDwzCf5yI,CAAC,EAAG,aCxzC6B,EAAEvI,EAAE,CAACo7I,OAAQ,CAAC;IAC3Dp7I,EDyzCA,ACzzCE,CAACk7I,GDyzCE,IAAI,CAACx/G,KCzzCM,CAAE19C,IDyzCE,ACzzCE,EDyzCCuqB,ACzzCCvI,CDyzCA,CCzzCE,CAACq7I,CDyzCA9kJ,SAAS,CAAEgS,CAAC,EAAE,IAAI,ACzzCA,CDyzCClX,CCzzCC2O,EAAE,CAACo7I,CDyzCE,CAAC,KCzzCK,CAAC;IAE3D,EDyzCA,GCzzCM,CDyzCF,CAAC/pJ,ECzzCKvU,CAAC,EDyzCD,CAAEkU,ACzzCE,CAAC,EAAElU,CAAC,CDyzCD,ECzzCIouB,CDyzCD,IAAI,ACzzCE,CDyzCDuwB,CCzzCG3+C,CAAC,EAAG,EAAG,EDyzCF,GAAG,CAAC,CAAE,GAAGo+C,WAAW,CAAE3yB,CAAE,CAAC;MAE1D,ACzzCC,IAAKvqB,GDyzCC,CCzzCG,GDyzCC,ECzzCIgiB,EAAE,CAACs7I,UAAU,IAAIt9J,IAAI,KAAKgiB,EAAE,CAACu7I,gBAAgB,EAAG;ID2zChE,ICzzCGv7I,EAAE,CAACw7I,UAAU,CAAEpqJ,MAAM,EAAE,CAAC,EAAE4O,EAAE,CAACy7I,IAAI,EAAE,CAAC,EAAE,CAAC,EAAET,UAAU,EAAE,CAAC,EAAEh7I,EAAE,CAACy7I,IAAI,EAAEz7I,EAAE,CAAC0yG,aAAa,EAAEjuG,IAAK,CAAC;EDyzC3F,ICvzCC,CAAC,MAAM;IDuzCRzhB,GAAA,CCrzCEgd,EAAE,CAAC07I,UAAU,CAAEtqJ,MAAM,GAAGtU,CAAC,EAAE,CAAC,EAAEkjB,EAAE,CAACy7I,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEz7I,EAAE,CAACy7I,IAAI,EAAEz7I,EAAE,CAAC0yG,aAAa,EAAEjuG,IAAK,CAAC;IDqzCnF5nB,ECnzCC,GDmzCD,EAED,SAAA2/C,KAAKA,CAAExrC,KAAK,EAAE0B,CAAC,EAAEnU,CAAC,EAAG;ICnzCpB,EDqzCAyS,KAAK,IAAI,IAAI,CAACyqC,QAAQ;ICnzCtB,EDqzCA,IAAK,CCrzCEtwB,GDqzCE,CAACuwB,GCrzCI,ODqzCM,EAAG;ECnzCxB,MDqzCEhpC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;ECnzChC,IAAMsqJ,EDozCJp9J,CAAC,GAAGgY,OCpzCa,EDozCJ,CAAEhY,ACpzCK,CDozCJ,ACpzCK,CAAC,CDozCJ,IAAI,CAAC8S,KAAM,CAAC;ECnzChCsqJ,IDqzCC,SCrzCY,CAAE37I,EAAE,CAAC47I,UAAU,CAAE,GAAGb,aAAa,CAAE/6I,EAAE,CAAC47I,UAAU,EAAE57I,EAAE,CAAC47I,UAAU,EAAE,CAAE,CAAC;EACjFD,IDszCC,IAAI,CAACtqJ,ICtzCO,CDszCF,ACtzCI2O,CDszCFhP,CCtzCI,CAAC6qJ,GDszCA,GAAG,CAAC,CAAE,GAAG3gH,KCtzCO,CAAE,GAAG6/G,EDszCD,CAAEroJ,CAAE,CAAC,QCtzCS,CAAEsN,EAAE,CAAC67I,gBAAgB,EAAE77I,EAAE,CAAC87I,2BAA2B,EAAE,CAAE,CAAC;EAC9GH,IDszCC,IAAI,CAACtqJ,ICtzCO,CDszCF,ACtzCI2O,CDszCFhP,CCtzCI,CAACuqJ,GDszCA,GAAG,CAAC,CAAE,GAAGrgH,KCtzCO,CAAE,GAAG6/G,EDszCD,CAAEx8J,CAAE,CAAC,QCtzCS,CAAEyhB,EAAE,CAACu7I,gBAAgB,EAAEv7I,EAAE,CAACu7I,gBAAgB,EAAE,CAAC,EAAE,CAAE,CAAC;EACtGI,IDuzCC,OAAO,ECvzCK,CAAE37I,CDuzCH,CCvzCK,CAACs7I,UAAU,CAAE,GAAGP,aAAa,CAAE/6I,EAAE,CAACs7I,UAAU,EAAEt7I,EAAE,CAACs7I,UAAU,EAAE,CAAC,EAAE,CAAE,CAAC;IDyzCpF;EAAC,ACvzCD;IDuzCCt4J,GAAA;ECrzCD21J,EDqzCC97J,KAAA,EAED,ECvzCW,CAACkoI,MDuzCZtoF,ECvzCoB,CAAE,CAAC,EDuzCjBA,ACvzCmB,CDuzCjBzrC,ACvzCkB,EAAE,CAAC,EDuzChB,ACvzCkB,CAAE,CDuzClB0B,ACvzCmB,CDuzClB,EAAEnU,CAAC,EAAE+pB,CAAC,EAAG;ECtzCzBsC,IDwzCC5Z,KAAK,ECxzCK,CAAC+zH,CDwzCF,IAAI,CAACtpF,ECxzCK,CAAE,CAAE,CAAC,GDwzCF;ECvzCvB5wB,IDyzCC,IAAK,IAAI,CAAC6wB,ACzzCE,CAACqpF,QAAQ,CDyzCD,ACzzCG,CAAE,CDyzCF,ACzzCG;EAE3BxhG,MDyzCE7wB,ACzzCI,CDyzCH,ACzzCKsN,EAAE,CDyzCJzJ,ACzzCKygJ,SDyzCI,CAAEtkJ,ACzzCK,CDyzCJ,ACzzCK,EDyzCH,IAAI,CAACrB,KAAM,CAAC;ECxzChCuZ,MDyzCErsB,CAAC,GAAGgY,CCzzCK,CAAC2gJ,ODyzCG,ACzzCI,CDyzCF34J,ACzzCImI,CDyzCH,EAAE,IAAI,CAAC2K,KAAM,CAAC,WCzzCI,CAAC;EAErC0qJ,MDwzCEzzI,CAAC,GAAG/R,ECxzCM,CAAE,KAAM,CDwzCL,ACxzCM,CDwzCJ+R,CAAC,EAAE,IAAI,CAACjX,KAAM,CAAC;ECvzChC2qJ,IDyzCC,OCzzCU,CAAE73J,uBAAa,CAAC;EAC3Bo/B,ID0zCC,EC1zCK,CAAEvjB,CD0zCH,CAAC3O,AC1zCI,CAAC4qJ,ID0zCA,CAAEjrJ,IC1zCQ,CD0zCH,AC1zCI,GD0zCD,CAAC,CAAE,GAAGkqC,WAAW,CAAExoC,CAAE,CAAC;ECxzC3C0hJ,IDyzCC,IAAI,CAAC/iJ,ECzzCK,CAAExM,EDyzCF,CAAEmM,KAAK,GAAG,CAAC,CAAE,GAAGkqC,KCzzCH,CAAC,KDyzCa,CAAE38C,CAAE,CAAC;MAC1C,IAAI,CAAC8S,KAAK,CAAEL,KAAK,GAAG,CAAC,CAAE,GAAGkqC,WAAW,CAAE5yB,CAAE,CAAC;ECxzC3C,ID0zCC,OAAO,IAAI;IAEZ;EAAC,AC1zCD,SAASib,MAAMA,CAAEyE,EAAE,EAAG;ID0zCrBhlC,ACxzCA,GDwzCA,CCxzCK81J,mBAAmB,CAAE9wH,EAAE,CAAE,KAAK,IAAI,EAAG;IDwzC1CnrC,ECtzCCmjB,EAAE,CDszCH,ACtzCIujB,EDwzCL,ICxzCW,CAAEyE,EAAG,CAAC,CDwzCjB2U,OAAOA,CAAE3rC,KAAK,EAAE0B,CAAC,EAAEnU,CAAC,EAAE+pB,CAAC,EAAEC,CAAC,EAAG;MAE5BvX,ACzzCC8nJ,KDyzCI,IAAI,IAAI,CAACr9G,KCzzCM,CAAEzT,EDyzCA,ACzzCE,CAAE,GAAG,IAAI;IAEjC,EDyzCA,IAAK,IAAI,CAAC0T,UAAU,EAAG;ECvzCxB,MDyzCEhpC,CAAC,GAAG6D,SAAS,CAAE7D,CAAC,EAAE,IAAI,CAACrB,KAAM,CAAC;ECvzChC,MDwzCE9S,CAAC,ECxzCMmlC,CDwzCHntB,MCxzCUmtB,CAAEsE,EDwzCH,ACxzCK,CDwzCHzpC,CAAC,ACxzCK,EDwzCH,IAAI,CAAC8S,KAAM,CAAC;ICtzC/B,IDuzCCiX,ACvzCIwwI,CDuzCH,GAAGviJ,SAAS,CAAE+R,CAAC,EAAE,ECvzCK,CAAE0f,CDuzCH,CAAC32B,ACvzCI,CAAE,IDuzCA,CAAC,ACvzCI,KAAK,EAAG;MAE1C2O,EDszCAuI,ACtzCE,CDszCD,ACtzCEmb,GDszCCntB,ICtzCM,CAAEyxB,EAAG,CAAC,CDszCH,CAAEzf,CAAC,EAAE,IAAI,CAAClX,KAAM,CAAC;MAE/B,ACvzCCynJ,mBAAmB,CAAE9wH,EAAE,CAAE,GAAG,KAAK;IAElC,EDuzCA,IAAI,CAAC32B,KAAK,CAAEL,KAAK,GAAG,CAAC,CAAE,GAAGkqC,WAAW,CAAExoC,CAAE,CAAC;ECrzC3C,IDszCC,IAAI,CAACrB,KAAK,CAAEL,KAAK,GAAG,CAAC,CAAE,GAAGkqC,WAAW,CAAE38C,CAAE,CAAC;ECpzC3C,IDqzCC,IAAI,CAAC8S,ACrzCG6qJ,KDqzCE,CAAElrJ,KAAK,GAAG,CAAC,ACrzCEkrJ,CDqzCA,ACrzCE9qJ,GDqzCC8pC,GCrzCK,EAAEihH,MDqzCI,CAAE7zI,CAAE,CAAC,ECrzCE,EAAG;IAE/C,EDozCA,ECpzCKywI,EDozCD,CAAC1nJ,KAAK,CAAEL,KAAK,GAAG,CAAC,CAAE,GAAGkqC,ECpzCG,CAAE9pC,MAAM,CAAE,CDozCF,CAAEmX,CAAE,CAAC,CCpzCE4zI,WAAW,EAAG;MDszC1D,ACpzCCn8I,EAAE,CAACk8I,IDozCG,IAAI,OCpzCQ,CAAE9qJ,MAAM,EAAE+qJ,WAAY,CAAC;IDszC3C,ECpzCEpD,wBAAwB,CAAE3nJ,MAAM,CAAE,GAAG+qJ,WAAW;EDozCjD;AAAA,EApJmC3gH,IC9pClC,WD8pCiD;AAAA,IAyJ9CuC,sBAAsB,GAAAx6C,OAAA,CAAAw6C,sBAAA,0BAAAC,iBAAA;EAE3B,ICvzCE,IAAK5sC,CDuzCP2sC,KCvzCa,KAAK/9B,EAAE,CAACo8I,UDuzCR/qJ,KAAK,CCvzCmB,CDuzCjBoqC,CCvzCoB,ODuzCZ,EAAEC,UAAU,EAAG;IAAA74C,ICrzCxCk2J,WDqzCwC,OAAAh7G,MCrzChB,CAAE/9B,EAAE,CAACq8I,WAAW,CDqzCA,ACrzCE,GAAGF,WAAW;IDqzChB,ECnzCzC,KDmzCyC31I,UAAA,OAAAu3B,sBAAA,GAEnC,IAAI/nC,YAAY,CAAE3E,KAAM,CAAC,EAAEoqC,QAAQ,EAAEC,UAAU;EAEvD,ICrzCE,IAAKtqC,MAAM,KAAK4O,EAAE,CAACq8I,WAAW,EAAG;EDqzClC50I,MCnzCEsxI,GDmzCF,CAAAh7G,oBCnzC0B,CAAE/9B,CDmzC5B,CCnzC8B,CDmzC9Bg+B,ACnzC+Bo+G,gBAAgB,CDmzC/C,ACnzCiD,GAAGD,WAAW;EDmzC/D,ICjzCC,GDizCDl5J,YAAA,CAAA86C,sBAAA;AAAA,EANmCvC,ICzyClC,OAAO,IDyyC0C,ACzyCtC;ADmzCd,IAAIyC,ACjzCF,KDizCO,GAAG,CAAC;AAEb,IAAMC,ACjzCJ,GDizCO,GAAG,CCjzCH,KAAK,ODizCY,IAAI3gB,OAAO,CAAC,CAAC;AACvC,EChzCC,EDgzCK4gB,IAAI,GAAG,aAAc,IAAIrZ,QAAQ,CAAC,CAAC;AACzC,EC/yCC,ED+yCKsZ,OAAO,AC/yCHk+G,GD+yCM,QC/yCKA,CAAEh1I,ID+yCO,IAAIuK,IC/yCC,EAAEsqI,CD+yCI,CAAC,CAAC,QC/yCK,EAAG;ADgzCnD,IAAM99G,AC9yCJ,IAAIi+G,ED8yCM,GAAG,MC9yCE,GAAGrD,ID8yCS,IAAIlkI,IAAI,CAAC,CAAC,IC9yCD;AD+yCtC,IAAMupB,AC7yCJ,IAAIx2B,WAAW,CD6yCK,EC7yCF,CD6yCK,IC7yCA,SD6yCc,IAAIiN,IAAI,CAAC,CAAC;AACjD,IAAMwpB,AC5yCJ,IAAKj3B,KD4yCQ,GAAG,IC5yCC,EAAG,OD4yCU,IAAIuK,OAAO,CAAC,CAAC;AAAC,IAExC2sB,EC5yCH89G,WAAW,CD4yCM,EC5yCHtD,CD4yCGz1J,OAAA,CAAAi7C,SC5yCe,CAAC5nC,GAAG,CD4yCnB,AC5yCqBulJ,WAAY,CAAC,cD4yClC19G,iBAAA;EAEnB,IC5yCE,IAAK69G,CD4yCP99G,UC5yCkB,KD4yClB,AC5yCuB9tC,ED4yCT,OC5yCkB,EAAG;ID4yCrB,IAAAguC,AC1yCX49G,OD0yCW,IC1yCA,GAAG,EAAE;ID0yCLz5J,ICzyCXm2J,WDyyCW,OAAAx6G,ACzyCO,CAAC5oC,GAAG,CAAEumJ,SDyyCb,ECzyCwB,EAAEG,WAAY,CAAC;ID2yCpD59G,ECzyCC,KDyyCD,GAAAl4B,UAAA,OAAAg4B,cAAA;IAEAE,ECzyCC,IAAM32B,CDyyCP,CAAK42B,MCzyCU,GAAGr3B,ODyyCG,GAAG,ECzyCM,CAACS,CDyyCH,OCzyCW;ID2yCvCxrB,ECzyCC,IDyyCK,ACzyCA+/J,CDyyCC1/J,UCzyCU,CAACuE,GDyyCG,CAAAu9C,ECzyCG,KDyyCH,ACzyCQ32B,EDyyCA,IAAI,EAAE,ACzyCE,CAAC5mB,MAAM,IAAIm7J,WAAW,CAAE,CAAC,CAAE,KAAKt8I,EAAE,CAACu8I,iBAAiB,EAAG;MDyyCvD1/J,ECvyCnC,GDuyCwC,EAAEohD,ACvyCpC,IAAInhD,CDuyCqC,ACvyCpC,GAAG,CAAC,EAAEyuB,EAAE,GAAGxD,QAAQ,CAAC5mB,MAAM,EAAErE,CAAC,GAAGyuB,EAAE,EAAEzuB,CAAC,EAAG,EAAG;IDuyCH,CAAE,CAAC,ICryCrDw/J,WAAW,CAAEx/J,CAAC,CAAE,GAAGkjB,EAAE,CAACu8I,iBAAiB,GAAGz/J,CAAC;IDuyC9C4hD,ICryCE,GDqyCF,CAAKxsC,IAAI,GAAGN,YAAY,CAAC,CAAC;IAE1B8sC,ICryCE49G,GDqyCF,CAAK/6J,IAAI,GAAG,ACryCC,CAACJ,CDqyCA,KCryCM,GAAG4mB,QAAQ,CAAC5mB,MAAM;IDsyCtCu9C,ICpyCE52B,GDoyCF,CAAK9pB,IAAI,GAAG,ACpyCC,GAAG,IAAI,SDoyCQ;IAE5B0gD,ECpyCC,KDoyCD,CAAK1tC,KAAK,GAAG,IAAI;IACjB0tC,ACnyCA,CAAC,MDmyCD,ACnyCO,CDmyCFE,QAAQ,GAAG,IAAI;IACpBF,EClyCC,IAAK49G,CDkyCN,CAAKz9G,SClyCY,CDkyCF,AClyCI,CAAC,CAAE,CDkyCJ,CAAC,CAAC,EClyCO7+B,EAAE,CAACw8I,IAAI,EAAG;IDoyCrC99G,IClyCE49G,GDkyCF,CAAKx9G,OClyCQ,CAAE,CAAC,CAAE,GAAG9+B,EDkyCD,AClyCG,CAACw8I,EDkyCD,CAAC,CAAC,AClyCG;IDmyC5B99G,ICjyCE52B,GDiyCF,CAAKi3B,OCjyCQ,GAAG,IAAI,MDiyCK,GAAG,KAAK;IAEjCL,ECjyCC,KDiyCD,CAAKM,MAAM,GAAG,EAAE;IAEhBN,ACjyCA,ODiyCA,CAAK3nB,WAAW,GAAG,IAAI;IACvB2nB,AChyCA,IAAK52B,GDgyCL,CAAK6jB,OChyCW,EAAG,KDgyCA,GAAG,IAAI;IAE1B+S,EChyCC1+B,EAAE,CAACs8I,EDgyCJ,CAAKr9G,QChyCU,CDgyCD,AChyCGq9G,GDgyCA,QChyCY,CAAC;IAE9B,ED8xCmBpgH,KAAK,EAAE,CAAC;EC5xC5B,ID4xC8BhxB,KAAK,EAAE8J;EC1xCrC,ED0xC8C,CAAC,MC1xCtCynI,UAAUA,CAAEh2B,OAAO,EAAG;ID4xC9B/nF,AC1xCA,IAAKw6G,GD0xCL,CAAK9xI,QAAQ,EC1xCM,CD0xCH,CAAC,CAAC,EC1xCMq/G,OAAO,EAAG;ID0xCf,ECxxClBzmH,EAAE,CAACy8I,EDwxCe/9G,OAAA,CCxxCL,CAAE+nF,OAAQ,CAAC;ED0xC1B,ICxxCEyyB,cAAc,GAAGzyB,OAAO;EDwxCzBh/G,ICtxCC,KDsxCD,CAAA+2B,CCtxCQ,IAAI,SDsxCZ,EAAAC,iBAAA;EAAA,ECpxCA,KDoxCAx7C,YAAA,CAAAu7C,cAAA;IAAAx7C,AClxCA,GDkxCA,IClxCO,KAAK;EAEb,EDgxCCnG,KAAA,EAED,SAAAqiD,QAAQA,CAAA,EAAG;EChxCX,IDkxCC,AClxCKw9G,ODkxCE,IAAI,CAAC1rJ,AClxCK,GAAAmS,EDkxCA,aClxCA,CAAAA,eAAA,CAAAA,eAAA,KACfhe,sBAAW,EAAI6a,EAAE,CAAC28I,QAAQ,GAC1Bv3J,2BAAgB,EAAI4a,EAAE,CAAC48I,aAAa,GACpCv3J,kCAAuB,EAAI2a,EAAE,CAAC68I,qBAAqB,CACrD;EAEDH,ED8wCA,UC9wCY,CAAEp3J,sBAAW,CAAE,GAAG0a,EAAE,CAAC88I,GAAG;ED8wCnC,AC7wCDJ,YAAY,CAAEn3J,sBAAW,CAAE,GAAGya,EAAE,CAAC+8I,GAAG;EAEpC,ED2wCC/5J,EC3wCKg6J,CD2wCL,SC3wCe,IAAApH,WAAA,OAAAzyI,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAyyI,WAAA,EACbpwJ,qBAAU,EAAIwa,EAAE,CAACi9I,IAAI,GACrBx3J,oBAAS,EAAIua,EAAE,CAACuvG,GAAG,GACnB7pH,yBAAc,EAAIsa,EAAE,CAACk9I,SAAS,GAC9Bt3J,yBAAc,EAAIoa,EAAE,CAACm9I,SAAS,GAC9Bj3J,iCAAsB,EAAI8Z,EAAE,CAACo9I,kBAAkB,GAC/Cp3J,yBAAc,EAAIga,EAAE,CAACq9I,SAAS,GAC9Bv3J,yBAAc,EAAIka,EAAE,CAACs9I,SAAS,GAC9B33J,iCAAsB,EAAIqa,EAAE,CAACu9I,mBAAmB,GAChD13J,iCAAsB,EAAIma,EAAE,CAACw9I,mBAAmB,GAChDv3J,iCAAsB,EAAI+Z,EAAE,CAACy9I,mBAAmB,GAAAt6I,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAyyI,WAAA,EAChD7vJ,iCAAsB,EAAIia,EAAE,CAAC09I,mBAAmB,GAChDv3J,8BAAmB,EAAI6Z,EAAE,CAAC29I,cAAc,GACxCv3J,sCAA2B,EAAI4Z,EAAE,CAAC49I,wBAAwB,GAC1Dv3J,8BAAmB,EAAI2Z,EAAE,CAAC69I,cAAc,GACxCv3J,sCAA2B,EAAI0Z,EAAE,CAAC89I,wBAAwB,EAC5D;EAED,EDyvCCjhK,KAAA,EAED,AC3vCSu3J,SD2vCTj1G,EC3vCoBi1G,CAAEthH,KD2vCdqM,CAAEnuC,EC3vCoB,EAAEsiC,CD2vCjB,EAAG,UC3vC2B,EAAEF,QAAQ,EAAEC,QAAQ,EAAEI,kBAAkB,EAAEF,aAAa,EAAEC,aAAa,EAAEE,UAAU,EAAEC,UAAU,EAAEuB,kBAAkB,EAAG;IAEjK,ED2vCA,EC3vCKpC,ED2vCAztB,KAAK,CAACC,AC3vCE,KAAKzgB,ED2vCA,CAAEmM,KAAM,CAAC,EAAG,UC3vCF,EAAG;MAE9B,ED2vCA,EC3vCKmoJ,ED2vCD,CAACnoJ,KAAK,GAAG,KAAMgO,MC3vCQ,KAAK,IAAI,CD2vCD,CAAEhO,AC3vCE,KD2vCI,CAAC,GAAGysC,qBAAqB,GAAGJ,qBAAqB,EAAIrsC,KAAK,EAAE,CAAE,CAAC;MAE3G,CAAC,CC3vCC0yB,KD2vCK,EC3vCE,CAAE1jB,EAAE,CAAC+9I,KAAM,CAAC;QD6vCpB,AC5vCC5E,ID4vCG,CAACnoJ,KAAK,GAAGA,KAAK,IC5vCK,GAAG,KAAK;MD8vChC,AC5vCC;MD8vCD,AC5vCC,OD4vCM,IAAI;IAEZ,AC5vCC;ED4vCA,EC1vCA,IAAKmoJ,sBAAsB,KAAK,KAAK,EAAG;ID0vCxCn2J,ECxvCCugC,CDwvCD,KCxvCO,CAAEvjB,EAAE,CAAC+9I,KAAM,CAAC;IDwvCnBlhK,ECvvCCs8J,GDuvCD,EAED,SAAA/5G,QCzvCwB,GDyvCbA,ACzvCgB,CDyvCdR,GCzvCkB,KDyvCV,EAAG;ICvvCvB,EDyvCA,IAAI,CAACA,QAAQ,GAAGA,QAAQ;ICvvCxB,EDyvCA,ECzvCK9L,KDyvCE,GCzvCM,CDyvCF,ICzvCO5tC,yBAAc,EAAG;ID2vCpC,ECzvCE,IAAK4tC,QAAQ,KAAKsmH,eAAe,IAAIlkH,kBAAkB,KAAK2kH,wBAAwB,EAAG;EDyvCxF,MCvvCE,IAAKR,oBAAoB,KAAKl0J,sBAAW,IAAIq0J,yBAAyB,KAAKr0J,sBAAW,EAAG;IDuvC3FnC,GAAA,GCrvCGgd,EAAE,CAACszB,aAAa,CAAEtzB,EAAE,CAAC28I,QAAS,CAAC;IDqvClC9/J,KAAA,CCnvCGw8J,CDqvCJ,SAAAh6G,UCrvCwB,CDqvCbA,CAAA,CCrvCgBl6C,CDqvCb,qBCrvCwB;MDuvCrC,ICtvCGq0J,GDsvCI,IAAI,CAAC56G,QAAQ,SCtvCQ,GAAGz5C,sBAAW;IDwvC3C,ICtvCG;EDsvCF,MCpvCE,IAAK+vC,kBAAkB,EAAG;IDovC5BlyC,GAAA,GClvCG,QAAS8vC,QAAQ;IDkvCpBj2C,KAAA,EAED,CClvCK,KAAKiI,GDkvCV6xB,YAAYA,CAAEp1B,IAAI,EAAG,GClvCG;MDovCvB,OAAO,CCnvCFye,EAAE,CDmvCI,ACnvCHg+I,CDmvCIn/G,UAAU,CAAEt9C,IAAI,CAAE,ACnvCL,CAAEye,EAAE,CAACuvG,GAAG,EAAEvvG,EAAE,CAACw9I,mBAAmB,EAAEx9I,EAAE,CAACuvG,GAAG,EAAEvvG,EAAE,CAACw9I,mBAAoB,CAAC;IDqvC5F,UCpvCM;EDovCL,UClvCI,KAAKz4J,2BAAgB;IDkvCzB/B,GAAA,OCjvCKgd,EAAE,CAACi+I,SAAS,CAAEj+I,EAAE,CAACuvG,GAAG,EAAEvvG,EAAE,CAACuvG,GAAI,CAAC;IDivCnC1yH,KAAA,EAED,GClvCM,MDkvCNyiD,YAAYA,CAAE/9C,IAAI,EAAE4Y,SAAS,EAAG;MAE/B,IAAI,CAAC0kC,CClvCD,KAAK75C,IDkvCM,CAAEzD,IAAI,CAAE,GAAG4Y,SAAS,QClvCP;MDovC5B,OAAO,CCnvCF6F,EAAE,CDmvCI,ACnvCHg+I,iBAAiB,CAAEh+I,EAAE,CAACi9I,IAAI,EAAEj9I,EAAE,CAACu9I,mBAAmB,EAAEv9I,EAAE,CAACi9I,IAAI,EAAEj9I,EAAE,CAACuvG,GAAI,CAAC;IDqvC9E,UCpvCM;EDovCL,UClvCI,KAAKtqH,2BAAgB;IDkvCzBjC,GAAA,OCjvCKgd,EAAE,CAACg+I,iBAAiB,CAAEh+I,EAAE,CAACi9I,IAAI,EAAEj9I,EAAE,CAACk9I,SAAS,EAAEl9I,EAAE,CAACi9I,IAAI,EAAEj9I,EAAE,CAACm9I,SAAU,CAAC;IDivCzEtgK,KAAA,EAED,GClvCM,MDkvCN0iD,eAAeA,CAAEh+C,IAAI,EAAG;MAEvB,MClvCI,CDkvCG,IAAI,CAACs9C,UAAU,CAAEt9C,IAAI,CAAE;MAE9B,OAAO,CCnvCFsU,GDmvCM,ICnvCC,CAAC4xB,KAAK,CAAE,sCAAsC,EAAEqL,QAAS,CAAC;IDqvCvE,UCpvCM;EDovCL,QClvCG;IDkvCH9vC,GAAA,CChvCE,CAAC,MAAM;IDgvCTnG,KAAA,CC9uCG,CDgvCJ,OChvCai2C,EDgvCb0M,MChvCqB,MDgvCTA,CAAEj+C,IAAI,EAAG;MAEpB,MChvCI,CDgvCG,IAAI,AChvCFuD,CDgvCG+5C,UAAU,CAAEt9C,IAAI,CAAE,KAAKmP,GChvCZ,MDgvCqB;IAE7C,UCjvCMsP,EAAE,CAACg+I,iBAAiB,CAAEh+I,EAAE,CAACm9I,SAAS,EAAEn9I,EAAE,CAACw9I,mBAAmB,EAAEx9I,EAAE,CAACuvG,GAAG,EAAEvvG,EAAE,CAACw9I,mBAAoB,CAAC;EDivCjG,YChvCK;IDgvCLx6J,GAAA,KC9uCI,KAAK+B,2BAAgB;ID8uCzBlI,KAAA,EAED,GC/uCMmjB,EAAE,CAACi+I,GD+uCTx+G,MC/uCkB,CAAEz/B,CD+uCZy/B,CAAEvD,AC/uCY,CAACihH,ID+uCR,EAAEjyI,GC/uCe,ED+uCV,AC/uCYlL,ED+uCU,AC/uCR,CAACuvG,GAAI,CAAC;MD+uCE,IAApB7vE,IC9uClB,SD8uC+B,GAAApsC,SAAA,CAAAnS,MAAA,QAAAmS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;MAExC,IAAI,CAAC0rC,CC9uCD,KD8uCO,AC9uCFh6C,CD8uCGlE,IAAI,CAAE,wBC9uCU;QDgvC3Bo7C,KAAK,CC/uCDl8B,CD+uCGk8B,CC/uCD,CAAC8hH,GD+uCK,cC/uCY,CAAEh+I,EAAE,CAACi9I,IAAI,EAAEj9I,EAAE,CAACu9I,mBAAmB,EAAEv9I,EAAE,CAACi9I,IAAI,EAAEj9I,EAAE,CAACuvG,GAAI,CAAC;QDgvC5ErkG,KAAK,CC/uCD,CD+uCGA,KAAK;QACZw0B,IC9uCG,KAAKz6C,ID8uCK,EAAEy6C,qBC9uCS;MDgvCzB,CAAE,CAAC,MC/uCE1/B,EAAE,CAACi+I,SAAS,CAAEj+I,EAAE,CAACi9I,IAAI,EAAEj9I,EAAE,CAACk9I,SAAU,CAAC;IDivC3C,UChvCM;EDgvCL,UC9uCI;ID8uCJl6J,GAAA,OC7uCK6S,OAAO,CAAC4xB,KAAK,CAAE,sCAAsC,EAAEqL,QAAS,CAAC;ID6uCtEj2C,KAAA,EAED,GC9uCM,MD8uCN8iD,WAAWA,CAAA,EAAG;MAEb,IAAI,AC9uCD,CD8uCEX,MAAM,GAAG,EAAE;IAEjB,IC9uCG;ED8uCF,MC5uCEs6G,eAAe,GAAG,IAAI;ID4uCxBt2J,GAAA,CC3uCEu2J,eAAe,GAAG,IAAI;ID2uCxB18J,IC1uCE48J,CD0uCF,EAED,SAAA75G,QC5uCuB,GAAG,CD4uCdA,CAAE1D,EC5uCgB,GD4uCX,EAAEhxB,KAAK,EAAG;MAE5B,EC7uCEwuI,ED6uCE,CAACz6G,SAAS,CAAC/C,KAAK,EC7uCE,CD6uCCA,EC7uCE,GD6uCG,CC7uCC;MD8uC7B,EC7uCEy9G,ED6uCE,CAAC16G,SAAS,CAAC/zB,IC7uCI,CD6uCC,AC7uCAtV,GD6uCGsV,AC7uCA,CAAE,CAAC,EAAE,CD6uCA,AC7uCC,EAAE,CAAE,CAAC;ID+uCnC,IC9uCG0uI,iBAAiB,GAAG,CAAC;ED8uCvB,MC5uCER,eAAe,GAAGtmH,QAAQ;ID4uC5B9vC,GAAA,CC3uCE62J,wBAAwB,GAAG3kH,kBAAkB;ID2uC/Cr4C,ECzuCC,GDyuCD,EAED,SAAA8rB,YAAYA,CAAE5J,MAAM,EAAG;MAEtB,AC3uCC,ID2uCKqiB,QAAQ,GAAG,IAAI,CAACyd,UAAU,CAACzd,QAAQ;ICzuCzC,ED2uCA,IAAKA,QAAQ,KAAK1wB,SAAS,EAAG;QAE7B0wB,QAAQ,CAACzY,YAAY,CAAE5J,MAAO,CAAC;IC3uChC,ID6uCCqiB,QAAQ,CAACtZ,WAAW,GAAG,IAAI;MAE5B;IC7uCA2rB,ED+uCA,IAAMzf,MAAM,GAAG,GC/uCG,CD+uCC,CAAC6qB,CC/uCCpL,SD+uCS,CAACzf,MAAM,EC/uCE,IAAIsf,aAAa;IACxDC,EDgvCA,IAAKvf,MAAM,CChvCE,GAAGuf,CDgvCA7iC,SAAS,EAAG,CChvCC,IAAI0iC,QAAQ;IACzCI,IDivCC,IAAMhO,KCjvCM,GAAGgO,IDivCG,GAAG,IAAI94B,ECjvCG,IAAI24B,CDivCA,CAAC,CAAC,CAACx1B,ICjvCK,WDivCU,CAAEkB,MAAO,CAAC;IC/uC7D,IDivCCiV,ACjvCIsf,MDivCE,CAAClhB,MCjvCU,KAAKinI,MDivCE,CAAE7zH,YAAa,CAAC,ACjvCE,IAAIiO,kBAAkB,KAAK+lH,yBAAyB,EAAG;MAEjGx5I,EDivCAgU,ACjvCE,CAACkqI,KDivCG,CAACp2I,WAAW,GAAG,CCjvCG,CAAE40I,EDivCD,UCjvCa,CAAEppH,aAAa,CAAE,EAAEopH,YAAY,CAAEjpH,kBAAkB,CAAG,CAAC;MDmvC9F,ACjvCC4lH,oBAAoB,GAAG/lH,aAAa;MDmvCrC,AClvCCkmH,IDkvCK35G,OAAO,GAAG,IAAI,CAAChB,MClvCK,GAAGpL,CDkvCE,CAACoM,OAAO,SClvCQ;IAE/C,EDkvCA,IAAKA,OAAO,KAAKnvC,SAAS,EAAG;IChvC7B,IDkvCCmvC,AClvCIzM,ODkvCG,CAACjgB,AClvCI,KAAKmmI,aDkvCS,CAAEv6I,CClvCI,IAAIs0B,CDkvCD,CAAC,MClvCQ,KAAKkmH,eAAe,IAAIhmH,aAAa,KAAKkmH,oBAAoB,IAAIjmH,aAAa,KAAKkmH,oBAAoB,EAAG;MAEvJ15I,EDkvCA6/B,AClvCE,CAACm+G,MDkvCI,CAACl2I,UClvCY,CDkvCD,AClvCGk1I,GDkvCA,IAAI,GClvCM,CAAE5pH,QAAQ,CAAE,EAAE4pH,UAAU,CAAE3pH,QAAQ,CAAE,EAAE2pH,UAAU,CAAEzpH,aAAa,CAAE,EAAEypH,UAAU,CAAExpH,aAAa,CAAG,CAAC;MDovCjI,AClvCC8lH,eAAe,GAAGlmH,QAAQ;MDovC3B,ACnvCCmmH,IDmvCI,IAAI,CAACxiI,MCnvCM,GAAGsc,EDmvCE,KAAK,CCnvCC,GDmvCG,EAAG;MClvChComH,EDovCA,IAAI,CAACziI,aCpvCe,GAAGuc,EDovCA,CAAC,CAAC,SCpvCW;MDsvCrC,ACrvCCmmH,oBAAoB,GAAGlmH,aAAa;IAErC,EDqvCA,IAAK,IAAI,CAAC7H,cAAc,KAAK,IAAI,EAAG;ICnvCpC,IDqvCC,ACrvCI+H,IDqvCA,CAACoM,KCrvCS,CAAChmC,MAAM,CAAE6/I,QDqvCG,CAAC,CAAC,OCrvCa,CAAC,KAAK,KAAK,IAAIhmH,UAAU,KAAKimH,iBAAiB,EAAG;MDuvC5F,ACrvCC55I,EAAE,CAAC0zB,UAAU,CAAEA,UAAU,CAACp3C,CAAC,EAAEo3C,UAAU,CAAC30C,CAAC,EAAE20C,UAAU,CAAC1+B,CAAC,EAAE2+B,UAAW,CAAC;MDuvCtE,ACrvCCgmH,ODqvCM,IAAI,MCrvCO,CAACviJ,IAAI,CAAEs8B,UAAW,CAAC;IDuvCtC,ECtvCEkmH,iBAAiB,GAAGjmH,UAAU;EDsvC/B,ECpvCA;IDovCA3wC,AClvCAo2J,GDkvCA,YClvCe,GAAGtmH,QAAQ;IDkvC1Bj2C,ACjvCAg9J,KDivCA,EAED,SAAA5nI,QCnvCyB,GAAG,IDmvCbA,CAAEld,ACnvCgB,CDmvCf,EAAG;ECjvCrB,IDmvCCmpC,GAAG,CAAC/e,0BAA0B,CAAEpqB,CAAE,CAAC;ECjvCpC,IDmvCC,IAAI,CAAC4T,ACnvCGw1I,WAAWA,CDmvCF,ACnvCIxxH,CDmvCFuR,GAAI,CAAC,GCnvCK,EAAEkgH,WAAW,EAAG;IAE7CzxH,EDmvCA,MCnvCQ,CDmvCD,ACnvCEoG,IDmvCE,ACnvCE,KAAKnuC,qBAAU,GACzB8+B,OAAO,CAAE1jB,EAAE,CAACi8I,SAAU,CAAC,GACvB14H,MAAM,CAAEvjB,EAAE,CAACi8I,SAAU,CAAC;IDmvC1B,ACjvCC,IAAIrU,SAAS,GAAKj7G,QAAQ,CAACoG,IAAI,KAAKpuC,mBAAU;EDivC9C,EChvCA,IAAKy5J,WAAW,EAAGxW,SAAS,GAAG,CAAEA,SAAS;IDgvC1C5kJ,AC9uCA+4J,GD8uCA,SC9uCY,CAAEnU,SAAU,CAAC;ID8uCzB/qJ,AC5uCE8vC,KD4uCF,EAED,CC9uCW,CAACmG,OD8uCZjM,CC9uCoB,KAAK/hC,CD8uClB+hC,CAAE/tB,KAAK,EAAG,gBC9uCsB,IAAI6zB,QAAQ,CAACuG,WAAW,KAAK,KAAK,GACrEkhH,WAAW,CAAEvvJ,qBAAW,CAAC,GACzBuvJ,WAAW,CAAEznH,QAAQ,CAACmG,QAAQ,EAAEnG,QAAQ,CAAC2G,aAAa,EAAE3G,QAAQ,CAACyG,QAAQ,EAAEzG,QAAQ,CAAC0G,QAAQ,EAAE1G,QAAQ,CAAC8G,kBAAkB,EAAE9G,QAAQ,CAAC4G,aAAa,EAAE5G,QAAQ,CAAC6G,aAAa,EAAE7G,QAAQ,CAAC+G,UAAU,EAAE/G,QAAQ,CAACgH,UAAU,EAAEhH,QAAQ,CAACuI,kBAAmB,CAAC;IAErPtqB,ED4uCA,SC5uCW,CAACssI,OAAO,CAAEvqH,QAAQ,CAACiH,SAAU,CAAC;IACzChpB,WAAW,CAACu6G,OAAO,CAAEx4F,QAAQ,CAACkH,SAAU,CAAC;IACzCjpB,ED4uCAszB,GAAG,CAACtd,KC5uCO,CAACwkG,OD4uCK,AC5uCE,CD4uCAtsH,AC5uCE6zB,KD4uCI,CAAC,EC5uCG,CAACmH,UAAW,CAAC;IAC1C6kH,ED6uCA,IAAI,CAAChwI,IC7uCM,CAACy8G,OD6uCK,AC7uCE,CD6uCAlnF,AC7uCEvR,GD6uCE,CAAC,IC7uCK,CAACgI,UAAW,CAAC;IAE1C,ED6uCA,EC7uCML,KD6uCC,IAAI,GC7uCO,GAAG3H,QAAQ,CAAC2H,YAAY;ID+uC3C,AC9uCCzpB,aAAa,CAACs6G,OAAO,CAAE7wF,YAAa,CAAC;ED8uCrC,EC7uCA,IAAKA,YAAY,EAAG;ID6uCpBtxC,EC3uCC6nB,CD2uCD,YC3uCc,CAACu6G,OAAO,CAAEz4F,QAAQ,CAACoH,gBAAiB,CAAC;ID2uCnDl3C,EC1uCCguB,GD0uCD,EAED,QC5uCe,CD4uCfic,AC5uCgBowH,OD4uCTpwH,AC5uCgB,CD4uCdhuB,AC5uCgB6zB,KD4uCX,EAAG,CC5uCgB,CAACqH,WAAW,EAAErH,QAAQ,CAACsH,UAAU,EAAEtH,QAAQ,CAACuH,eAAgB,CAAC;MD8uC7F,AC7uCCrpB,aAAa,CAAC2tI,KAAK,CAAE7rH,QAAQ,CAACwH,WAAW,EAAExH,QAAQ,CAACyH,YAAY,EAAEzH,QAAQ,CAAC0H,YAAa,CAAC;IAE1F;IAEAgqH,ED2uCAngH,GAAG,CAACrd,UC3uCY,CAAE8L,ED2uCD,CAAE7zB,KAAM,AC3uCC,CD2uCA,AC3uCC+7B,aAAa,EAAElI,QAAQ,CAACmI,mBAAmB,EAAEnI,QAAQ,CAACoI,kBAAmB,CAAC;IAErGpI,ED2uCA,IAAI,CAAChkB,CC3uCG,CAACssB,UD2uCQ,CAAEiJ,GAAI,CAAC,AC3uCA,KAAK,IAAI,GAC9B3a,MAAM,CAAEvjB,EAAE,CAACs+I,wBAAyB,CAAC,GACrC56H,OAAO,CAAE1jB,EAAE,CAACs+I,wBAAyB,CAAC;EAE1C,IDyuCC,OAAO,IAAI;IAEZ;EAAC,ACzuCD;IDyuCCt7J,GAAA;ECvuCD,EDuuCCnG,KAAA,EAED,ACzuCSk/J,SDyuCTh1H,GCzuCqBg1H,CAAEnU,GDyuChB7gH,CAAEjuB,KAAK,ACzuCkB,EDyuCf,ACzuCkB;IAElC,EDyuCA,ECzuCKghJ,gBAAgB,KAAKlS,SAAS,EAAG;MAErC,IAAKA,SAAS,EAAG;MDyuClB1pG,ECvuCEl+B,CDuuCC,CAAC8gB,ACvuCA,CAACy9H,SAAS,CAAEv+I,EDuuCC,ACvuCC,CDuuCClH,ACvuCA0lJ,EAAG,CAAC,EDuuCE,CAAC;MAE1B,ACvuCC,CAAC,GDuuCE,CAAC71I,ECvuCG,UDuuCS,CAAEu1B,GAAI,CAAC;MAExB,ECvuCEl+B,EAAE,CAACu+I,EDuuCE,IAAI,GCvuCG,CAAEv+I,EAAE,CAACy+I,GAAI,CAAC;IDyuCzB,ECvuCE;EDuuCD,ICruCC3E,gBAAgB,GAAGlS,SAAS;IDquC7B5kJ,ACnuCA,GDmuCA;ECjuCD,EDiuCCnG,KAAA,EAED,SAAAgiB,SAASA,CAAEnM,CAAC,EAAEnU,CAAC,EAAE+pB,CAAC,EAAG;ECjuCrB,IDmuCC,KCnuCQ0zI,WAAWA,CAAE0C,QAAQ,EAAG;IAEhC,IAAKA,QAAQ,KAAKx6J,uBAAY,EAAG;MDmuCjCg6C,ACjuCC3a,GDiuCE,CAACzkB,ECjuCG,CAAEkB,EAAE,CAACi8I,SDiuCO,ACjuCG,CDiuCDvpJ,ACjuCE,CDiuCD,EAAEnU,CAAC,EAAE+pB,CAAE,CAAC;MAE9B,ACjuCC,IDiuCG,ACjuCEo2I,CDiuCD/1I,OCjuCS,KDiuCG,ACjuCEoxI,CDiuCA77G,GAAI,CAAC,UCjuCU,EAAG;MDmuCrC,ECjuCE,IAAKwgH,CDiuCA,IAAI,GCjuCI,KAAKv6J,uBAAY,EAAG;IDmuCpC,MCjuCI6b,EAAE,CAAC0+I,QAAQ,CAAE1+I,EAAE,CAACw8I,IAAK,CAAC;EDiuCzB,MC/tCE,CAAC,MAAM,IAAKkC,QAAQ,KAAKt6J,wBAAa,EAAG;ID+tC3CpB,GAAA,GC7tCGgd,EAAE,CAAC0+I,QAAQ,CAAE1+I,EAAE,CAAC2+I,KAAM,CAAC;ID6tC1B9hK,IC3tCE,CD2tCF,AC3tCG,ED6tCJ,IC7tCU,KD6tCV2hB,KAAKA,CAAE9L,CAAC,EAAEnU,CAAC,EAAE+pB,CAAC,EAAG;MAEhB,IC7tCGtI,EAAE,CAAC0+I,QAAQ,CAAE1+I,EAAE,CAAC4+I,cAAe,CAAC;QAEjC;MD6tCF1gH,AC3tCC,GD2tCE,CAACx/B,SAAS,CAAEhM,CAAC,EAAEnU,CAAC,EAAE+pB,CAAE,CAAC;ICztCxB,CAAC,CD2tCD,IAAI,CAACK,AC3tCE,YD2tCU,CAAEu1B,GAAI,CAAC;MAExB,AC3tCCxa,OD2tCM,AC3tCC,CAAE1jB,EAAE,CD2tCD,AC3tCEi8I,SAAU,CAAC;ID6tCzB,AC3tCC;ED2tCA,ECztCAlC,eAAe,GAAG2E,QAAQ;EAE3B,EDutCC17J,GAAA;ECrtCD,EDqtCCnG,KAAA,EAED,ACvtCSgiK,SDutCT/jI,GCvtCqB+jI,CAAEj7I,EDutCjBkX,CAAExE,ECvtCoB,EAAG,EDutCjB,EAAG;ICrtChB,EDutCA6nB,ECvtCKv6B,EDutCD,CAACkX,ECvtCK,IDutCC,CAAExE,ACvtCE0jI,MDutCK,CAAC,SCvtCU,EAAG;MDytClC77G,ACvtCC,IDutCG,ACvtCEi8G,CDutCD1yI,YAAY,CAAC,CAAC,GCvtCK,EAAG1H,EAAE,CAAC8+I,SAAS,CAAEl7I,KAAM,CAAC;MDytChD,ACvtCCo2I,IDutCG,CAACrxI,WCvtCY,CDutCA,CAAEw1B,CCvtCCv6B,GDutCG,CAAC7E,CCvtCC,KDutCM,CAAC;ICrtChC,EDutCA,OAAO,IAAI;ECrtCZ,EDutCA;EAAC,ACrtCD,SAASs/I,gBAAgBA,CAAExpH,aAAa,EAAEkqH,MAAM,EAAEthB,KAAK,EAAG;IDqtCzDz6I,ACntCA,GDmtCA,CCntCK6xC,aAAa,EAAG;IDmtCrBh4C,ECjtCC0mC,GDitCD,EAED,CCntCQ,CAAEvjB,EAAE,CAACg/I,IDmtCbzkJ,MAAMA,CAAA,EAAG,MCntCwB,CAAC;MDqtCjC,ACntCC,IDmtCG,ACntCE0/I,CDmtCDjjI,kBAAkB,CAAC,CAAC,KCntCO,KAAK+nI,MAAM,IAAI7E,yBAAyB,KAAKzc,KAAK,EAAG;MDqtCrF,ECntCEz9H,EDmtCE,ACntCA,CDmtCC+W,ACntCA8d,WDmtCW,CAAC3e,CCntCC,CAAE6oI,MAAM,CDmtCA,CAAE3gH,ACntCAq/F,KAAM,CAAC,CDmtCC,CAAC,CAACjlI,MAAM,CAAC,CAAC;MAE9C,ECntCEyhJ,EDmtCE,CAACp7I,SAAS,CAAEu/B,OAAO,CAAC1rC,CAAC,EAAE0rC,ECntCC,GAAG2gH,EDmtCG,CAACxgK,CAAC,EAAE6/C,ACntCD,ODmtCQ,CAAC91B,CAAE,CAAC;MAEjD,ECptCE4xI,KDotCK,IAAI,gBCptCgB,GAAGzc,KAAK;IDstCpC,ECptCE;EDotCD,ECltCA,CAAC,MAAM;IDktCPz6I,EChtCC0gC,CDgtCD,MChtCQ,CAAE1jB,EAAE,CAACg/I,mBAAoB,CAAC;IDgtClCniK,AC9sCA,KD8sCA,EAED,SAAA04B,aAAaA,CAAEC,MAAM,EAAG;EC9sCxB,IDgtCC,IAAMkB,iBAAiB,GAAG,IAAI,CAACC,YAAY,CAAE,UAAW,CAAC;EC9sC1D,IDgtCC,IAAKD,CChtCG29H,cAAcA,CAAE3pI,CDgtCF,KAAKha,KChtCQ,EAAG,EDgtCF,EAAG;IC9sCvC,IDgtCC,AChtCIga,IDgtCE0W,OChtCS,CDgtCD,CChtCI,EDgtCD,EAAE;MC9sCnBmC,EDgtCA,IChtCM,CDgtCA,AChtCEvjB,EAAE,CAACi/I,CDgtCDniK,CAAC,GAAG,CAAC,EAAEsB,CAAC,GAAGo3B,AChtCG,CAAC,KDgtCE,CAACr0B,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;IC9sCnD,CAAC,KDgtCC,CChtCK,GDgtCCs5B,KAAK,GAAGZ,MAAM,CAAE14B,CAAC,CAAE;MC9sC1B4mC,ID+sCCtC,GC/sCM,CAAEphB,EAAE,CAACi/I,CD+sCH,CAACn+J,IAAI,CAAEs1B,KAAK,AC/sCI,CD+sCH1jB,AC/sCI,CD+sCH,EAAE0jB,KAAK,CAAC73B,CAAC,EAAE63B,KAAK,CAAC9N,CAAC,IAAI,CAAE,CAAC;IC7sCjD,ID+sCC;EC7sCF,MD+sCE,IAAI,CAACg3B,YAAY,CAAE,UAAU,EAAE,IAAIvB,sBAAsB,CAAE3c,QAAQ,EAAE,CAAE,CAAE,CAAC;MAE3E,CAAC,MAAM;EC/sCR,MDitCE,IAAMhjC,GAAC,GAAGqT,IAAI,CAACY,GAAG,CAAEmjB,MAAM,CAACr0B,MAAM,EAAEu1B,iBAAiB,CAACxL,KAAM,CAAC,CAAC,CAAC;;EC/sChE,MDitCE,GCjtCOg0I,EDitCD,IAAIpiK,IAAC,GAAG,ACjtCMoiK,CDitCL,ACjtCOC,EDitCLriK,IAAC,GAAGsB,ACjtCU,EAAG,CDitCZ,EAAEtB,IAAC,EAAG,EAAG;IC/sChC,IAAKqiK,EDitCH,IAAM/oI,GCjtCM,GDitCD,ECjtCM1lB,CDitCH8kB,MAAM,CAAE14B,CCjtCI,EAAGqiK,CDitCN,CAAE,OCjtCa,GAAGn/I,EAAE,CAACo/I,QAAQ,GAAGvzB,WAAW,GAAG,CAAC;IAExE,IAAK0uB,EDgtCH7jI,gBChtCqB,CDgtCJ,CAAC+lB,GChtCQ0iH,GDgtCF,CAAEriK,IAAC,CChtCQ,CDgtCNs5B,CChtCS,KDgtCJ,CAAC1jB,CAAC,EAAE0jB,MAAK,CAAC73B,CAAC,EAAE63B,MAAK,CAAC9N,CAAC,IAAI,CAAE,CAAC;MC9sC9DtI,EDgtCA,AChtCE,CAACk/I,aAAa,CAAEC,SAAU,CAAC;MAC7B5E,EDitCA,IAAK/kI,MAAM,CAACr0B,KCjtCM,CDitCA,ECjtCGg+J,CDitCAzoI,QCjtCS,SDitCQ,CAACxL,KAAK,EAAG;IC/sChD,MDitCErV,OAAO,CAACC,IAAI,CAAE,wGAAyG,CAAC;EC/sC3H,MDitCE;EC/sCF,MDitCE4gB,GCjtCOukI,WAAWA,CAAEoE,EDitCH,CAACv3I,MCjtCW,EAAEw3I,GDitCF,GAAG,IAAI,ECjtCO,EAAEH,SAAS,EAAG;IAE1D,EDitCA,ECjtCKA,SAAS,KAAKzuJ,SAAS,EAAG;MDmtC/B,ACjtCC,IAAK6pJ,GDitCC,IAAI,WCjtCa,KAAK,IAAI,EAAG;IDmtCrC,ICjtCG4E,SAAS,GAAGn/I,EAAE,CAACo/I,QAAQ,GAAGvzB,WAAW,GAAG,CAAC;EDitC3C,IC/sCC,CAAC,MAAM;ID+sCR7oI,GAAA,CC7sCEm8J,SAAS,GAAG5E,kBAAkB;ID6sChC19J,EC3sCC,GD2sCD,EAED,SAAAm6B,kBAAkBA,CAAA,EAAG;IC3sCpB,ED6sCA,IAAK,IAAI,CAACD,WAAW,KAAK,IAAI,EAAG;IC3sCjC,ID6sCC,AC7sCGwoI,ID6sCC,CAACxoI,OC7sCU,GAAGyjI,CD6sCF,GAAG,IAAIzlI,IAAI,CAAC,CAAC,MC7sCS,CAAEoqI,SAAS,CAAE;IAEpD,ED6sCA,EC7sCKI,YAAY,KAAK7uJ,SAAS,EAAG;MD+sClC,AC7sCC6uJ,ID6sCKn+H,QAAQ,AC7sCD,GD6sCI,AC7sCD,ID6sCK,CAACyd,UAAU,CAACzd,QAAQ;MACzC,EC9sCkBpjC,ED8sCZ+hD,EC9sCgB,EAAErvC,SAAS,UD8sCJ,GAAG,IAAI,CAACouC,eAAe,CAAC1d,QAAQ;MAE7D,EChtCmCjW,EDgtC9BiW,KChtCqC,EAAE1wB,CDgtC/B,IAAI0wB,QAAQ,CAAC4e,mBAAmB,EAAG;MChtCM,CAAC,CDktCtDnqC,OAAO,CAAC4xB,KAAK,CAAE,8FAA8F,EAAE,IAAK,CAAC;MCjtCrH+yH,EDmtCA,IAAI,CAACzjI,WAAW,CAACnhB,CCntCG,CAAEupJ,CDmtCF,CACnB,IAAIttI,GCptC0B,CAAE,GDotCrB,ACptCwB0tI,CDotCtB,CAAEvqI,QAAQ,EAAE,ACptCsB,CDotCpBA,QAAQ,EAAE,CAAEA,QAAS,CAAC,EACjD,IAAInD,OAAO,CAAE,CAAEmD,QAAQ,EAAE,CAAEA,QAAQ,EAAE,CAAEA,QAAS,CACjD,CAAC;ICptCF,IDstCC;ICptCD,EDstCA,ECttCKuqI,YAAY,CAACvhK,IAAI,KAAKqhK,SAAS,IAAIE,YAAY,CAACp0I,OAAO,KAAKm0I,YAAY,EAAG;MDwtChF,ACttCC,IDstCIl+H,ACttCCm5H,QDstCO,KAAK7pJ,KCttCM,IDstCG,CCttCEyuJ,CDstCC,QCttCQ,EAAG;QDwtCxC,ACttCCn/I,EAAE,CAACk/I,CDstCA,CAACnoI,WAAW,ACttCC,CDstCAzB,ACttCE6pI,SAAU,CAAC,YDstCS,CAAE/9H,QAAS,CAAC;QCrtClDm5H,kBAAkB,GAAG4E,SAAS;MAE/B,EDqtCA;MCntCAn/I,EAAE,CAACi7I,WAAW,CAAEoE,SAAS,EAAEC,YAAY,IAAI3D,aAAa,CAAE0D,SAAS,CAAG,CAAC;MAEvEE,EDmtCA,IAAKx/G,MCntCO,CAAC/hD,IAAI,GAAGqhK,SDmtCQ,ACntCC,EDmtCE;MCltC/BE,IDotCC,KAAM,GCptCK,CDotCDziK,ACptCEquB,CDotCD,GAAG,CAAC,EAAEI,ACptCE,EDotCA,CCptCG+zI,EDotCAv/G,UCptCY,aDotCW,CAAC5+C,MAAM,EAAErE,CAAC,GAAGyuB,EAAE,EAAEzuB,CAAC,EAAG,EAAG;ICltCvE,QDotCG,IAAMmjD,cAAc,GAAGF,uBAAuB,CAAEjjD,CAAC,CAAE;ECltCvD,UDmtCIuhD,MAAM,CAAC/oB,sBAAsB,CAAE2qB,cAAe,CAAC;ECjtCnD,SAASu/G,CDmtCL,IAAK,IAAI,CAACzgH,GCntCQygH,CAAA,EAAG,cDmtCS,EAAG;ICjtCpC,IAAMD,MDmtCFhhH,MCntCc,GDmtCL,ACntCQi8G,CDmtCPjjJ,UAAU,CAAE,IAAI,CAACwf,GCntCU,CAAEwjI,ODmtCD,CAACloJ,GAAG,EAAEgsC,KCntCa,CDmtCP,ACntCS,CDmtCRhsC,GAAI,CAAC;ICjtC5D,IAAKktJ,MDktCD,IAAI,CAACxoI,CCltCQ,KAAKrmB,KDktCF,CAAC0kB,GCltCU,IAAImqI,MDktCD,CAAEhhH,KCltCW,CAACvgD,GDktCF,CAAC,ACltCK,KAAK0S,SAAS,EAAG;MAEpEsP,EAAE,CAACi7I,KDktCA18G,MCltCW,CAAEghH,EDktCJ,CAAChoJ,SCltCe,CDktCL,ACltCMvZ,CDktCJ,GCltCQ,CDktCJ,CAAC+4B,ACltCK,IAAK,CAAC,MDktCA,CAACzkB,GAAG,EAAE+rC,MAAM,CAAC/rC,GAAI,CAAC;MChtC3DitJ,QDitCG,IAAI,ACjtCK,CDitCJxoI,ACjtCK/4B,IAAI,GAAG0S,IDitCD,CAAC0kB,ICjtCS,SDitCI,CAAEmpB,SAAU,CAAC;MChtC9CghH,MDktCE,CAAC,KCltCS,CDktCH,ACltCIp0I,OAAO,GAAGza,SAAS;IAEjC,UDktCI,IAAI,CAACqmB,WAAW,CAAC3B,aAAa,CAAEipB,MAAM,CAAChsC,GAAI,CAAC;EChtCjD,YDitCK,IAAI,CAAC0kB,WAAW,CAAC3B,aAAa,CAAEipB,MAAM,CAAC/rC,GAAI,CAAC;EC/sCjD,SAASmtJ,CDitCL,mBCjtCyBA,CAAA,EAAG;IAE/B,IAAI,EDitCF;MC/sCDz/I,EDitCA,ACjtCE,CAACy/I,oBAAoB,CAAC73H,KAAK,CAAE5nB,EAAE,EAAE1M,SAAU,CAAC;IAE/C,CAAC,CDitCD,ACjtCE,CDitCD,MAAM,ACjtCGm0B,KAAK,EAAG;MAEjB5xB,EDitCA,IAAI,CAACkhB,ACjtCE,CAAC0Q,KAAK,CAAE,IDitCC,CAACtS,SAAS,CAAC,CAAC,GCjtCM,EAAEsS,KAAM,CAAC;IAE5C,EDitCA;EC/sCD,IDitCC,IAAKvmC,KAAK,CAAE,IAAI,CAAC61B,WAAW,CAAC1kB,GAAG,CAACK,CAAE,CAAC,IAAIxR,KAAK,CAAE,IAAI,CAAC61B,WAAW,CAAC1kB,GAAG,CAAC9T,CAAE,CAAC,IAAI2C,KAAK,CAAE,IAAI,CAAC61B,WAAW,CAAC1kB,GAAG,CAACiW,CAAE,CAAC,EAAG;EC/sC9G,MDitCEzS,GCjtCO6pJ,IDitCA,CAACj4H,KAAK,CAAE,SCjtCYi4H,CAAA,EAAG,yHDitCsH,EAAE,IAAK,CAAC;IC/sC7J,EDitCA,ECjtCI;IDmtCL,ECjtCE1/I,EAAE,CAAC0/I,oBAAoB,CAAC93H,KAAK,CAAE5nB,EAAE,EAAE1M,SAAU,CAAC;EDitC/C,EC/sCA,CAAC,CAAC,OAAQm0B,KAAK,EAAG;ID+sClBzkC,EC7sCC6S,CD6sCD,MC7sCQ,CAAC4xB,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;ID6sC5C5qC,AC3sCA,KD2sCA,EAED,SAAAijD,qBAAqBA,CAAA,EAAG;EC3sCxB,ID6sCC,IAAK,IAAI,CAACnU,cAAc,KAAK,IAAI,EAAG;EC3sCrC,MD6sCE,GC7sCOg0H,CD6sCH,CAACh0H,WC7sCeg0H,CAAA,ED6sCD,AC7sCI,GD6sCD,IAAIlmI,MAAM,CAAC,CAAC;IC3sCnC,ED6sCA,EC7sCI;MD+sCJ,AC7sCCzZ,EAAE,CAAC2/I,CD6sCEv+H,QAAQ,GAAG,CC7sCA,CAACwG,ED6sCG,CAACiX,EC7sCC,CAAE7+B,EAAE,EAAE1M,GD6sCG,CAAC8tB,KC7sCM,CAAC,ED6sCC;IC3sCzC,CAAC,CD4sCD,AC5sCE,ID4sCI2e,GC5sCItY,KAAK,EAAG,aD4sCW,GAAG,IAAI,CAACqX,eAAe,CAAC1d,QAAQ;MAE7D,AC5sCCvrB,ID4sCIurB,GC5sCG,CAACqG,ID4sCI,CC5sCC,CAAE,ED4sCCrG,QAAQ,CAAC4e,QC5sCS,EAAEvY,KAAM,CAAC,GD4sCC,EAAG;IC1sChD,ID4sCC5xB,OAAO,CAAC4xB,KAAK,CAAE,oGAAoG,EAAE,IAAK,CAAC;EC1sC7H,MD4sCE,IAAI,CAACkE,cAAc,CAAC/1B,GAAG,CAAE,IAAIic,OAAO,CAAC,CAAC,EAAEmD,QAAS,CAAC;EC1sCpD,MD4sCE,GC5sCO4qI,aAAaA,CAAA,EAAG;IAExB,ED4sCA,EC5sCI;MD8sCJ,AC5sCC5/I,EAAE,CAAC4/I,CD4sCCx+H,QAAQ,EAAG,EC5sCC,CAACwG,KAAK,CAAE5nB,EAAE,EAAE1M,SAAU,CAAC;IAExC,CAAC,CAAC,ED4sCD,KC5sCSm0B,KAAK,EAAG;MAEjB5xB,OAAO,CAAC4xB,KAAK,CAAE,mBAAmB,EAAEA,KAAM,CAAC;IAE5C,ID0sCC,IAAMltB,MAAM,GAAG,IAAI,CAACoxB,cAAc,CAACpxB,MAAM;ECxsC3C,MD0sCE8jC,MAAM,CAAC/oB,sBAAsB,CAAE8L,QAAS,CAAC;ECxsC3C,SAASy+H,uBAAuBA,CAAA,EAAG;IAElC,IDwsCC,ACxsCG;MAEH7/I,EAAE,CAAC6/I,uBAAuB,CAACj4H,KAAK,CAAE5nB,EAAE,EAAE1M,SAAU,CAAC;IAElD,CAAC,CAAC,EDssCD,IAAKysC,CCtsCItY,KAAK,EAAG,eDssCW,EAAG;MCpsC/B5xB,IDssCC,GCtsCM,CAAC4xB,CDssCD,IAAI3qC,ACtsCE,CDssCD,ACtsCG,GDssCA,CAAC,EAAEyuB,EAAE,GAAGw0B,QCtsCW,EAAEtY,KAAM,CAAC,ODssCG,CAACtmC,MAAM,EAAErE,CAAC,GAAGyuB,EAAE,EAAEzuB,CAAC,EAAG,EAAG;ICpsCvE,QDssCG,IAAMmjD,cAAc,GAAGF,uBAAuB,CAAEjjD,CAAC,CAAE;ECpsCvD,UDqsCIwhD,gBAAgB,CAAChpB,sBAAsB,CAAE2qB,cAAe,CAAC;ECnsC7D,SAAS6/G,CDqsCL,IAAK,IAAI,CAAC/gH,aCrsCkB+gH,CAAA,EAAG,IDqsCD,EAAG;ICnsCpC,IAAI,MDqsCAvhH,SAAS,CAAChnC,UAAU,CAAE8mC,MAAM,CAAChsC,GAAG,EAAEisC,gBAAgB,CAACjsC,GAAI,CAAC;MCnsC3D2N,EAAE,CAAC8/I,KDosCAzhH,MAAM,CAACjpB,WCpsCgB,CAACwS,CDosCJ,CAAE2W,GCpsCO,CAAEv+B,EAAE,EAAE1M,CDosCH,CAAC,OCpsCY,CAAC;IAElD,CAAC,CAAC,OAAQm0B,CDosCN8W,ICpsCW,EAAG,GDosCL,CAAChnC,UAAU,CAAE8mC,MAAM,CAAC/rC,GAAG,EAAEgsC,gBAAgB,CAAChsC,GAAI,CAAC;MClsC3DuD,OAAO,CDmsCJwoC,ACnsCK5W,KAAK,CDmsCJ,ACnsCM,CDmsCLrS,aAAa,CAAEmpB,ICnsCS,EAAE9W,GDmsCD,CAAC,CCnsCM,CAAC;IAE5C,QDmsCG,CAAC,MAAM;ECjsCX,YDmsCK4W,MAAM,CAACjpB,aAAa,CAAEkpB,gBAAgB,CAACjsC,GAAI,CAAC;ECjsCjD,SAAS0tJ,GDksCJ1hH,MAAM,CAACjpB,EClsCS2qI,CAAA,EAAG,QDksCC,CAAEzhH,gBAAgB,CAAChsC,GAAI,CAAC;IChsChD,IAAI,IDksCD;MChsCF0N,EAAE,CAAC+/I,CDksCF,WClsCc,CAACn4H,KAAK,CAAE5nB,EAAE,EAAE1M,SAAU,CAAC;IAEvC,CAAC,CAAC,EDksCD,KClsCSm0B,KAAK,EAAG;MAEjB5xB,EDksCAwoC,KClsCO,CDksCD,AClsCE5W,CDksCDvR,IClsCM,CAAE,IDksCC,CAAE3b,MAAO,CAAC,OClsCQ,EAAEktB,KAAM,CAAC;IAE5C;EAED,MDgsCE;EC9rCF,MD+rCE,GC/rCOu4H,YAAYA,CAAA,EAAG;IAEvB,IAAI;MAEHhgJ,ED6rCA,AC7rCE,CAACggJ,GD6rCCpmI,SC7rCW,CAACgO,CD6rCD,GAAG,CAAC,AC7rCE,CAAE5nB,EAAE,EAAE1M,SAAU,CAAC;IAEvC,CAAC,CAAC,ED6rCD,KAAM,AC7rCGm0B,ID6rCC3qC,CC7rCI,EAAG,CD6rCN,GAAG,CAAC,EAAEyuB,GAAE,GAAG6V,QAAQ,CAAClW,KAAK,EAAEpuB,IAAC,GAAGyuB,GAAE,EAAEzuB,IAAC,EAAG,EAAG;MC3rCrD+Y,ID6rCC0oC,GC7rCM,CAAC9W,KD6rCE,AC7rCG,CD6rCFvtB,AC7rCI,mBD6rCe,AC7rCI,CD6rCFknB,CC7rCIqG,KAAM,CAAC,CD6rCH,EAAE3qC,IAAE,CAAC;IC3rC9C,MD6rCE88B,WAAW,GAAGnoB,IAAI,CAACa,GAAG,CAAEsnB,WAAW,EAAErf,MAAM,CAAClB,iBAAiB,CAAEklC,SAAU,CAAE,CAAC;EC3rC/E,MD6rCE;EC3rCF,SAASm9G,UAAUA,CAAA,EAAG;IAErB,ID2rCC,AC3rCG;MAEH17I,EAAE,CAAC07I,UAAU,CAAC9zH,KAAK,CAAE5nB,EAAE,EAAE1M,SAAU,CAAC;IAErC,CAAC,CAAC,EDyrCD,IAAKysC,CCzrCItY,KAAK,EAAG,eDyrCW,EAAG;MCvrC/B5xB,IDyrCC,GCzrCM,CAAC4xB,CDyrCD,IAAI3qC,ACzrCE,CAAE,GDyrCH,GAAG,CAAC,EAAEyuB,IAAE,GAAGw0B,GCzrCW,EAAEtY,KAAM,CAAC,YDyrCG,CAACtmC,MAAM,EAAErE,IAAC,GAAGyuB,IAAE,EAAEzuB,IAAC,EAAG,EAAG;ICvrCvE,QDyrCG,IAAMmjD,eAAc,GAAGF,uBAAuB,CAAEjjD,IAAC,CAAE;ECvrCvD,UDwrCI,IAAMiiD,oBAAoB,GAAG,IAAI,CAACA,oBAAoB;ECtrC1D,SAASy8G,CDwrCL,KAAM,IAAItiI,ACxrCKsiI,CDwrCJ,ACxrCI,EAAG,CDwrCJ,CAAC,EAAEt7G,EAAE,GAAGD,eAAc,CAAC/0B,KAAK,EAAEgO,CAAC,GAAGgnB,EAAE,EAAEhnB,CAAC,EAAG,EAAG;ICtrC9D,IAAI,MDwrCAqlB,SAAS,CAACrkC,mBAAmB,CAAE+lC,eAAc,EAAE/mB,CAAE,CAAC;MCtrCrDlZ,EAAE,CAACw7I,KDwrCA,IAAKz8G,CCxrCK,CAACnX,KAAK,CAAE5nB,EAAE,EAAE1M,QDwrCG,CCxrCO,CDwrCJ,ACxrCK;IAErC,CAAC,CAAC,OAAQm0B,GDwrCL2W,ECxrCU,EAAG,GDwrCN,CAAClkC,mBAAmB,CAAEknB,QAAQ,EAAElI,CAAE,CAAC;MCtrC9CrjB,OAAO,CAAC4xB,EDurCJ8W,GCvrCS,CAAE,KDurCF,CAAClnC,GAAG,CAAE+mC,OAAQ,CAAC,CCvrCM,EAAE3W,KAAM,CAAC;IAE5C,UDurCI;ECrrCL,YDurCK7N,WAAW,GAAGnoB,IAAI,CAACa,GAAG,CAAEsnB,WAAW,EAAErf,MAAM,CAAClB,iBAAiB,CAAEklC,SAAU,CAAE,CAAC;YAE7E;ECvrCJ,QDyrCG;QAED;ECzrCF,MD2rCE,GC3rCO9zB,CD2rCH,CAACkhB,KC3rCSlhB,CAAEA,OAAO,CD2rCJ,CAAC2J,AC3rCM,MD2rCA,GAAG3iB,IAAI,CAACmH,IAAI,CAAEghB,WAAY,CAAC;ICzrCtD,ID2rCC,AC3rCIihI,ID2rCC35J,KAAK,CAAE,IAAI,AC3rCE,CD2rCDyqC,AC3rCE7xB,MAAM,CAAE2Q,OD2rCI,AC3rCI,CD2rCH2J,AC3rCI,KAAK,CD2rCF,CAAC,EAAG,CC3rCG,EAAG;MAEjDpU,EAAE,CAACyK,CD2rCF5U,MC3rCS,CD2rCF,AC3rCI4U,CD2rCHgd,KAAK,CAAE,AC3rCG,CAAC/0B,CAAC,EAAE+X,OAAO,CAAClsB,CAAC,EAAEksB,OAAO,CAACnC,CAAC,EAAEmC,OAAO,CAAClC,CAAE,CAAC,0FD2rCsF,EAAE,IAAK,CAAC;MC1rCtJsyI,ED4rCA,YC5rCc,CAACzjJ,IAAI,CAAEqT,OAAQ,CAAC;IAE/B,ED4rCA;EC1rCD,ED4rCA;EAAC,AC1rCD,SAASE,QAAQA,CAAEA,QAAQ,EAAG;ID0rC7B3nB,ACxrCA,GDwrCA,CCxrCK83J,eAAe,CAAChhJ,MAAM,CAAE6Q,QAAS,CAAC,KAAK,KAAK,EAAG;IDwrCpD9tB,ECtrCCmjB,EAAE,CDsrCH,ACtrCI2K,EDwrCL,MCxrCa,CAAEA,EDwrCfw1B,MCxrCuB,CAACztC,CAAC,EAAEiY,KDwrCZw1B,CAAA,EAAG,ACxrCiB,CAAC5hD,CAAC,EAAEosB,QAAQ,CAACrC,CAAC,EAAEqC,QAAQ,CAACpC,CAAE,CAAC;MD0rC9D,ACzrCCuyI,IDyrCK9pJ,KAAK,GAAG,GCzrCE,CDyrCE,ACzrCDoG,CDyrCEpG,GCzrCE,CAAE2Z,CDyrCC,OCzrCQ,CAAC;IAEjC,EDwrCA,IAAMk0B,UAAU,GAAG,IAAI,CAACA,UAAU;ECtrCnC;EAEA,IDsrCC,KCtrCQohH,gBAAgBA,CAAEC,aAAa,EAAEz5B,OAAO,EAAG;IAEnD,EDqrCA,ECrrCI1gH,OAAO,GAAG8yI,aAAa,CAACjiJ,GAAG,CAAE6vH,OAAQ,CAAC;IAE1C,IAAK1gH,OAAO,KAAKrV,SAAS,EAAG;MDqrC7B,ACnrCCqV,IDmrCI/U,GCnrCG,EDmrCE,CCnrCC,IDmrCI,ACnrCA8gH,IDmrCI,GCnrCG,CDorCpBjzE,ACprCqB,CAAC,SDorCZ,CAACzd,QAAQ,KAAK1wB,SAAS,IACjCmuC,UAAU,CAAC7qB,MAAM,KAAKtjB,SAAS,IAC/BmuC,UAAU,CAACz2B,EAAE,KAAK1X,SAAS,EAAG;MCprC/BmoJ,EDsrCAhjJ,OAAO,CAAC4xB,GCtrCK,CAAC7xB,CDsrCD,CAAE,CCtrCE,CAAE6wH,OAAO,EAAE1gH,OAAQ,CAAC,2FDsrCyF,CAAC;ICprChI,IDqrCC;ICnrCD,EDqrCA,ECrrCIo6I,UAAU,GAAGp6I,OAAO,CAACnP,GAAG,CAAEspJ,aAAc,CAAC;IAE7C,EDqrCA,ECrrCKC,EDqrCCzpI,QCrrCS,KAAKhmB,IDqrCG,GAAGmuC,ECrrCG,EAAG,MDqrCI,CAACzd,QAAQ;MAC7C,ACprCC++H,IDorCK//G,MCprCK,GAAGpgC,EAAE,CAACogJ,GDorCI,GAAGvhH,UAAU,CAAC7qB,GCprCE,CAAEyyG,EDorCE,KCprCK,EAAEy5B,aAAa,CAAC3+J,IAAK,CAAC;MDqrCpE,ACnrCCwkB,IDmrCKs6B,GCnrCE,CAACzqC,GAAG,CAAEsqJ,GDmrCG,GAAGrhH,OCnrCO,EAAEshH,CDmrCC,CAAC/3I,EAAE,MCnrCO,CAAC;IAEzC,EDmrCA,IAAK,IAAI,CAACo3B,YAAY,CAAE,SAAU,CAAC,KAAK,KAAK,EAAG;ECjrCjD,MDmrCE,IAAI,CAACF,YAAY,CAAE,SAAS,EAAE,IAAI9D,eAAe,CAAE,IAAIxlC,YAAY,CAAE,CAAC,GAAG0gB,iBAAiB,CAACxL,KAAM,CAAC,EAAE,CAAE,CAAE,CAAC;ECjrC3G,IDmrCC,KCnrCQm1I,mBAAmBA,CAAEH,aAAa,EAAEz5B,OAAO,EAAG;IAEtD,EDmrCA,ECnrCM1gH,EDmrCAu6B,KCnrCO,GAAGu4G,QDmrCM,GAAG,ECnrCI,CAACjiJ,CDmrCD,CAAC+f,CCnrCG,CAAE8vG,OAAQ,CAAC,EDmrCF,CAAE,SAAU,CAAC;IClrCvD,EDorCA,ECprCM05B,EDorCA5/G,IAAI,GAAG,CCprCG,CDorCD,ECprCIx6B,OAAO,CAACnP,GAAG,CAAEspJ,aAAc,CAAC;IAE/C,IDkrCiB1/G,AClrCZo4G,IDkrCgB,GAAG,EAAE,EClrCV,CAAChiJ,GAAG,CAAE6vH,OAAQ,CAAC,KAAK05B,UAAU,EAAG;MDorCjD,AClrCC,KDkrCK,IAAIrjK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG45B,iBAAiB,CAACxL,KAAK,EAAEpuB,CAAC,EAAG,EAAG;MCjrCpDkjB,EDmrCAugC,ACnrCE,CAAC8/G,GDmrCC,CAAEvjK,CAAC,CAAE,GAAG,IAAI+0B,MCnrCM,CDmrCC,ACnrCC40G,CDmrCA,CAAC,KCnrCM,EAAE05B,UAAU,EAAED,aAAa,CAACI,mBAAoB,CAAC;MAEhF1H,EDkrCAp4G,IAAI,CAAE1jD,CAAC,CAAE,EClrCE,CDkrCC,AClrCA8Y,GAAG,CDkrCCic,AClrCC40G,ODkrCM,AClrCC,CDkrCA,CAAC,AClrCC05B,UAAW,CAAC;IAEvC,EDkrCA;EChrCD,IDkrCC,IAAM1/G,EAAE,GAAG,IAAI5uB,OAAO,CAAC,CAAC;QACvB6uB,EAAE,GAAG,IAAI7uB,OAAO,CAAC,CAAC;ECjrCpB,MDkrCE8uB,EAAE,GAAG,IAAI9uB,OAAO,CAAC,CAAC;QAElB+uB,GAAG,GAAG,IAAIlqC,OAAO,CAAC,CAAC;EClrCrB,MDmrCEmqC,GAAG,ACnrCI5/C,GDmrCD,ECnrCMA,CAAA,CDmrCFyV,CCnrCK,MDmrCE,CAAC,CAAC;ICjrCpB,IDkrCCoqC,GAAG,GAAG,IAAIpqC,OAAO,CAAC,CAAC;QAEnBqqC,IAAI,GAAG,IAAIlvB,OAAO,CAAC,CAAC;IClrCrB7R,EAAE,CAAC0jB,CDmrCFsd,IAAI,ECnrCK,CDmrCF,ACnrCIhhC,EAAE,CAAC+9I,CDmrCHlsI,ICnrCS,CAAC,EDmrCH,CAAC,CAAC;IClrCrB7R,EDorCA,ACprCE,CAAC0jB,OAAO,CDorCDud,ACprCGjhC,EAAE,CAACi8I,SAAU,CAAC,CDorCHh7G,CAAEjkD,CAAC,EAAEgY,CAAC,EAAE9X,CAAC,EAAG;ICnrCnC8iB,EAAE,CAAC0jB,CDqrCF+c,EAAE,CAACvmC,GCrrCM,CAAE8F,EAAE,CAACg3I,UAAW,CAAC,CDqrCJ,CAAEtgI,iBAAiB,EAAE15B,CAAE,CAAC;ICprC/CgjB,EAAE,CAAC0jB,CDqrCFgd,EAAE,CAACxmC,GCrrCM,CAAE8F,EAAE,CAACg/I,YDqrCQ,CAAEtoI,MCrrCU,CAAC,UDqrCM,EAAE1hB,CAAE,CAAC;ICprC/CgL,EAAE,CAAC0jB,CDqrCFid,EAAE,CAACzmC,GCrrCM,CAAE8F,EAAE,CAACi/I,YDqrCQ,ACrrCK,CDqrCHvoI,ACrrCI,iBDqrCa,EAAEx5B,CAAE,CAAC;ICprC/C8iB,EAAE,CAAC0jB,CDsrCFkd,GAAG,CAAC1mC,ECtrCK,CAAE8F,EAAE,CAACs4I,YAAa,CDsrCJ,ACtrCK,CDsrCHj4G,WAAW,EAAErjD,CAAE,CAAC;ICrrC1CgjB,EAAE,CAAC0jB,CDsrCFmd,GAAG,CAAC3mC,ECtrCK,CAAE8F,EAAE,CAACs+I,aDsrCS,CAAEj+G,UCtrCc,CDsrCH,ACtrCI,EDsrCFrrC,CAAE,CAAC;ICprC1CgL,EAAE,CAACszB,CDqrCFwN,GAAG,CAAC5mC,QCrrCW,CAAE8F,EAAE,CAAC28I,ODqrCG,CAAEt8G,ACrrCI,CAAC,UDqrCM,EAAEnjD,CAAE,CAAC;ICprC1C8iB,EAAE,CAACi+I,CDsrCFv9G,EAAE,CAACjpC,GAAG,CAAEgpC,CCtrCG,CDsrCA,ACtrCEzgC,CDsrCD,CCtrCG,CAACuvG,GAAG,EAAEvvG,EAAE,CAACi9I,IAAK,CAAC;IAC/Bj9I,EAAE,CAACg+I,CDsrCFr9G,EAAE,CAAClpC,GAAG,CAAEgpC,EAAG,CAAC,MCtrCO,CAAEzgC,EAAE,CAACuvG,GAAG,EAAEvvG,EAAE,CAACi9I,IAAI,EAAEj9I,EAAE,CAACuvG,GAAG,EAAEvvG,EAAE,CAACi9I,IAAK,CAAC;IACxDj9I,EAAE,CAAC0zB,CDurCFmN,GAAG,CAACppC,GAAG,CAAEmpC,CCvrCG,CAAE,CDurCD,ACvrCE,CDurCD,CCvrCG,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IAE3B5gC,EAAE,CAACi2I,CDsrCFn1G,GAAG,CAACrpC,GAAG,CAAEmpC,ACtrCE,CAAE,EDsrCA,CAAC,CCtrCG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAK,CAAC;IACtC5gC,EAAE,CAACqkH,CDurCF,IAAM/nI,CAAC,GAAG,CCvrCE,CAAE,CDurCD,ACvrCE,EAAE,CAAC,CDurCAukD,CCvrCE,CAAC,CDurCA,CAACnuC,ACvrCC,CDurCA,ACvrCE,CAAC,EDurCAouC,GAAG,CAACviD,CAAC,GAAGuiD,GAAG,CAACpuC,CAAC,GAAGmuC,GAAG,CAACtiD,CAAC,CAAE;ICrrClDyhB,EAAE,CAACi3I,SAAS,CAAE,IAAK,CAAC;IACpBj3I,EAAE,CAAC4zB,CDsrCF,QCtrCW,CAAE5zB,EAAE,CAACq3I,IAAK,CAAC;IAEvBzsI,WAAW,CAAC6rI,WAAW,CAAE,KAAM,CAAC;IAEhCz2I,EAAE,CAAC23I,CDorCF,IAAK,CAAEz2G,ICprCK,CAAE,CAAE,CAAC,CDorCF,CAAE5kD,CAAE,CAAC,EAAG;IClrCxB0jB,EAAE,CAACu4I,CDorCFx3G,IAAI,CAAC3pC,IAAI,CAAEspC,ACprCE,CAAE,CDorCD,CAAC,CAAC7oC,OCprCU,CAAC,MDorCG,CAAEipC,GAAG,CAACviD,CAAE,CAAC,CAACiZ,eAAe,CAAEmpC,EAAE,EAAE,CAAEE,GAAG,CAACtiD,CAAE,CAAC,CAACsZ,cAAc,CAAEvb,CAAE,CAAC;ICnrC3F0jB,EAAE,CAACg0B,CDorCFgN,IAAI,CAAC5pC,IAAI,CAAEupC,ACprCE,CAAE3gC,CDorCD,CAAC,ACprCE,CDorCDnI,ACprCEu/I,MAAM,EAAE,CAAC,EAAE,GDorCC,CAAEv2G,GAAG,CAACnuC,CAAE,CAAC,ACprCC,CDorCA8E,ACprCC,eDorCc,CAAEkpC,EAAE,EAAE,CAAEI,GAAG,CAACpuC,CAAE,CAAC,CAACmF,cAAc,CAAEvb,CAAE,CAAC;ICnrC3F0jB,EAAE,CAACy4I,CDqrCFl4G,IAAI,CAAEvjD,CAAC,CAAE,CAACqa,ACrrCC,CAAE2I,EDqrCA,ACrrCE,CDqrCA+gC,ACrrCCw/G,IDqrCI,ACrrCA,CDqrCC,CCrrCCvgJ,EAAE,CAACugJ,IAAI,EAAEvgJ,EAAE,CAACugJ,IAAK,CAAC;IACzCvgJ,EAAE,CAAC04I,CDqrCFn4G,IAAI,CAAEvrC,CAAC,CAAE,CAACqC,GAAG,ACrrCC,CDqrCC0pC,ACrrCC,CAAE,CAAC,EDqrCC,CAAC;ICnrCtB/gC,EAAE,CAAC0+I,CDorCFn+G,IAAI,CAAErjD,CAAC,CAAE,ACprCC,CDorCAma,ACprCE2I,EAAE,CDorCD,ACprCEw8I,CDorCAz7G,GCprCK,CDorCA,ACprCC,CDorCA;ICnrCtB/gC,EAAE,CAACu+I,CDqrCF/9G,IAAI,CAAExjD,CAAC,CAAE,CAACqa,ACrrCC,CAAE2I,EDqrCA,ACrrCE,CDqrCAghC,ACrrCCy9G,GAAI,CDqrCA,ACrrCC,CDqrCA;ICnrCtBz+I,EAAE,CAAC60B,CDorCF2L,IAAI,CAAExrC,CAAC,CAAE,CAACqC,GAAG,CAAE2pC,ACprCA,CAAE,CAAC,EDorCE,ACprCA,CDorCC,ACprCC,CAAC;IAExBhhC,EAAE,CAACk/I,CDmrCF1+G,IAAI,CAAEtjD,CAAC,CAAE,CAACma,GAAG,CAAE2pC,ACnrCA,CAAEhhC,EAAE,CDmrCC,ACnrCAo/I,CDmrCC,OCnrCQ,CAAC;IAE/Bp/I,EDmrCA,ACnrCE,CAACk8I,eAAe,CAAEl8I,EAAE,CAACq8I,WAAW,EAAE,IAAK,CAAC;IAC1Cr8I,EDorCA,ACprCE,CAACk8I,GDorCCl9G,MAAM,GAAG,GCprCK,CDorCD,ACprCGh/B,CDorCFg/B,CCprCI,CAACo9G,IDorCC,YCprCe,EAAE,IAAK,CAAC;IAC/Cp8I,EDqrCA,ACrrCE,CAACk8I,GDqrCEl9G,MAAM,CAAC79C,KCrrCM,CDqrCA,ACrrCE6e,EAAE,CAACwgJ,EDqrCA,CAAC,EAAG,WCrrCY,EAAE,IAAK,CAAC;IAE/CxgJ,EAAE,CAACy8I,CDqrCFz9G,MAAM,GAAG,ACrrCG,CDqrCD,ACrrCG,IAAK,CAAC;IAErBh/B,EAAE,CAAC8+I,GDorCD5iH,KAAK,CCprCK,CDorCH,ACprCK,CDorCJ,ACprCM,CAAC;IAEjBl8B,EAAE,CAACyK,GDmrCDS,ICnrCQ,CDmrCH,ACnrCK,CAAC,CDmrCJla,CCnrCM,CAAC,EAAEgP,CDmrCJ,CAACkL,ACnrCK,CAACzL,MAAM,CAACmE,KAAK,EAAE5D,EAAE,CAACP,MAAM,CAACoE,MAAO,CAAC;IACrD7D,EAAE,CAAC2K,CDmrCF,CAAC,CAAE,KCnrCO,CAAE,CAAC,EAAE,CAAC,EAAE3K,EAAE,CAACP,MAAM,CAACmE,KAAK,EAAE5D,EAAE,CAACP,MAAM,CAACoE,MAAO,CAAC;MDqrCtD;ICnrCA,EDqrCA,KAAM,IAAI/mB,IAAC,GAAG,CAAC,EAAEyuB,EAAE,GAAGyzB,MAAM,CAAC79C,MAAM,EAAErE,IAAC,GAAGyuB,EAAE,EAAE,EAAGzuB,IAAC,EAAG;QAEnD,IAAMqkD,KAAK,GAAGnC,MAAM,CAAEliD,IAAC,CAAE;ICrrC1Bg8J,IDurCC,IAAM58G,KAAK,GAAGiF,GCvrCI,EDurCC,CAACjF,ACvrCC,CAAC,CAAC,GDurCE;ICrrC1Bq+G,IDsrCC,IAAMrvI,KAAK,GAAGi2B,ECtrCG,GDsrCE,ACtrCC,CDsrCAj2B,GCtrCI,EDsrCC;ICrrC1BsvI,IDurCC,KAAM,IAAIthI,CAAC,GAAGgjB,GCvrCK,EDurCA,CCvrCG,CDurCDgE,ACvrCE,CAAC,CDurCD,GAAGhE,KAAK,GAAGhxB,KAAK,EAAEgO,CAAC,GAAGgnB,EAAE,EAAEhnB,CAAC,IAAI,CAAC,EAAG;ICrrC3D6/H,MDurCE93G,cAAc,CACbjwC,GCxrCqB,EDwrChB,CAACoJ,ACxrCkB,CAAC,CAAC,EDwrChB,CAAE8e,CAAC,GAAG,CAAE,CAAC,EACnBloB,KAAK,CAACoJ,IAAI,CAAE8e,CAAC,GAAG,CAAE,CAAC,EACnBloB,KAAK,CAACoJ,IAAI,CAAE8e,CAAC,GAAG,CAAE,CACnB,CAAC;IC1rCH8/H,ID4rCC,cC5rCiB,GAAG,IAAIlnC,OAAO,CAAC,CAAC;IAClCmnC,ED6rCA,gBC7rCkB,GAAG,EAAE;IAEvBC,ED6rCA,IAAMt7I,GAAG,GAAG,EC7rCE,ED6rCEiU,CC7rCC,IAAI,ED6rCE,CAAC,CAAC;IC3rCzBsnI,ID2rC2B/3G,IAAI,GAAG,IAAIvvB,OAAO,AC3rCvB,CD2rCwB,CAAC,CC3rCtB,KAAK;IAC9BunI,ED2rCA,IAAM38J,CAAC,GAAG,IAAIo1B,CC3rCC,GAAG,GD2rCG,CAAC,AC3rCA,CD2rCC;IC1rCvBwnI,ID0rCyBh4G,EAAE,GAAG,IAAIxvB,OAAO,AC1rCrB,CD0rCsB,CAAC,CC1rCpB,IAAI;IAC3BynI,ED2rCA,SAASh4G,IC3rCM,GAAG,IAAI,CD2rCDA,CAAEziD,CAAC,EAAG;IC1rC3B06J,ID4rCC98J,CAAC,CAACyd,SC5rCY,GAAG,IAAI,GD4rCA,CAAEkmC,eAAe,EAAEvhD,CAAE,CAAC;IC3rC5C26J,ID4rCCn4G,EAAE,CAACjqC,IAAI,CAAE3a,CAAE,CAAC,WC5rCY,GAAG,IAAI;IAChCg9J,ID6rCC,IAAMp9J,CAAC,GAAGkkD,IAAI,CAAE1hD,CAAC,CAAE,CC7rCA,GAAG,IAAI;IAC3B66J,oBAAoB,GAAG,IAAI;IAC3BC,ID6rCC,aC7rCgB,GAAG,IAAIvpH,gBAAK,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IACxCwpH,iBAAiB,GAAG,CAAC;IACrBC,ID6rCCj8I,GAAG,CAACxG,IAAI,CAAE/a,CAAE,CAAC,SC7rCU,GAAG,KAAK;IAEhCy9J,ID4rCCl8I,GAAG,CAACnG,GAAG,CAAEhb,CAAC,CAACob,EC5rCI,GAAG,IAAI,KD4rCG,CAAEpb,CAAC,CAACgc,GAAG,CAAEpc,CAAE,CAAE,CAAE,CAAC,CAACka,SAAS,CAAC,CAAC;IC3rCtDwjJ,eAAe,GAAG,IAAI;IAEtBC,ID2rCC,YC3rCe,GAAG,IAAI;IAEvBC,0BAA0B,GAAG,IAAI;IACjCC,ID0rCC94G,IAAI,CAAChuB,YAAY,CAAEiuB,EAAE,CC1rCG,CD0rCDhlD,CAAE,CAAC,AC1rCC,IAAI;IAEhCw+J,IDyrCC,IAAMp3I,IAAI,ECzrCG,CDyrCA29B,ACzrCCxrC,GAAG,CDyrCA,ACzrCE,CDyrCD6C,ACzrCE,EAAE,CDyrCD,ACzrCE,CDyrCA+nC,CCzrCExgC,EAAE,CDyrCA,ACzrCCP,CDyrCC5gB,CAAC,CAAG,CAAC,ECzrCA,CAAC+kB,KAAK,EAAE5D,EAAE,CAACP,MAAM,CAACoE,MAAO,CAAC;IAC7Di3I,IDyrCC,IAAMvyI,CAAC,GAAK9E,GCzrCE,CDyrCE,ACzrCD7N,GDyrCI,ACzrCD,CAAE,CAAC,CDyrCC,CCzrCC,CAAC,CDyrCG,CAAE,ACzrCHoK,EAAE,CDyrCI,ACzrCHP,GDyrCM,GAAG,ACzrCH,CAACmE,KAAK,EAAE5D,EAAE,CAACP,MAAM,CAACoE,MAAO,CAAC;IAE9D80I,IDyrCCr4G,OCzrCU,CAACr/C,KAAK,CAAC,CAAC,CDyrCF,CAAC07C,OAAO,CAAE99C,CAAC,EAAE+e,GAAG,CAAClL,CAAC,EAAEkL,GAAG,CAACrf,CAAC,EAAEqf,GAAG,CAAC0K,CAAC,EAAEC,CAAE,CAAC;ICxrCtDqC,ED0rCA,SC1rCW,CAAC3pB,KAAK,CAAC,CAAC;IACnB4pB,ED2rCA,KAAM,IAAI/tB,EC3rCG,CAACmE,CD2rCH,GAAG,CAAC,AC3rCI,CAAC,CD2rCHsqB,AC3rCI,ID2rCF,GAAGyzB,MAAM,CAAC79C,MAAM,EAAErE,IAAC,GAAGyuB,IAAE,EAAE,EAAGzuB,IAAC,EAAG;ECzrCrD,MD2rCE,IAAMqkD,MAAK,GAAGnC,MAAM,CAAEliD,IAAC,CAAE;ECzrC3B,MD2rCE,CC3rCK,GD2rCCo/C,OAAK,GAAGiF,MAAK,CAACjF,KAAK;ICzrC1B21E,ID0rCC,GC1rCM,CD0rCA3mG,CC1rCE,KD0rCG,GAAGi2B,MAAK,CAACj2B,KAAK;MCzrCzB5J,ED2rCA,GC3rCK,ED2rCC,AC3rCCq3I,ID2rCGz/H,EAAC,GAAGgjB,EC3rCI,KD2rCC,EAAEgE,GAAE,GAAGhE,OAAK,GAAGhxB,MAAK,EAAEgO,EAAC,GAAGgnB,GAAE,EAAEhnB,EAAC,IAAI,CAAC,EAAG;MC1rC1D1O,ID4rCC82B,CC5rCI,EAAE12B,SD4rCM,CAAE5Z,CC5rCG,ID4rCE,CAACoJ,IAAI,CAAE8e,EAAC,GAAG,CAAE,CAAE,CAAC;MC3rCpC40B,ID4rCCxM,GC5rCM,EAAEz2B,OD4rCI,CAAE7Z,KAAK,CAACoJ,IAAI,CAAE8e,EAAC,GAAG,CAAE,CAAE,CAAC;IC3rCrC,CAAC,KD4rCCooB,YAAY,CAAEtwC,KAAK,CAACoJ,IAAI,CAAE8e,EAAC,GAAG,CAAE,CAAE,CAAC;IC1rCrCqK,ID4rCC,EC5rCK,EAAEA,MAAM;IACdG,ED6rCA,KC7rCO,EAAEA,OAAO;ID+rCjB,AC7rCCw4H,eAAe,EAAEA,eAAe;ED6rChC,EC5rCAI,WAAW,EAAEA,WAAW;ID4rCxBt5J,AC1rCAy5J,GD0rCA,OC1rCU,EAAEA,UAAU;ID0rCtB5/J,ACxrCAu3J,KDwrCA,EAED,IC1rCY,EAAEA,GD0rCd7yG,QC1rCyB,YD0rCLA,CAAA,EAAG;ICzrCtB48G,ED2rCA,IAAMntJ,KAAK,AC3rCA,EAAEmtJ,CD2rCC,IAAI,CAACntJ,KAAK,AC3rCA;IAExB+qJ,ED0rCA,IAAMrlI,MC1rCM,EAAEqlI,SD0rCS,GAAG,AC1rCA,ID0rCI,CAACplI,YAAY,CAAE,UAAW,CAAC;ICzrCzDqlI,ED2rCA,IAAKtlI,KC3rCM,EAAEslI,UD2rCS,CC3rCE,ID2rCGtrJ,SAAS,EAAG;ICzrCvCmuJ,ID2rCC,IAAIz+G,IC3rCO,EAAEy+G,SD2rCM,GAAG,AC3rCG,ID2rCC,CAACloI,YAAY,CAAE,QAAS,CAAC;IC1rCpD0nI,ID4rCC,IAAKj+G,QC5rCU,EAAEi+G,KD4rCG,KAAK3tJ,MC5rCQ,GD4rCC,EAAG;IC1rCtC2jJ,MD4rCEj0G,QC5rCY,EAAEi0G,KD4rCC,GAAG,IAAI74G,EC5rCM,aD4rCS,CAAE,IAAIxlC,YAAY,CAAE0gB,iBAAiB,CAACxL,KAAK,GAAG,CAAE,CAAC,EAAE,CAAE,CAAC;IC1rC7Fg0I,MD2rCE,IAAI,CAAC5/G,EC3rCM,EAAE4/G,QD2rCI,CAAE,IC3rCO,ID2rCC,EAAE9+G,eAAgB,CAAC;IC1rChD66G,ID4rCC,CAAC,MAAM,AC5rCG,EAAEA,WAAW;IACxBuE,MD6rCE,OC7rCW,EAAEA,aAAa;IAC5BC,oBAAoB,EAAEA,oBAAoB;IAC1CC,MD6rCE,KAAM,IAAI5iK,CAAC,GAAG,CAAC,AC7rCG,ED6rCDyuB,AC7rCGm0I,ED6rCD,GAAGt/G,eAAe,AC7rCG,CD6rCFl1B,KAAK,EAAEpuB,CAAC,GAAGyuB,EAAE,EAAEzuB,CAAC,EAAG,EAAG;IC5rC9D4+J,QD8rCGt7G,EC9rCO,EAAEs7G,UAAU,CD8rCJ,CAACj/G,MAAM,CAAE3/C,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;IC7rCvC0+J,MD+rCE,IC/rCQ,EAAEA,UAAU;IAEtByE,ID+rCC,YC/rCe,EAAEA,gBAAgB;IAClCI,IDgsCC,IAAM7+G,EAAE,GAAG,IAAI3vB,EChsCG,EAAEwuI,GDgsCE,CAAC,CAAC,cChsCe;IAExCN,MD8rC2Bt+G,EAAE,GAAG,CC9rCpB,EAAEs+G,CD8rCsBluI,OAAO,CAAC,CAAC,EC9rCnB;IAC1BmuI,MD6rC+Ct+G,EAAE,GAAG,CC7rCxC,EAAEs+G,CD6rC0CnuI,OAAO,CAAC,CAAC,EC7rCvC;IAC1B8tI,ID6rCC,IAAMh+G,EAAE,GAAG,AC7rCC,EAAEg+G,ED6rCC9tI,OAAO,CAAC,CAAC,EC7rCG;IAC5B+tI,MD4rC2Bh+G,EAAE,GAAG,EC5rCnB,ED4rCuB/vB,AC5rCrB+tI,OD4rC4B,CAAC,CAAC,IC5rCjB;IAC5BC,MD2rC+Ch+G,EAAE,GAAG,IAAIhwB,OAAO,CAAC,AC3rCzC,CD2rC0C,CC3rCxCguI,uBAAuB;IAChDC,ID2rCC,IAAMh+G,EAAE,GAAG,IAAIjwB,MC3rCO,CD2rCA,CAAC,AC3rCCiuI,CD2rCA,sBC3rCuB;IAEhDr1I,MDyrC2Bs3B,CCzrCpB,CDyrCsB,CCzrCpBt3B,EDyrCuB,IAAIoH,CCzrCpB,MDyrC2B,CAAC,CAAC;ICxrC7ClH,QAAQ,EAAEA,QAAQ;IAElB1pB,IDwrCC,CCxrCI,EAAEA;EAER,CAAC;AAEF,QDsrCG,IAAK+P,KAAK,EAAG;ACprChB,SAASyvJ,CDsrCL,KAAM,IAAI3jK,GCtrCQ2jK,CDsrCP,ACtrCSC,GDsrCN,ACtrCS,CDsrCR,CCtrCUt4G,CDsrCR78B,IAAE,GAAGva,ECtrCa,EAAEo+G,CDsrCV,CAAClkG,GCtrCc,EDsrCT,ACtrCW+0G,EDsrCTnjI,IAAC,GAAGyuB,CCtrCe,EAAEqrH,CDsrCf,EAAE95I,IAAC,IAAI,CAAC,ACtrCmB,EDsrChB,ACtrCkB2tI,KAAK,EAAE3qE,IAAI,EAAG;EAEvF,IAAM6gG,MDsrCF,IAAMlgH,EAAE,GAAGzvC,GCtrCS,EDsrCJ,CAACoJ,ACtrCMguC,IDsrCF,CAAEtrD,IAAC,CCtrCS,CAAC2oF,CDsrCP,CAAE,CAAC,ACtrCO,CAAE,sCAAuC,CAAC,GAAGr9B,UAAU,CAACxxC,GAAG,CAAE,sCAAuC,CAAC,GAAG,IAAI;EACrJ,IAAMgqJ,MDsrCF,IAAMlgH,EAAE,GAAG1vC,KAAK,CAACoJ,IAAI,CAAEtd,GCtrCQ,CDsrCP,ECtrCU,CDsrCP,CAAE,CAAC,ICtrCW+jK,SAAS,KAAK,WAAW,GAAG,KAAK,GAAG,gBAAgB,CAACp9I,IAAI,CAAEo9I,SAAS,CAACC,SAAU,CAAC;EAE7H,IAAMC,MDqrCF,IAAMpgH,EAAE,GAAG3vC,CCrrCO,GAAG,CDqrCL,CAACoJ,ECrrCQ1D,EDqrCJ,CAAE5Z,IAAC,GAAG,CAAE,CAAC,MCrrCE,CAAC,CAAC;EACtC,IAAMkkK,MDsrCFx/G,EAAE,CAACtnC,KCtrCa,GAAG,IAAI43G,ODsrCD,ACtrCQ,CDsrCNp7F,ACtrCO,CAAC,gBDsrCS,EAAE+pB,EAAG,CAAC;ECrrCnD,IAAIp9B,MDsrCAo+B,CCtrCO,CDsrCL,CAACvnC,mBAAmB,CAAEwc,iBAAiB,EAAEgqB,EAAG,CAAC;ECprCnD,IAAMugH,MDqrCFv/G,EAAE,ACrrCQ,CDqrCPxnC,ECrrCU,IAAI43G,OAAO,CAAC,CAAC,CAAC,CAAC,EDqrCN,CAAEp7F,iBAAiB,EAAEiqB,EAAG,CAAC;YAE/CmB,EAAE,CAACnqC,UAAU,CAAE+pC,EAAE,EAAED,EAAG,CAAC;ECrrC3B,UDsrCIM,EAAE,CAACpqC,UAAU,CAAE6pC,EAAE,EAAEC,EAAG,CAAC;ECrrC3B,UDsrCIK,EAAE,CAACppC,KAAK,CAAEqpC,EAAG,CAAC;ECrrClB,UDurCIJ,EAAE,CAACznC,mBAAmB,CAAEkmC,eAAe,EAAEK,EAAG,CAAC;YAC7CmB,EAAE,CAAC1nC,mBAAmB,CAAEkmC,eAAe,EAAEM,EAAG,CAAC;ECtrCjD,IAAIwgH,MDurCAr/G,EAAE,CAAC3nC,SCvrCe,GAAG,KAAK,EDurCJ,CAAEkmC,eAAe,EAAEO,EAAG,CAAC;ECrrCjD,IAAI,MDurCAgB,EAAE,CAACtqC,GAAG,CAAEyqC,EAAG,CAAC;ICrrCfo/G,QDsrCGt/G,EAAE,CAACvqC,GAAG,CAAEyqC,EAAG,CAAC,ACtrCG,GAAG,OAAOq/G,eAAe,KAAK;IAC/C,QDsrCEt/G,EAAE,CAACxqC,GAAG,CAAEyqC,EAAG,CAAC;ICtrCd,GACK,IAAIq/G,CDurCP/gH,cCvrCsB,CDurCP,ACvrCS,CDurCR3D,ACvrCS,EAAE,CAAE,CAAC,CAAC14B,CDurCT,CAAE08B,EAAE,EAAEkB,EAAE,CAACjvC,CAAC,ACvrCS,CAAE,CDurCTivC,EAAE,CAACpjD,ACvrCW,CDurCV,ACvrCW,EDurCTojD,EAAE,CAACr5B,ACvrCa,CDurCX,CAAC,ECvrCc;EAEhE,CAAC,CAAC,OAAQ6jC,CDsrCN/L,ECtrCS,EAAG,WDsrCG,CAAC3D,MAAM,CAAEiE,EAAE,EAAEkB,EAAE,CAAClvC,CAAC,EAAEkvC,EAAE,CAACrjD,CAAC,EAAEqjD,EAAE,CAACt5B,CAAE,CAAC;YAC9C83B,eAAe,CAAC3D,MAAM,CAAEkE,EAAE,EAAEkB,EAAE,CAACnvC,CAAC,EAAEmvC,EAAE,CAACtjD,CAAC,EAAEsjD,EAAE,CAACv5B,CAAE,CAAC;ICrrCjD,MDurCE;ECvrCF,MDyrCC,CAAC,MAAM;ECrrCT,QDurCG,CCvrCM84I,YAAYA,CAAEx9I,KAAK,EAAEC,MAAM,EAAG;IAEtC;UDurCE,KAAM,IAAI/mB,IAAC,GAAG,CAAC,EAAEyuB,IAAE,GAAGmL,iBAAiB,CAACxL,KAAK,EAAEpuB,IAAC,GAAGyuB,IAAE,EAAEzuB,IAAC,IAAI,CAAC,EAAG;ICrrClE,OAAOokK,CDurCJ1/G,EAAE,CAACtnC,cCvrCmB,KDurCA,CAAEwc,iBAAiB,EAAE55B,IAAC,GAAG,CAAE,CAAC;ICtrCpD,QDurCE2kD,EAAE,CAACvnC,mBAAmB,CAAEwc,iBAAiB,EAAE55B,IAAC,GAAG,CAAE,CAAC;ICtrCpD,IAAIqkK,IDurCFz/G,EAAE,CAACxnC,QCvrCc,CAAE0J,KAAK,EAAEC,GDurCJ,CAAE6S,ECvrCS,CAAC,GAAG,IAAApX,ODurCI,EAAExiB,IAAC,GAAG,CAAE,CAAC,QCvrCE,EAAE,QAAS,CAAC;EAEpE,UDurCIglD,EAAE,CAACnqC,UAAU,CAAE+pC,EAAE,EAAED,EAAG,CAAC;ECrrC3B,SAAS4/G,CDsrCLt/G,EAAE,CAACpqC,OCtrCa0pJ,CAAE79I,EDsrCL,CAAEg+B,EAAE,ACtrCM,EDsrCJC,ACtrCM6/G,EDsrCH,CAAC,WCtrCgB,EAAEC,OAAO,EAAG;IAEtD,IAAI/iJ,IDqrCDsjC,CCrrCM,CDqrCJ,CAACppC,CCrrCM,CAAC,GDqrCF,CAAEqpC,EAAG,CAAC;ICnrCjB,IAAMi5G,IDqrCH56G,MCrrCa,GAAGohH,MDqrCD,CAAC/kH,MAAM,ACrrCO,CDqrCL3/C,ACrrCO0mB,IDqrCN,CCrrCY,CAAC,CDqrCV,CAAC,EAAEs+B,EAAE,CAACpvC,CAAC,EAAEovC,EAAE,CAACvjD,CAAC,EAAEujD,EAAE,CAACx5B,CAAE,CAAC;YACjD83B,eAAe,CAAC3D,MAAM,CAAE3/C,IAAC,GAAG,CAAC,EAAEglD,EAAE,CAACpvC,CAAC,EAAEovC,EAAE,CAACvjD,CAAC,EAAEujD,EAAE,CAACx5B,CAAE,CAAC;ICprCpD,QDqrCG83B,eAAe,CAAC3D,MAAM,CAAE3/C,IAAC,GAAG,CAAC,EAAEglD,EAAE,CAACpvC,CAAC,EAAEovC,EAAE,CAACvjD,CAAC,EAAEujD,EAAE,CAACx5B,CAAE,CAAC;UAElD;ICrrCF,IDurCC,ACvrCI0yI,UAAU,CAACp3I,KAAK,GAAG29I,OAAO,IAAIvG,UAAU,CAACn3I,MAAM,GAAG09I,OAAO,EAAG;MAEhE/iJ,EDurCA,GCvrCK,CDurCD,CAACwjC,CCvrCGu/G,OAAO,GAAG9vJ,IAAI,CDurCD,ACvrCEa,CDurCD,CAAC,CCvrCG,CAAE0oJ,UAAU,CAACp3I,KAAK,EAAEo3I,UAAU,CAACn3I,MAAO,CAAC;IAElE,IDurCCu8B,eAAe,CAACt4B,WAAW,GAAG,IAAI;MAEnC;IAED,ACzrCC;EDyrCA;IAAA9kB,ACvrCA,GDurCA,CCvrCKwb,KAAK,GAAG,CAAC,EAAG;IDurCjB3hB,ECrrCC,GDqrCD,EAED,SAAAmlD,gBAAgBA,CAAA,EAAG;MAElB,IAAMC,OAAO,GAAG,IAAI,CAACpD,UAAU,CAAC7qB,MAAM;MAEtC,ACzrCC,IAAO,CDyrCF,IAAIl3B,CAAC,CCzrCIunB,EDyrCD,CAAC,EAAEkH,EAAE,GAAG02B,MCzrCS,CDyrCF,CAAC/2B,GCzrCM,EDyrCD,EAAEpuB,CAAC,GAAGyuB,EAAE,CCzrCI,CDyrCFzuB,CAAC,EAAG,ACzrCE0mB,EDyrCC,GCzrCI,YAAYa,gBAAgB,IAChF,OAAOV,iBAAiB,KAAK,WAAW,IAAIH,KAAK,YAAYG,iBAAmB,IAChF,OAAOW,WAAW,KAAK,WAAW,IAAId,KAAK,YAAYc,WAAa,IACpE,OAAOm9I,UAAU,KAAK,WAAW,IAAIj+I,KAAK,YAAYi+I,UAAY,EAAG;QDwrCxEljH,ACtrCC,IAAM36B,KDsrCE,ACtrCG,CDsrCF1J,ECtrCKzI,IAAI,CAACoC,KAAK,CAAE2K,KAAK,CDsrCH,CAAEyjC,CCtrCI+4G,MDsrCG,EAAEl+J,CAAE,CAAC,ACtrCE,CAAC8mB,KAAM,CAAC;QDwrCrD26B,ACvrCC,IAAM16B,KDurCE,CAACtN,ACvrCG,GAAG9E,IAAI,CAACoC,CDurCF,CAAC,CAAC,ECvrCK,CAAE2K,KAAK,GAAGw8I,UAAU,CAACn3I,MAAO,CAAC;QDyrCvDo+B,ACvrCC,IAAK5+B,GDurCC,CAACo5B,GCvrCK,GDurCC,CAAE3/C,CAAC,ACvrCC4T,EDurCC6tC,OCvrCQ,EDurCC,ACvrCEl7B,CDurCD3Q,CAAC,EAAE6rC,GCvrCK,GAAG6iH,GDurCC,CAAC7iK,CAAC,EAAEggD,KCvrCO,CAAE36B,GDurCA,CAAC0E,CAAE,ACvrCE,CDurCD,CCvrCGzE,MAAO,CAAC;MDyrCtE;IAED,ICzrCG;EDyrCF;IAAA7gB,GAAA,CCvrCE,IAAMyc,MAAM,GAAG6hJ,cAAc,GAAGF,YAAY,CAAEx9I,KAAK,EAAEC,MAAO,CAAC,GAAGR,OAAO;IDurCzExmB,ICrrCE4iB,CDqrCF,EAED,GCvrCS,CAACmE,KDurCVs+B,ACvrCe,GAAGt+B,KAAK,IDurCXs+B,CAAA,EAAG;MAEd,ECxrCEziC,MAAM,CDwrCC0iC,ACxrCAt+B,MAAM,GAAGA,MAAM,ODwrCOs+B,CAAEhoC,SAAS,EAAEioC,OAAO,EAAG;QAErD,ACxrCC,IDwrCK/wC,ACxrCCyS,KDwrCI,ECxrCG,CDwrCA3J,ECxrCGsF,MAAM,CDwrCA,ACxrCCsE,CDwrCA1S,KAAK,ICxrCK,CAAE,IAAK,CAAC;QDyrC1C,ACxrCCyS,IDwrCK23B,GCxrCE,CAACv3B,IDwrCK,GAAG/J,ECxrCC,CAAEqJ,KAAK,CDwrCC,CAACi4B,ACxrCA,CAAC,EAAE,CAAC,EAAE73B,EDwrCE,GCxrCG,EAAEC,MAAO,CAAC;QDyrChD,ACvrCChO,IDurCK6lC,GCvrCE,CAAC5lC,IAAI,CAAE,CDurCC,GAAGqE,SAAS,CAACuhC,UAAU,8BCvrC8B,GAAGs/G,UAAU,CAACp3I,KAAK,GAAG,GAAG,GAAGo3I,UAAU,CAACn3I,MAAM,GAAG,QAAQ,GAAGD,KAAK,GAAG,GAAG,GAAGC,MAAM,GAAG,IAAK,CAAC;QDyrC7J,ACvrCC,IDurCKw+B,GCvrCE5iC,GDurCI,GAAG,ACvrCD,IDurCKpO,KAAK,CAAC/P,WAAW,CAAE8gD,OAAO,CAACjhD,MAAM,GAAGs6C,QAAS,CAAC;MCrrCjE,CAAC,CDurCD,IAAIzqC,CCvrCG,IDurCE,GAAG,CAAC;QCrrCZ,EDqrCcsrC,ECrrCT,IDqrCe,ECrrCT,CDqrCY,CAAC,ECrrCT94B,KAAK,EAAG;QDurCxB,ECrrCE3N,GDqrCI,IAAI/Y,ACrrCD,CDqrCE,ACrrCDgZ,GDqrCI,CAAC,ACrrCD,CAAE,CDqrCC1X,CAAC,GAAGgkD,OAAO,CAACjhD,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG,uBCrrCqB,GAAGk+J,UAAU,CAACp3I,KAAK,GAAG,GAAG,GAAGo3I,UAAU,CAACn3I,MAAM,GAAG,IAAK,CAAC;QAE7H,EDqrCA,IAAK1J,SAAS,CAACmoC,4BAA4B,EAAG;QCnrC9C,IDqrCCtxC,GCrrCMwS,EDqrCD,GAAG4+B,ACrrCG,ODqrCI,CAAEtlD,CAAC,CAAE,GAAGqd,SAAS,CAACsK,IAAI,CAAC89B,MAAM,GAAGpoC,SAAS,CAACH,MAAM;MCnrCjE,IDqrCC,CAAC,MAAM;ICnrCT,QDqrCGhJ,KAAK,GAAGoxC,OAAO,CAAEtlD,CAAC,CAAE,GAAG2+C,QAAQ;ICnrClC,MDqrCE,CCrrCKj4B,KAAK;EAEb,QDqrCG,KAAM,IAAI0V,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuiB,QAAQ,EAAEviB,CAAC,EAAG,EAAG;ECnrCzC,SAASwoI,CDqrCLr/G,MAAM,CAAE/F,MAAM,EAAG,CAAE,GAAGjrC,KAAK,CAAEL,CCrrCG0wJ,CAAEv2I,GDqrCA,EAAG,CAAE,CCrrCE,EAAG;IAE/C,MDqrCE,CCrrCKA,OAAO,CAACnE,eAAe;EAE/B,MDqrCE;ECnrCF,MDqrCE,GCrrCO26I,IDqrCA,IAAInmH,MCrrCUmmH,CAAEvwJ,MAAM,EDqrCH,ACrrCM,CDqrCJixC,MAAM,EAAE5G,QAAQ,EAAEC,UAAW,CAAC;ICnrC3DglH,EDqrCA,CCrrCG,CAACiB,cAAc,CAAEvwJ,MAAO,CAAC;EAE7B;EAEA,IDmrCC,KCnrCQwwJ,aAAaA,CAAEz2I,OAAO,EAAG;IAEjC,IAAKA,OAAO,CAACqiC,uBAAuB,EAAG,OAAOkzG,GAAG,CAAC7E,gBAAgB;IAClE,EDkrCA,EClrCK1wI,EDkrCA,IAAI,CAACna,AClrCE,CAACkc,IDkrCE,KAAK,IAAI,EAAG,MClrCO,EAAG,OAAOwzI,GAAG,CAACpF,UAAU;IAC1D,IDmrCCzlJ,ACnrCIsV,ODmrCG,ACnrCI,CDmrCHrV,ACnrCI4W,IDmrCA,CAAE,mBCnrCsB,IAAIvB,OAAO,CAACk6C,wBAAwB,EAAG,OAAOq7F,GAAG,CAACnF,SDmrCM,CAAC,MCnrCS;IACvG,IDmrCC,GCnrCMmF,GAAG,CDmrCF,ACnrCG9E,IDmrCC,MCnrCS;EAEtB,IDmrCC;ECjrCD,IDmrCC,IAAMp5G,CCnrCEq/G,QDmrCO,GAAG,IAAIrjH,ECnrCGqjH,CAAEC,WDmrCS,CAAC,CAAC,KCnrCO,EAAEC,QAAQ,EAAEC,MAAM,EAAE9/I,UAAU,EAAgC;IAAA,EDqrC3G,ECrrC6E+/I,EDqrCvE7/G,OAAO,GAAG,IAAI,CAACpxC,ECrrC2E,GDqrCtE,ACrrCsEsC,CDqrCrEjC,KAAK,GCrrCgE,CAAAlQ,MAAA,QAAAmS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,KAAK;IAExG,EDorCA,ECprCKwuJ,EDorCCjjH,UAAU,GAAG,GCprCI,CDorCA,CAACA,GCprCI,IAAI,EAAG,CDorCD;MClrCjC,IAAK6hH,GAAG,CAAEoB,kBAAkB,CAAE,KAAKpxJ,SAAS,EAAG,OAAOgwJ,GAAG,CAAEoB,kBAAkB,CAAE;MDorChF,AClrCCjsJ,OAAO,CAACC,IAAI,CAAE,2EAA2E,GAAGgsJ,kBAAkB,GAAG,IAAK,CAAC;IAExH;IAEA,EDgrCA,EChrCIj7I,GDgrCE,IAAMtlB,IAAI,GChrCE,CDgrCEs9C,EChrCCkjH,QDgrCS,AChrCD,EDgrCI;IC9qCjC,IDgrCC,AChrCIA,IDgrCE5nJ,IChrCM,KDgrCG,AChrCEumJ,GDgrCC7hH,AChrCE,CAACqjH,GAAG,EAAG,IDgrCC,CAAE3gK,IAAI,CAAE;MC9qCpC,EDgrCA,EChrCKygK,EDgrCCv/G,IChrCK,KAAKi+G,GDgrCE,AChrCC,CAACvuC,EDgrCChwE,GChrCI,EAAGt7B,cAAc,GDgrCC,AChrCE65I,CDgrCAvmJ,EChrCG,CAACgoJ,IAAI,EDgrCC,EAAE//G,OAAQ,CAAC;MC/qCjE,EDirCAI,ECjrCKw/G,MAAM,CDirCF,CAAC1iH,GCjrCMohH,GAAG,CAACtuC,KDirCE,CAAE7wH,IAAI,ACjrCE,EDirCAkhD,ACjrCG57B,YDirCU,CAAC,CCjrCG,GAAG65I,GAAG,CAAC0B,IAAI;MDmrC3D,AClrCC,IAAKJ,MAAM,KAAKtB,GAAG,CAAChuC,aAAa,EAAG7rG,cAAc,GAAG65I,GAAG,CAAC2B,EAAE;IAE5D;IAEA,EDgrCA,EChrCKN,QAAQ,KAAKrB,GAAG,CAAC4B,WAAW,EAAG;MAEnC,IAAKN,MAAM,KAAKtB,GAAG,CAAChuC,aAAa,EAAG7rG,cAAc,GAAG65I,GAAG,CAAC6B,IAAI;MDgrC9D,AC/qCC,ID+qCKzjH,AC/qCAkjH,MAAM,KAAKtB,GAAG,CD+qCC,AC/qCAruC,GD+qCG,IAAI,CAACvzE,MC/qCM,EAAGj4B,OD+qCM,OC/qCQ,GAAG65I,GAAG,CAAC8B,KAAK;MDirChE,AChrCC,IAAKR,CDgrCA,IAAMzgK,CChrCA,IDgrCI,CChrCCm/J,GDgrCG5hH,AChrCA,CAACyzE,YAAY,EDgrCE,AChrCC1rG,EDgrCE,YChrCY,GAAG65I,GAAG,CAAC+B,KAAK;MAC7D,EDirCA,ECjrCKT,EDirCCt/G,ICjrCK,KAAKg+G,CDirCA,ECjrCG,CDirCA,ACjrCCjuC,EDirCC,ECjrCG,EAAG5rG,cAAc,GAAG65I,GAAG,CAACgC,GAAG;MACnD,EDirCA,ECjrCKV,EDirCC/hH,ICjrCK,KAAKygH,GAAG,CAACpuC,CDirCA,GAAGxzE,CCjrCE,EAAGj4B,YDirCU,CAAEtlB,CCjrCE,GAAGm/J,CDirCD,CAAE,CAAC,ACjrCC,CDirCA,ACjrCCiC,IAAI;MACrD,IAAKX,MAAM,KAAKtB,GAAG,CAACluC,GAAG,EAAG3rG,cAAc,GAAG65I,GAAG,CAACkC,IAAI;IAEpD,IDgrCC,KAAM,IAAI9lK,CAAC,GAAG,CAAC,EAAEyuB,EAAE,GAAG00B,cAAc,CAAC9+C,MAAM,EAAErE,CAAC,GAAGyuB,EAAE,EAAEzuB,CAAC,EAAG,EAAG;IC9qC7D,IAAKilK,EDgrCH,IAAM5nJ,EChrCK,KAAKumJ,GDgrCD,AChrCI,CAACmC,EDgrCF5iH,AChrCI,EAAG,YDgrCO,CAAEnjD,CAAC,CAAE;MC9qCtC,IDgrCC,AChrCIklK,IDgrCEv/G,EChrCI,KAAKi+G,GAAG,CAACvuC,EDgrCD,GAAGhwE,AChrCG,EAAGt7B,cAAc,GAAG65I,GDgrCD,AChrCI,CDgrCFvmJ,AChrCG2oJ,KAAK,KDgrCC,EAAE1gH,OAAQ,CAAC;MC/qClE,IDirCCM,ACjrCIs/G,MAAM,IDirCA,CAAClhK,ACjrCI4/J,GAAG,CDirCH,ACjrCItuC,CDirCF3vE,SCjrCY,EAAG57B,EDirCF,CAAC,WCjrCe,GAAG65I,GAAG,CAACqC,KAAK;MAC3D,EDkrCA,EClrCKf,MAAM,KAAKtB,GAAG,CAAChuC,aAAa,EAAG7rG,cAAc,GAAG65I,GAAG,CAACsC,GAAG;IAE7D,IDkrCCxgH,SAAS,CAAC1D,eAAe,CAAEv9C,KAAI,CAAE,GAAGmhD,UAAU;IChrC/C,EDkrCA,EClrCKq/G,QAAQ,KAAKrB,GAAG,CAACuC,UAAU,EAAG;MDorCnCzgH,AClrCC,IAAKw/G,KDkrCG,CAACjjH,AClrCE,KAAK2hH,GAAG,CAAChuC,WDkrCS,EClrCI,CDkrCD,CClrCI7rG,GDkrCA,CAACk4B,UClrCa,GAAG2hH,GAAG,CAACwC,GDkrCA,EClrCK;MAC9D,IAAKlB,MAAM,KAAKtB,GAAG,CAACruC,cAAc,EAAGxrG,cAAc,GAAG65I,GAAG,CAACyC,MAAM;MDmrCjE,AClrCC,IAAKnB,MAAM,KAAKtB,GAAG,CAACnuC,YAAY,EAAG1rG,cAAc,GAAG65I,GAAG,CAAC0C,MAAM;MAC9D,IAAKpB,MAAM,KAAKtB,GAAG,CAACjuC,IAAI,EAAG5rG,cAAc,GAAG65I,GAAG,CAAC2C,IAAI;MDmrCrD,AClrCC,IDkrCKrkH,AClrCAgjH,MDkrCM,AClrCA,GDkrCG,EClrCEtB,EDkrCE,CAAC1hH,AClrCA,CAACszE,KDkrCK,AClrCA,EAAGzrG,cAAc,GAAG65I,GAAG,CAAC4C,KAAK;MDorCvD,ACnrCC,IAAKtB,CDmrCA,IAAIllK,CCnrCE,GDmrCD,ECnrCM4jK,CDmrCH,CAAC,CCnrCK,CDmrCHtiK,ACnrCIo0H,CDmrCH,ECnrCM,CDmrCHxzE,CCnrCMn4B,KDmrCA,CAAC1lB,MAAM,EAAErE,ACnrCK,GAAG4jK,CDmrCP,ECnrCU,CDmrCPtiK,ACnrCQmlK,CDmrCP,EAAEzmK,ECnrCU,EDmrCT,EAAG,EAAG;ICjrClD,IDmrCC,IAAMqkD,KAAK,GAAGnC,MAAM,CAAEliD,IAAC,CAAE;ICjrC1B,IDkrCC0lD,AClrCIu/G,QAAQ,CDkrCH,CAACtiH,GClrCOihH,GAAG,CAAC8C,CDkrCH,CAAEriH,KAAK,CAACjF,GClrCM,EDkrCD,AClrCI,EDkrCFiF,KAAK,CAACj2B,KAAK,EAAEi2B,KAAK,CAACzB,aAAc,CAAC;MAEpE,AClrCC,IAAKsiH,MAAM,KAAKtB,GAAG,CAAChuC,aAAa,EAAG7rG,cAAc,GAAG65I,GAAG,CAAC+C,MAAM;MDorChE,ACnrCC,IAAKzB,GDmrCCx/G,GCnrCK,KAAKk+G,CDmrCD,ECnrCI,CAACruC,cAAc,EAAGxrG,cAAc,GAAG65I,GAAG,CAACgD,OAAO;IDqrCnE,ECprCE,IAAK1B,MAAM,KAAKtB,GAAG,CAACnuC,YAAY,EAAG1rG,cAAc,GAAG65I,GAAG,CAACiD,OAAO;EDorChE,ICnrCC,IAAK3B,MAAM,KAAKtB,GAAG,CAACjuC,IAAI,EAAG5rG,cAAc,GAAG65I,GAAG,CAACkD,KAAK;IDmrCtD5gK,EClrCC,CDkrCD,GClrCMg/J,MAAM,KAAKtB,GAAG,CAACpuC,KAAK,EAAGzrG,cAAc,GAAG65I,GAAG,CAACmD,MAAM;IDkrCxDhnK,ECjrCC,GDirCD,CCjrCMmlK,CDmrCP,KCnrCa,IDmrCbj9I,CCnrCkB27I,GAAG,CAACluC,CDmrChBztG,CAAA,CCnrCmB,CDmrChB,CCnrCmB8B,cAAc,GAAG65I,GAAG,CAACoD,MAAM;IAEtD,EDmrCA,IAAMr/I,IAAI,GAAG;ICjrCb,IDkrCCuD,AClrCI+5I,QDkrCI,AClrCI,EDkrCF,GClrCOrB,GAAG,CAACqD,YAAY,EAAG;MAEpC,IDirCCj/I,ACjrCIk9I,MAAM,CDirCH,EAAE,ECjrCMtB,CDirCH,ECjrCM,CAAChuC,aAAa,EAAG7rG,cAAc,GAAG65I,GAAG,CAACsD,OAAO;MAChE,IDirCChmK,ACjrCIgkK,IDirCA,EAAE,ACjrCI,KAAKtB,GAAG,CAACruC,ODirCG,OCjrCW,EAAGxrG,cAAc,GAAG65I,GAAG,CAACuD,QAAQ;MAClE,IDirCCh8I,ACjrCI+5I,MAAM,GDirCD,EAAE,ACjrCItB,GAAG,CAACnuC,YAAY,EAAG1rG,cAAc,GAAG65I,GAAG,CAACwD,QAAQ;MAChE,EDirCA,ECjrCKlC,MAAM,KAAKtB,GAAG,CAACjuC,IAAI,EAAG5rG,cAAc,GAAG65I,GAAG,CAACyD,MAAM;MDkrCvD,ACjrCC,CDirCA,GCjrCKnC,MAAM,KAAKtB,GAAG,CAACpuC,KAAK,EAAGzrG,cAAc,GAAG65I,GAAG,CAAC0D,OAAO;MACxD,IAAKpC,MAAM,KAAKtB,GAAG,CAACluC,GAAG,EAAG3rG,cAAc,GAAG65I,GAAG,CAAC2D,OAAO;IAEvD,EDgrCA;IC9qCA,IAAKtC,QAAQ,KAAKrB,GAAG,CAAC4D,GAAG,EAAG;MDgrC5B7/I,AC9qCC,ID8qCG,AC9qCEu9I,CD8qCD9vJ,IAAI,CC9qCG,ED8qCA,GC9qCKwuJ,CD8qCD,CAACxuJ,CC9qCG,CAACqyJ,ED8qCA,sBC9qCwB,EAAG19I,cAAc,GAAG65I,GAAG,CAAC8D,OAAO;IAE5E,ED6qCA//I,IAAI,CAACzmB,IAAI,GAAG,IAAI,CAACA,IAAI;IC3qCrB,ED4qCA,EC5qCK+jK,ED4qCA,IAAI,CAACxgK,CC5qCG,GD4qCC,EC5qCIm/J,GD4qCC,AC5qCE,CAACjF,CD4qCD,EAAGh3I,CC5qCE,EAAG,CD4qCD,CAACljB,IAAI,GAAG,IAAI,CAACA,IAAI;MAC7C,AC3qCC,ID2qCIhF,AC3qCEklB,MD2qCI,CAAC3f,CC3qCG,GD2qCC,AC3qCEmgK,CD2qCA,IAAI,CAAC76I,QAAS,CAAC,CAACjmB,GC3qCG,GD2qCG,AC3qCA4M,GD2qCG,CAAC,EAAG0W,IAAI,CAAC2C,QAAQ,GAAG,GC3qCT,CD2qCa,CAACA,CC3qCXnG,OD2qCmB,mBC3qCJ,CAACkB,WAAW,CAAED,UAAW,CAAC;MD6qClG,AC3qCC,ID2qCI,AC3qCC8/I,ID2qCG,CAAC31H,CC3qCE,KAAKq0H,GAAG,CD2qCA,AC3qCCvuC,KD2qCIzhH,AC3qCC,EAAGmW,OD2qCK,EAAG,KC3qCM,GAAG65I,GAAG,CAAC+D,OAAO;MACxD,ED4qCA,EC5qCKzC,ED4qCC31H,IC5qCK,KAAKq0H,CD4qCA,EC5qCG,CD4qCA,AC5qCCtuC,ID4qCG,CAAC/lF,KC5qCM,EAAGxlB,GD4qCC,WC5qCa,GAAG65I,GAAG,CAACgE,OAAO;MAC7D,ED6qCA,EC7qCK1C,GD6qCC,GC7qCK,CD6qCCh/J,GAAG,CC7qCC09J,GD6qCGr0H,AC7qCA,CAACqmF,SD6qCS,EAAG,EC7qCC,EAAG7rG,cAAc,GAAKpF,QAAQ,KAAKzT,uBAAY,GAAK0yJ,GAAG,CAACiE,YAAY,GAAGjE,GAAG,CAACkE,KAAK;MACjH,ID8qCC,AC9qCI5C,ID8qCC31H,EC9qCK,KAAKq0H,GD8qCA,AC9qCG,CD8qCD19J,AC9qCE6hK,GD8qCC,CAAE,KAAKn0J,SAAS,EAAG+T,EC9qCE,ED8qCE,AC9qCCoC,CD8qCC7jB,GAAG,CAAE,GAAGqpC,MC9qCK,GAAGq0H,CD8qCE,CAAE19J,CC9qCD,CAAC8hK,CD8qCG,CAAE,GC9qCA;MACvE,ED+qCA,EC/qCK9C,MAAM,KAAKtB,GAAG,CAACqE,sBAAsB,EAAGl+I,cAAc,GAAG65I,GAAG,CAACsE,OAAO;IAE1E,ID+qCC,OAAOvgJ,IAAI;IC7qCZ,ED+qCA,EC/qCKoC,cAAc,KAAK65I,GAAG,CAAC0B,IAAI,IAAIv7I,cAAc,KAAK65I,GAAG,CAACyB,IAAI,IAC9Dt7I,cAAc,KAAK65I,GAAG,CAACqC,KAAK,IAAIl8I,cAAc,KAAK65I,GAAG,CAACoC,KAAK,IAC5Dj8I,cAAc,KAAK65I,GAAG,CAACgE,OAAO,IAAI79I,cAAc,KAAK65I,GAAG,CAAC+D,OAAO,EAAG;MAEnEr8G,UAAU,CAACxxC,GAAG,CAAE,wBAAyB,CAAC;IAE3C,ED2qCA;ICzqCA,OAAOiQ,cAAc;EAEtB,IDyqCCpC,IAAI,CAACA,IAAI,GAAG;ECvqCb,MDuqCeo6B,GCvqCNomH,ODuqCgB,EAAE,CAAC,YCvqCGA,CAAEC,UAAU,EAAEC,SAAS,EAAG;IAExD,EDqqC6B,CAAC,CCrqC1BC,gBAAgB;IACpB,EDsqCA,ECtqCKF,EDsqCCl0J,KAAK,GAAG,ACtqCC,EAAG,EDsqCA,CAACA,KAAK;MAExB,ACtqCC,IDsqCIA,ACtqCCm0J,KDsqCI,ICtqCK,CDsqCA,IAAI,ACtqCC,EDsqCE,ECtqCE,IAAIA,SAAS,KAAK/7J,0BAAe,IAAI+7J,SAAS,KAAK17J,6BAAkB,EAAG;QDwqC/Fgb,ACtqCC2gJ,IDsqCG,CAAC3gJ,IAAI,CAACzT,KAAK,CCtqCE,EDsqCC,CCtqCE0vJ,GAAG,CAAC2E,gBAAgB;MAExC,CAAC,GDqqCArnK,GCrqCM,CDqqCF,EAAEgT,CCrqCKm0J,IDqqCA,CAAC9zJ,ICrqCQ,CDqqCH,CAAC/P,GCrqCO+H,QDqqCI,CAAC9H,IAAI,OCrqCA,EAAG;QAErC6jK,EDoqCA/zJ,KAAK,EAAEgU,KAAK,CAAC7oB,CCpqCG,GAAGkkK,GAAG,CAAC4E,CDoqCD,CAACnjK,KAAK,CAACjE,IAAI,CAAE8S,ICpqCK,CDoqCA,CAACK,KAAM;MClqChD,CAAC,CDmqCD,CAAC,ICnqCM,IAAK8zJ,SAAS,KAAKj8J,4BAAiB,EAAG;MDqqC/C,ECnqCEk8J,gBAAgB,GAAG1E,GAAG,CAAC2E,gBAAgB;MDqqCzC,ECpqCExvJ,EDoqCIgpC,KCpqCG,CAAC/oC,IDoqCM,ACpqCF,CAAE,EDoqCG,IAAI,CAAC+oC,UAAU,8ECpqC8E,CAAC;MDsqCjH,ACpqCC,KDoqCK,IAAM77C,IAAG,IAAI67C,UAAU,EAAG;IClqChC,CAAC,GDoqCA,GCpqCM,CDoqCA1kC,SAAS,GAAG0kC,UAAU,CAAE77C,IAAG,CAAE;MClqCnC,EDoqCAyhB,ECpqCK0gJ,EDoqCD,CAAC1gJ,IAAI,CAACo6B,CCpqCI,KAAK,IDoqCC,ACpqCG,CDoqCD77C,GCpqCKmiK,CDoqCF,CAAE,GAAGhrJ,ICpqCM,KDoqCG,ACpqCE/Q,CDoqCD2b,MAAM,CAAEN,IAAI,CAACA,IAAK,CAAC,QCpqCH,IAAI0gJ,SAAS,KAAK17J,6BAAkB,EAAG;MDsqChG,ECpqCE27J,gBAAgB,GAAG1E,GAAG,CAAC6E,iBAAiB;MDsqC1C,ACpqCC,CAAC,GDoqCIzmH,GCpqCE,IAAKqmH,QDoqCQ,CCpqCC,EDoqCE,CAAC,CAAC,CCpqCC97J,oBAAS,EAAG;MDqqCvC,ECnqCE+7J,EDmqCEziH,cCnqCc,GAAG+9G,CDmqCC,ECnqCE,CDmqCC,ACnqCA8E,KDmqCK,aCnqCa;MDqqC3C,ACnqCC,CAAC,IDmqCI,ECnqCE,EDmqCIxiK,ECnqCCmiK,GDmqCE,IAAI,ECnqCG,EDmqCC,CAACrmH,ECnqCG51C,aDmqCY,EAAG,aCnqCE,EAAG;QDqqC9C,ACnqCCk8J,IDmqCKxiH,YCnqCW,EDmqCG,CCnqCA89G,EDmqCG,CCnqCA,CAAC+E,EDmqCG,CAAC3mH,cCnqCa,CDmqCE,CAAE97C,KAAG,CAAE;MCjqClD,EDmqCA,IAAMqO,KAAK,GAAG,EAAE;ICjqCjB,IDmqCC,KAAM,IAAIvU,CAAC,GAAG,CAAC,EAAEyuB,EAAE,GAAGq3B,cAAc,CAACzhD,MAAM,EAAErE,CAAC,GAAGyuB,EAAE,EAAEzuB,CAAC,EAAG,EAAG;ICjqC7D,MDmqCE,CCnqCKsoK,GDmqCCjrJ,WAAS,ECnqCM,CDmqCHyoC,cAAc,CAAE9lD,CAAC,CAAE;ECjqCxC,QDmqCGuU,KAAK,CAACvQ,IAAI,CAAEqZ,WAAS,CAAC4K,MAAM,CAAEN,IAAI,CAACA,IAAK,CAAE,CAAC;ECjqC9C,MDmqCE,GCnqCOihJ,YAAYA,CAAEv6I,OAAO,EAAE3H,KAAK,EAAG;IAEvC,IDmqCC,ACnqCIk+I,IDmqCCrwJ,KAAK,CAAClQ,MAAM,GAAG,CAAC,EAAG,KCnqCO,CAAEgqB,OAAQ,CAAC,KAAK,IAAI,IAAMA,OAAO,CAAC05C,oBAAoB,IAAI15C,OAAO,CAAC/E,SAAS,KAAK/d,wBAAa,IAAI8iB,OAAO,CAAC/E,SAAS,KAAK1d,uBAAc,EAAG;MAEvK,IDmqCCo2C,GCnqCMrtC,IAAI,CAAC8/H,IAAI,CAAE9/H,EDmqCF,CAAEzO,CCnqCI,CAACsP,GDmqCF,ACnqCK,CDmqCH,ACnqCKkR,GDmqCFnS,ECnqCO,CAACuS,EDmqCH,GCnqCQ,EAAEJ,KAAK,CAACK,MAAO,CAAE,CAAC,GAAG,CAAC;IAE9D,CAAC,KDmqCC8+B,CCnqCK,IAAKx3B,OAAO,CAACxE,KDmqCA,ECnqCO,CDmqCJ,IAAI,ACnqCKjW,SAAS,IAAIya,OAAO,CAACxE,OAAO,CAACxlB,MAAM,GAAG,CAAC,EAAG;MAEzE,EDmqCA;MAED;MAEA,ACrqCC,IDqqCIwhD,GCrqCGx3B,OAAO,CAACxE,ODqqCO,ACrqCA,CAACxlB,CDqqCE,KCrqCI;IAE9B,CAAC,GDqqCAsjB,GCrqCM,CDqqCF,CAACA,ECrqCM0G,EDqqCF,CAAC2zB,ICrqCQ,CAACmmB,UDqqCM,GAAGnmB,MCrqCU,IAAIz5B,KDqqCC,ACrqCI,CAACC,OAAO,CAAE6F,OAAO,CAAC3H,KAAM,CAAC,EAAG;MAE3E,EDoqCAiB,IAAI,CAACA,ACpqCEjB,IDoqCE,CAACu7B,ACpqCE,CAACp4B,OAAO,CAACxlB,MAAM,KDoqCG,GAAG,IAAI,CAAC49C,oBAAoB;IClqC3D,CAAC,CDoqCD,KCpqCO;MDsqCP,ACpqCC,IDoqCKC,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAKA,MAAM,CAAC79C,MAAM,GAAG,CAAC,EAAG;MCpqCxB,EDsqCAsjB,IAAI,CAACA,ACtqCE,CAAC,GDsqCC,CAACu6B,MAAM,GAAGr3B,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,SAAS,CAAEm3B,MAAO,CAAE,CAAC;ICpqC1D,EDsqCA;ECpqCD,IDsqCC,IAAMrT,cAAc,GAAG,IAAI,CAACA,cAAc;MAE1C,IAAKA,cAAc,KAAK,IAAI,EAAG;ECtqChC,MDwqCElnB,IAAI,CAACA,IAAI,CAACknB,cAAc,GAAG;UAC1BpxB,MAAM,EAAEoxB,cAAc,CAACpxB,MAAM,CAACN,OAAO,CAAC,CAAC;ECvqC1C,QDwqCGma,CCxqCMw6G,KDwqCA,EAAEjjG,SCxqCcijG,CAAEz9H,IDwqCF,CAACijB,ACxqCM,EAAG;IAElC,IDuqCC,ACvqCKjJ,CDuqCJ,MCvqCW,GAAGha,KAAK,CAACC,MAAM;IAE5B+Z,EDuqCA,KCvqCO,CAACra,mBAAmB,CAAE,SAAS,EAAE89H,gBAAiB,CAAC;IAE1D+2B,EDuqCA,OAAOlhJ,IAAI,ICvqCM,CAAE0G,OAAQ,CAAC;IDyqC7B,ACvqCC,IAAKA,OAAO,CAACi5C,cAAc,EAAG;EDuqC9B,ICrqCC48F,cAAc,CAAChuC,MAAM,CAAE7nG,OAAQ,CAAC;IDqqCjCnoB,ACnqCA,GDmqCA;ECjqCD,EDiqCCnG,KAAA,EAED,SAAAsa,KAAKA,CAAA,EAAG;ECjqCR,IDmqCC,KCnqCQyuJ,EDmqCD,IAAI,IAAI,CAACtkK,UCnqCaskK,CDmqCF,ACnqCIz0J,CDmqCH,CAAC,CAACiG,ECnqCM,EDmqCF,ACnqCK,CDmqCH,IAAK,CAAC;IAE3C,ACnqCC,IAAMkQ,YAAY,GAAGnW,KAAK,CAACC,MAAM;EDmqCjC,ECjqCAkW,YAAY,CAACxW,mBAAmB,CAAE,SAAS,EAAE80J,qBAAsB,CAAC;IDiqCpE5iK,AC/pCA6iK,GD+pCA,mBC/pCsB,CAAEv+I,YAAa,CAAC;EAEvC,ED6pCCzqB,KAAA,EAED,SAAAua,IAAIA,CAAEsP,MAAM,EAAG;MAEd;EC/pCD;MDiqCC,IAAI,CAAC1V,KAAK,GAAG,IAAI;EC/pClB,IDgqCC,IAAI,CAAC6tC,AChqCG8mH,UDgqCO,GAAG,CAAC,CAAC,EChqCKA,CAAEx6I,OAAO,EAAG;IAErC,ED+pCA,EC/pCM26I,ED+pCF,CAAChnH,cC/pCkB,CD+pCH,EC/pCMmhF,CD+pCH,CAAC,CAAC,OC/pCW,CAACrpH,GAAG,CAAEuU,OAAQ,CAAC;IAEnD,ED8pCA,EC9pCK26I,ED8pCD,CAAC9mH,MAAM,GAAG,EAAE,GC9pCM,CAAC+mH,WAAW,KAAKr1J,SAAS,EAAG;MD+pCnD,IAAI,CAACqmB,WAAW,GAAG,IAAI;IC7pCvB,ED8pCA,IAAI,CAAC4U,cAAc,GAAG,IAAI;;IC5pC1B,ED8pCA,EC9pCMjlB,MAAM,GAAGyE,OAAO,CAACzE,MAAM;IAC7B,IAAMs/I,aAAa,GAAG/E,QAAQ,CAACrqJ,GAAG,CAAE8P,MAAO,CAAC;IAE5C,ED6pCA,EC7pCKs/I,ED6pCCvhJ,IAAI,GAAG,CAAC,CAAC,EC7pCG,EAAG;MAEpB,IAAM66I,YAAY,GAAG0G,aAAa,CAAEF,iBAAiB,CAACG,UAAU,CAAE;MD6pCnE,AC5pCC3G,YAAY,CAACnV,SAAS,EAAG;;MD8pC1B,AC5pCC,ID4pCG,CAAC5oJ,IAAI,GAAGmlB,MAAM,CAACnlB,IAAI;;MAEvB,AC5pCC,IAAK+9J,YAAY,CAACnV,SAAS,KAAK,CAAC,EAAG;QAEnC+b,aAAa,CAAE/6I,OAAQ,CAAC;MD4pC1B,AC1pCC,ID0pCKna,KAAK,GAAG0V,MAAM,CAAC1V,KAAK;MAE1B,IAAKA,KAAK,KAAK,IAAI,EAAG;MC1pCrB,ED4pCA,IAAI,CAACmuC,QAAQ,CAAEnuC,KAAK,CAACmG,KAAK,CAAEsN,IAAK,CAAE,CAAC;MAErC;MC5pCC,IAAKloB,MAAM,CAACuF,IAAI,CAAEkkK,aAAc,CAAC,CAAC7kK,MAAM,KAAK,CAAC,EAAG;MD8pClD,EC5pCE8/J,QAAQ,CAACjuC,MAAM,CAAEtsG,MAAO,CAAC;MAE1B;IAED,ED0pCA,IAAMm4B,UAAU,GAAGn4B,MAAM,CAACm4B,UAAU;ICxpCpCohF,ED0pCA,KAAM,GC1pCI,CD0pCE1+H,AC1pCDomC,ID0pCK,EC1pCC,CAAExc,CD0pCC0zB,MC1pCO,CAAC,GD0pCE,EAAG;ECxpClC,MD0pCE,IAAM1kC,SAAS,GAAG0kC,UAAU,CAAEt9C,IAAI,CAAE;ECxpCtC,MDypCE,GCzpCO2kK,CDypCH,CAAC5mH,WCzpCe4mH,CDypCH,ACzpCK/6I,CDypCH5pB,IAAI,EAAE4Y,ACzpCI,EAAG,ODypCE,CAAChD,KAAK,CAAEsN,IAAK,CAAE,CAAC;ICvpCnD,EDypCA,ECzpCMqhJ,iBAAiB,GAAG7lC,UAAU,CAACrpH,GAAG,CAAEuU,OAAQ,CAAC;IACnDu1I,GAAG,CAACwF,aAAa,CAAEJ,iBAAiB,CAACK,cAAe,CAAC;IAErD,EDwpCA,ECxpCMz/I,MAAM,GAAGyE,OAAO,CAACzE,MAAM;IAC7B,IAAMs/I,aAAa,GAAG/E,QAAQ,CAACrqJ,GAAG,CAAE8P,MAAO,CAAC;IAC5C,EDwpCA,IAAMo4B,CCxpCCknH,aAAa,CDwpCC,ACxpCCF,GDwpCEp/I,MAAM,CAACo4B,OCxpCQ,CAACmnH,ODwpCM,GCxpCI,CAAE;IAEpDnmG,EDwpCA,ECxpCI,CAACw1E,EDwpCC,IAAM/zI,ACxpCD,CAACwmB,KDwpCI,GCxpCI,CDwpCA+2B,CCxpCG,cDwpCY,EAAG;ECtpCvC,MDwpCE,IAAMztC,KAAK,GAAG,EAAE;ECtpClB,MDupCE,GCvpCOw0J,CDupCD5lH,cAAc,GAAGnB,ICvpCM+mH,CAAEv+I,UDupCO,CAAE/lB,CCvpCG,EAAG,GDupCF,CAAE,CAAC,CAAC;ICrpCjD,IAAM6kK,sBAAsB,GAAGnmC,UAAU,CAACrpH,GAAG,CAAE0Q,YAAa,CAAC;IAE7D,IDqpCC,ACrpCIA,KDqpCE,IAAIxqB,CAAC,ECrpCK,CDqpCF,ACrpCGkuB,CDqpCF,EAAE5sB,CAAC,GAAG6hD,KCrpCQ,EAAG,ODqpCG,CAAC9+C,MAAM,EAAErE,CAAC,GAAGsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;MCnpC1DwqB,IDqpCCjW,KAAK,CAACvQ,ECrpCK,CAACkqB,CDqpCF,CAAEi1B,UCrpCY,CAAC/3B,GDqpCC,CAAEprB,CAAC,CAAE,CAACqa,ACrpCA,CAAC,CAAC,GDqpCG,CAAEsN,IAAK,CAAE,CAAC;MCnpChDw7G,EDqpCA,QCrpCU,CAACt4F,MAAM,CAAErgB,YAAY,CAAC0D,YAAa,CAAC;IAE/C,IDqpCC,IAAI,CAAC8zB,eAAe,CAAEv9C,MAAI,CAAE,GAAG8P,KAAK;ICnpCrC,EDqpCA,ECrpCKiW,YAAY,CAACkmC,uBAAuB,EAAG;MDupC5C,ACrpCC,IDqpCG,CAACzO,ACrpCE,IAAIjiD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,CDqpCD,CCrpCI,EDqpCD4pB,ACrpCI,MDqpCE,CAACq4B,oBAAoB;QCnpCrD,IAAK15B,KAAK,CAACC,OAAO,CAAE8gJ,sBAAsB,CAACC,kBAAkB,CAAEvpK,CAAC,CAAG,CAAC,EAAG;MDqpCzE,ICnpCG,KAAM,IAAI60D,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGy0G,sBAAsB,CAACC,kBAAkB,CAAEvpK,CAAC,CAAE,CAACqE,MAAM,EAAEwwD,KAAK,EAAG,EAAG+uG,GAAG,CAAC4F,iBAAiB,CAAEF,sBAAsB,CAACC,kBAAkB,CAAEvpK,CAAC,CAAE,CAAE60D,KAAK,CAAG,CAAC;QAEhL,CAAC,MAAM;MDmpCT,IAAM3S,ACjpCH0hH,GAAG,CAAC4F,EDipCK,GAAG5/I,MAAM,CAACs4B,KCjpCE,CDipCI,ACjpCFonH,sBAAsB,CAACC,kBAAkB,CAAEvpK,CAAC,CAAG,CAAC;MDmpC1E,ECjpCE,GDipCI,IAAIA,IAAC,GAAG,CAAC,EAAEsB,GAAC,GAAG4gD,MAAM,CAAC79C,MAAM,EAAErE,IAAC,GAAGsB,GAAC,EAAEtB,IAAC,EAAG,EAAG;QAEjD,ACjpCC,IDipCKqkD,ACjpCAilH,KDipCK,GAAGpnH,MAAM,CAAEliD,IAAC,CAAE,ECjpCG,CAACypK,kBAAkB,EAAG7F,GAAG,CAAC8F,kBAAkB,CAAEJ,sBAAsB,CAACG,kBAAkB,CAAEzpK,CAAC,CAAG,CAAC;MAE1H,EDgpCA,IAAI,CAAC2iD,QAAQ,CAAE0B,KAAK,CAACjF,KAAK,EAAEiF,KAAK,CAACj2B,KAAK,EAAEi2B,KAAK,CAACzB,aAAc,CAAC;IC9oC/D,CAAC,CDgpCD,KChpCO;MAEN,IAAKr6B,KAAK,CAACC,OAAO,CAAE8gJ,sBAAsB,CAACC,kBAAmB,CAAC,EAAG;MDgpCnE,EC9oCE,KAAM,IAAI10G,MAAK,GAAG,CAAC,EAAEA,MAAK,GAAGy0G,sBAAsB,CAACC,kBAAkB,CAACllK,MAAM,EAAEwwD,MAAK,EAAG,EAAG+uG,GAAG,CAAC4F,iBAAiB,CAAEF,sBAAsB,CAACC,kBAAkB,CAAE10G,MAAK,CAAG,CAAC;MAEtK,CAAC,MAAM;MD8oCR,EC5oCE+uG,ED4oCI3pI,CC5oCD,CAACuvI,SD4oCW,GAAG5/I,KC5oCG,CD4oCG,AC5oCD0/I,CD4oCErvI,WAAW,UC5oCS,CAACsvI,kBAAmB,CAAC;MD8oCpE,AC5oCC,ID4oCItvI,WAAW,KAAK,IAAI,EAAG;MC1oC3B,ED4oCA,EC5oCKqvI,ED4oCD,CAACrvI,WAAW,GAAGA,KC5oCQ,CAACwvI,KD4oCE,CAACpvJ,KAAK,CAAC,CAAC,KC5oCQ,EAAGupJ,GAAG,CAAC8F,kBAAkB,CAAEJ,sBAAsB,CAACG,kBAAmB,CAAC;MD8oCrH,AC7oCC,IAAKH,sBAAsB,CAACK,8BAA8B,EAAG/F,GAAG,CAAC4F,iBAAiB,CAAEF,sBAAsB,CAACK,8BAA+B,CAAC;MAE3I,IAAKL,sBAAsB,CAACM,wBAAwB,EAAG;MD6oCxD,EC3oCE,KAAM,IAAI5pK,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGspK,sBAAsB,CAACM,wBAAwB,CAACvlK,MAAM,EAAErE,IAAC,EAAG,EAAG;UAEnF,IAAKspK,sBAAsB,CAACM,wBAAwB,CAAE5pK,IAAC,CAAE,EAAG4jK,GAAG,CAAC8F,kBAAkB,CAAEJ,sBAAsB,CAACM,wBAAwB,CAAE5pK,IAAC,CAAG,CAAC;MD2oC7I,ECzoCE,EDyoCI6uC,cAAc,GAAGjlB,MAAM,CAACilB,cAAc;MAE5C,ACzoCC,IDyoCIA,cAAc,KAAK,IAAI,EAAG;MCvoC9B,EDyoCA,ECzoCKy6H,EDyoCD,CAACz6H,cAAc,GAAGA,ECzoCK,CAACg7H,WDyoCQ,CAACxvJ,KAAK,CAAC,CAAC,KCzoCQ,EAAGupJ,GAAG,CAAC8F,kBAAkB,CAAEJ,sBAAsB,CAACO,wBAAyB,CAAC;IAEjI,EDyoCA;ICvoCA,IAAM5+I,QAAQ,GAAGT,YAAY,CAACS,QAAQ;IAEtC,EDuoCA,GCvoCM,IAAIjrB,IAAC,GAAG,CAAC,EAAEyuB,EAAE,GAAGxD,QAAQ,CAAC5mB,MAAM,EAAErE,IAAC,GAAGyuB,EAAE,EAAEzuB,IAAC,EAAG,EAAG;MAErD,IAAM8pK,oBAAoB,GAAG3mC,UAAU,CAACrpH,GAAG,CAAEmR,QAAQ,CAAEjrB,IAAC,CAAG,CAAC;MDuoC7D,ACroCC,IDqoCG,ACroCE8pK,CDqoCD3nH,SAAS,CAAC/C,KAAK,GAAGx1B,CCroCG,CAACy/I,IDqoCE,CAAClnH,SAAS,ACroCE,CDqoCD/C,CCroCI,IDqoCC;MAC7C,ECpoCEwkH,EDooCE,CAACzhH,ACpoCA,CAACinH,QDooCQ,CAACh7I,ICpoCI,CDooCC,ACpoCC07I,GDooCElgJ,MAAM,CAACu4B,SAAS,CAAC/zB,ACpoCC,CAACi7I,IDooCG,UCpoCY,CAAC;QAExDrmG,IAAI,CAACw1E,MAAM,CAACvtH,QAAQ,EAAG;MDooCzB,ACloCC;MAEAk4G,UAAU,CAACt4F,MAAM,CAAE5f,QAAQ,CAAEjrB,IAAC,CAAG,CAAC;IAEnC,EDgoCA,IAAI,CAACsqB,QAAQ,GAAGV,MAAM,CAACU,QAAQ;IC9nC/B64G,EDgoCA,OAAO,CChoCG,CAACt4F,EDgoCA,IChoCM,CAAErgB,YAAa,CAAC;EAElC,EDgoCA;EAAC;EC9nCD,ED8nCCtkB,GAAA;IAAAnG,KAAA,EAED,SAAAqrB,OAAOA,CAAA,EAAG;EC9nCV,IDgoCC,AChoCG2+I,IDgoCC,CAAC31J,OChoCU,GAAG,CAAC,EDgoCD,CAAE;EC9nCrB,MD8nCuBlT,GC9nCd8oK,CD8nCkB,EAAE,cC9nCHA,CAAA,EAAG;IAE5BD,ED4nCsC,CAAE,CAAC,QC5nC7B,GAAG,CAAC;EAEjB,ED4nCA;EAAC,AC1nCD,SAAS5tB,mBAAmBA,CAAA,EAAG;AD0nC9B,EA/jC2B3oI,ECzD3B,IAAMy2J,SDyDoC,ECzDzB,GAAGF,YAAY;AD4nClC,IAAMhkH,AC1nCJ,IAAKkkH,WAAW,CD0nCI,GAAG,AC1nCHnwB,YAAY,CD0nCK,AC1nCJ/K,ID0nCQtuG,OAAO,AC1nCJ,CD0nCK,CAAC,AC1nCH;AD2nCjD,IAAMulB,ECznCHjtC,IDynCS,GAAG,ACznCL,CAACC,IAAI,CAAE,ODynCY,IAAI2kB,GAAG,CAAC,CAAC,qBCznCgB,GAAGssI,WAAW,GAAG,8CAA8C,GAAGnwB,YAAY,CAAC/K,WAAY,CAAC;AD0nClJ,IAAM9oF,ACxnCJ,SDwnCa,GAAG,aAAc,IAAItpB,MAAM,CAAC,CAAC;AAC5C,IAAMupB,ACvnCJ6jH,YDunCgB,ACvnCJ,GDunCO,CCvnCH,CAAC,WDunCgB,IAAIh1I,OAAO,CAAC,CAAC;AAEhD,IAAMoxB,ACvnCJ,KDunCS,ECvnCF8jH,CDunCK,UCvnCM,GDunCQ,IAAIl1I,OAAO,CAAC,CAAC;AACzC,ECtnCC,EDsnCKqxB,KAAK,GAAG,aAAc,IAAIrxB,OAAO,CAAC,CAAC;AACzC,ECrnCC,EDqnCKsxB,KAAK,ECrnCD6jH,CDqnCI,aAAc,IAAIn1I,ACrnCJm1I,CAAE77I,MDqnCS,CAAC,ACrnCH,CDqnCI,CCrnCD;ADunCxC,IAAMi4B,ACrnCJ,IAAM/xC,EDqnCI,GAAG,ACrnCF,GAAG,EAAE,QDqnCW,IAAIwgB,OAAO,CAAC,CAAC;AAC1C,IAAMwxB,ACpnCJhyC,KAAK,CAACvQ,CDonCK,GAAG,ACpnCJ,CAAEqqB,OAAO,CAAClF,IDonCQ,CCpnCF,CAAC,EDonCK4L,OAAO,CAAC,CAAC;AAE3C,IAAMyxB,ACrnCJjyC,KAAK,CAACvQ,IAAI,CAAEqqB,ODqnCU,ACrnCH,CAACjF,EDqnCK,GCrnCC,CAAC,SDqnCY,IAAI2L,OAAO,CAAC,CAAC;AACtD,IAAM0xB,ACrnCJlyC,KAAK,CAACvQ,IAAI,CAAEqqB,OAAO,CAACa,IDqnCO,CCrnCF,EDqnCK,ECrnCD,CAAE,CAAC,SDqnCY,IAAI6F,OAAO,CAAC,CAAC;AAAC,IAEtD2xB,ACtnCJnyC,IDsnCQ,CCtnCH,CAACvQ,CDsnCEyC,GCtnCE,CAAE4nB,GDsnCJ,CAAAq4B,GCtnCW,CDsnCX,ACtnCYr9B,SAAU,CAAC,gBDsnCvBs9B,SAAA;EAET,ECvnCCpyC,KAAK,CAACvQ,CDunCP0iD,GCvnCW,CAAEr4B,CDunCb,EAAmF,ICvnC/D,CAAC/E,SAAU,CAAC;IDunCmD,ACtnClF/U,IDsnCkFqyC,CCtnC7E,CAAC5iD,IAAI,CDsnCwE,ACtnCtEqqB,OAAO,CAAC7E,UAAW,CAAC;IDsnCkD,ACrnClFjV,IDqnCYolB,CCrnCP,CAAC31B,IAAI,CAAEqqB,CDqnCQ,GAAA7X,GCrnCD,CAACuT,KDqnCA,CAAA1lB,MAAA,ECrnCe,CAAC,KDqnChBmS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,IAAIkrC,cAAc,CAAC,CAAC;IAAA,ACpnC3CntC,IDonC6Cs7B,CCpnCxC,CAAC7rC,IAAI,CAAEqqB,CDonCyC,GAAA7X,GCpnClC,CAAC+S,KDonCiC,CAAAllB,ACpnC1B,CAAC,KDonCyB,QAAAmS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,IAAI6mC,iBAAiB,CAAC,CAAC;IAAAt3C,ACnnC/EwO,KAAK,CAACvQ,IAAI,CAAEqqB,IDmnCmE,GCnnC5D,CAACntB,GDmnC2DwlD,CCnnCtD,CAAC,EDmnCqD;IAE/EE,ACpnCAryC,KAAK,CAACvQ,CDonCN,GAAA0lB,ACpnCU,CAAE2E,OAAO,CAACnE,CDonCpB,OAAAw8B,IAAA,GCpnCoC,CAAC;IDsnCrCE,ACrnCAryC,KAAK,CAACvQ,CDqnCN,CAAK+1B,ECrnCK,CAAE1L,GDqnCD,GAAG,CCrnCK,CAAClE,EDqnCF,cCrnCmB,CAAC;IDunCtCy8B,ACtnCAryC,KAAK,CAACvQ,CDsnCN,CAAK9C,ECtnCK,CAAEmtB,CDsnCH,GAAG,GCtnCO,CAACjE,EDsnCF,GCtnCQ,CAAC;IDwnC3Bw8B,ACvnCAryC,KAAK,CAACvQ,CDunCN,CAAK21B,ECvnCK,CAAEtL,KDunCC,ECvnCM,CDunCHsL,ACvnCItP,QDunCI,OCvnCY,CAAC;IDwnCrCu8B,ACvnCAryC,KAAK,CAACvQ,CDunCN,CAAK6rC,ECvnCK,CAAExhB,KDunCC,ECvnCM,CDunCHwhB,ACvnCIzqB,QDunCI,ECvnCO,CAAC;IDynChCwhC,ACvnCA,ODunCA,ACvnCOryC,CDunCFsyC,ICvnCO,CAACm8F,IAAI,CAAC,CAAC,ODunCI,CAAC,CAAC;ECrnC1B,EDqnC2B,OAAAp8F,OAAA;EAE3B;EAACj8B,ACrnCD,SDqnCC,CAAA+7B,IAAA,EAAAC,SAAA;EAAA,OAAAxgD,YAAA,CAAAugD,IAAA;ECnnCD,EDmnCCxgD,GAAA,ICnnCQ84I,YAAYA,CAAE3wH,OAAO,EAAE87I,IAAI,EAAG;IDmnCtCpqK,ACjnCA,IAAMipK,CDinCN,EAED,SAAA1uJ,IAAIA,CAAEsP,ACnnCkB,GAAGu5G,GDmnCf,EAAEjzF,KCnnCuB,CAACp2B,GDmnCf,ACnnCkB,CAAEuU,CDmnCjB,MCnnCyB,CAAC;IAEnD,EDmnCAovB,ECnnCKpvB,OAAO,CAACi5C,GDmnCb,CAAA5gB,IAAA,MCnnC2B,EAAG0jH,YDmnClBxgJ,MAAM,ACnnC8B,CAAEyE,CDmnC9B6hB,MCnnCsC,CAAC,EDmnC9B;ICjnC7B,EDmnCA,ECnnCK7hB,EDmnCAzE,KCnnCO,CDmnCD,ACnnCEa,CDmnCDq8B,oBCnnCsB,CDmnCD,ICnnCM,CDmnCDlzC,ICnnCM,IAAIya,CDmnCD,EAAG,ICnnCK,CAACrG,OAAO,GAAG,CAAC,IAAIghJ,iBAAiB,CAACqB,SAAS,KAAKh8I,OAAO,CAACrG,OAAO,EAAG;MAExH,EDmnCA,ECnnCMtB,EDmnCF,CAACogC,ECnnCM,GAAGz4B,OAAO,CAAC3H,KAAK,GDmnCD,GAAGkD,MAAM,CAACk9B,qBAAqB,CAACzhD,KAAK,CAAC,CAAC;MAElE,ACnnCC,IAAKqhB,KAAK,KAAK,IAAI,EAAG;MDqnCvB,ECnnCE3N,EDmnCG6Q,KCnnCI,CDmnCE,ACnnCD5Q,CDmnCE+tC,GCnnCE,CAAE,iBDmnCiB,KAAKnzC,SAAS,EAAG,wCCnnCwC,CAAC;MAE1F,CAAC,CDmnCD,IAAI,CAACmzC,ACnnCE,IAAKrgC,KAAK,CAACjhB,QAAQ,GDmnCA,ECnnCK,CDmnCFhG,ICnnCO,EDmnCD,ACnnCI,CDmnCHgmB,MAAM,CAAE,CAAC,CAAC,EAAEmE,MAAM,CAACm9B,qBAAsB,CAAC;MAE/E,ECnnCEhuC,OAAO,CAACC,IAAI,CAAE,wEAAyE,CAAC;MDqnC1F,ACnnCC,CAAC,GDmnCE,CAAC62B,ECnnCG,MDmnCK,GAAGtnB,KAAK,CAACC,OAAO,CAAEoB,MAAM,CAACimB,QAAS,CAAC,GAAGjmB,MAAM,CAACimB,QAAQ,CAACxqC,KAAK,CAAC,CAAC,GAAGukB,MAAM,CAACimB,QAAQ;MAC5F,EClnCEy6H,EDknCE,CAAC3wI,QAAQ,EClnCE,CDknCC/P,AClnCCo/I,MDknCK,CAACrvI,QAAQ,EClnCG,EAAEtL,OAAO,EAAE87I,IAAK,CAAC;MDonCnD,ECnnCE,KDmnCK,IAAI;IAEZ,ECnnCE;EDmnCD,ECjnCA;IDinCAjkK,AC/mCAosH,GD+mCA,EC/mCK,CAAC6rC,WAAW,CAAEyF,GAAG,CAAC9E,UAAU,EAAEkK,iBAAiB,CAACK,cAAc,EAAEzF,GAAG,CAACtB,QAAQ,GAAG6H,IAAK,CAAC;EAE3F,ED6mCCpqK,KAAA,EAED,SAAA8mD,kBAAkBA,CAAA,EAAG;EC7mCrB,ID+mCC,IAAMltB,CC/mCE2lH,OD+mCM,GAAG,IAAI,CAAC3lH,EC/mCG2lH,CAAEjxH,KD+mCG,EC/mCI,EAAE87I,IAAI,EAAG;IAE3C,ED+mCA,EC/mCMnB,ED+mCAhnH,eAAe,AC/mCE,GD+mCCroB,AC/mCEwpG,QD+mCM,CAACnhF,CC/mCG,CAACloC,GAAG,CAAEuU,OAAQ,CAAC,CD+mCH;IC7mChD,ED8mCA,EC9mCKA,ED8mCCrpB,IAAI,CC9mCE,CAACgjB,CD8mCAvoB,MAAM,AC9mCC,CD8mCAuF,EC9mCG,CAAC,CD8mCA,CAAEg9C,EC9mCEgnH,aD8mCc,CAAC,GC9mCE,CAACqB,SAAS,KAAKh8I,OAAO,CAACrG,OAAO,EAAG;MDgnC9E,AC9mCCsiJ,ID8mCItlK,IAAI,CAACX,IC9mCI,CAAE2kK,CD8mCA,GAAG,CAAC,EAAG,UC9mCU,EAAE36I,OAAO,EAAE87I,IAAK,CAAC;MACjD,ED+mCA,IAAMhnH,cAAc,GAAGnB,eAAe,CAAEh9C,IAAI,CAAE,CAAC,CAAE,CAAE;IC7mCpD,ID+mCC,IAAKm+C,cAAc,KAAKvvC,SAAS,EAAG;IC7mCrC0+G,KAAK,CD+mCH,AC/mCI6rC,ID+mCA,CAACr3G,MC/mCU,CAAE88G,GAAG,CAACnF,UD+mCK,GAAG,EAAE,CC/mCM,EAAEuK,iBAAiB,CAACK,cAAc,EAAEzF,GAAG,CAACtB,QAAQ,GAAG6H,IAAK,CAAC;EAEjG,QD8mCG,IAAI,CAACpjH,qBAAqB,GAAG,CAAC,CAAC;EC5mClC,QD8mCG,CC9mCMm4F,ID8mCA,IAAIxpI,CAAC,GAAG,AC9mCIwpI,CD8mCH,AC9mCK7wH,ED8mCH24B,EAAE,GAAG7D,AC9mCK,EAAEgnH,IAAI,EAAG,MD8mCA,CAAC9lK,MAAM,EAAEqR,CAAC,GAAGsxC,EAAE,EAAEtxC,CAAC,EAAG,EAAG;IC5mC9D,IAAMszJ,ID8mCH,IAAMvkK,IAAI,GAAG0+C,EC9mCO,GAAGggF,SD8mCI,CAAEztH,AC9mCI,CD8mCH,AC9mCIoE,CD8mCF,CAACrV,CC9mCI,CAAE4pB,ED8mCF,IAAI/nB,CC9mCM,CAAC,ID8mCD,CAAEoP,CAAE,CAAC;IC5mCvD,IAAK2Y,ID8mCF,GC9mCS,CD8mCL,AC9mCMrG,CD8mCL8+B,MC9mCY,GAAG,CAAC,IAAIkiH,OD8mCC,CAAChlK,IAAI,CAAE,CAAE,CAAC,EC9mCM,CAACqmK,SAAS,KAAKh8I,OAAO,CAACrG,OAAO,EAAG;MAE7EsiJ,MD6mCE,IAAI,CAACvjH,EC7mCM,CAAEiiH,iBAAiB,CD6mCJ,CAAEvkK,AC7mCI4pB,ID6mCA,CAAE,EC7mCK,CD6mCF3Y,CAAC,AC7mCGy0J,IAAK,CAAC;MACjD,ID8mCC;IC5mCF,ID8mCC;IC5mCD73C,ED8mCA,GC9mCK,CAAC6rC,WAAW,CAAEyF,GAAG,CAACpF,UAAU,EAAEwK,iBAAiB,CAACK,cAAc,EAAEzF,GAAG,CAACtB,QAAQ,GAAG6H,IAAK,CAAC;EAE3F,ED8mCA;EAAC,AC5mCD,SAAS/qB,cAAcA,CAAE/wH,OAAO,EAAE87I,IAAI,EAAG;ID4mCxCjkK,AC1mCA,GD0mCA,CC1mCM8iK,iBAAiB,GAAG7lC,UAAU,CAACrpH,GAAG,CAAEuU,OAAQ,CAAC;ID0mCnDtuB,ACxmCA,IAAKsuB,CDwmCL,EAED,IC1mCa,CAACrG,ID0mCdgS,GC1mCqB,GAAG,CAAC,IAAIgvI,MD0mCZhvI,CAAE9lB,KAAK,EAAEI,GC1mCoB,CAAC+1J,ED0mCf,EAAG,KC1mCqB,KAAKh8I,OAAO,CAACrG,OAAO,EAAG;MD4mC9E,AC1mCCuiJ,ID0mCK5wI,QAAQ,GAAG,EC1mCC,CAAEqvI,CD0mCC,CAACrvI,QAAQ,OC1mCO,EAAEtL,OAAO,EAAE87I,IAAK,CAAC;MD2mCtD,AC1mCC,ID0mCK7lI,QAAQ,GAAG3K,QAAQ,CAACooB,UAAU,CAACzd,QAAQ;ICxmC7C,EDymCA,IAAM2iB,aAAa,GAAGttB,QAAQ,CAACqoB,eAAe,CAAC1d,QAAQ;ICvmCvDguF,EDwmCA,GCxmCK,CDwmCCrwE,ACxmCAk8G,WAAW,CAAEyF,GAAG,CAAC7E,IDwmCG,GAAGplI,QAAQ,CAACsoB,ACxmCC,EAAE+mH,iBAAiB,CDwmCA,ACxmCCK,cAAc,EAAEzF,GAAG,CAACtB,QAAQ,GAAG6H,IAAK,CAAC;EAEjG,IDwmCC71J,MAAM,CAAC8I,mBAAmB,CAAEknB,QAAQ,EAAEpwB,KAAM,CAAC;ECtmC9C,IDwmCC,ACxmCKs2J,IDwmCCtjH,QCxmCW,GAAA7gC,IDwmCI,GAAG,IAAI,CAACygC,GCxmCZ,CAAAzgC,eAAA,CAAAA,CDwmCiC,cCxmCjC,KACfjb,yBAAc,EAAIw4J,GAAG,CAAC6G,MAAM,GAC5Bp/J,8BAAmB,EAAIu4J,GAAG,CAAC8G,aAAa,GACxCp/J,iCAAsB,EAAIs4J,GAAG,CAAC+G,eAAe,CAC/C;EAED,IDomCC,ACpmCKC,IDomCA3jH,MCpmCU,GAAA5gC,IDomCG,IAAI6gC,OCpmCP,CAAA7gC,ODomCsB,EAAG,MCpmCzB,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,KACb9a,wBAAa,EAAIq4J,GAAG,CAACtF,OAAO,GAC5B9yJ,qCAA0B,EAAIo4J,GAAG,CAACiH,sBAAsB,GACxDn/J,oCAAyB,EAAIk4J,GAAG,CAACkH,qBAAqB,GAEtDl/J,uBAAY,EAAIg4J,GAAG,CAACmH,MAAM,GAC1Bl/J,oCAAyB,EAAI+3J,GAAG,CAACoH,qBAAqB,GACtDj/J,mCAAwB,EAAI63J,GAAG,CAACqH,oBAAoB,CACtD;EAED,IAAMC,ED4lCJ3kH,OAAO,CAACztC,CC5lCO,ED4lCJ,CAAE,AC5lCEuN,CD4lCD,EAAE,CAAC,EAAE,CAAE,CAAC,OC5lCP,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,KACdlU,uBAAY,EAAIyxJ,GAAG,CAACvJ,KAAK,GACzB3nJ,wBAAa,EAAIkxJ,GAAG,CAACtJ,MAAM,GAC3BloJ,sBAAW,EAAIwxJ,GAAG,CAACrJ,IAAI,GACvBjoJ,2BAAgB,EAAIsxJ,GAAG,CAACpJ,MAAM,GAC9BnoJ,uBAAY,EAAIuxJ,GAAG,CAACnJ,KAAK,GACzBhoJ,8BAAmB,EAAImxJ,GAAG,CAAClJ,MAAM,GACjCnoJ,yBAAc,EAAIqxJ,GAAG,CAACjJ,OAAO,GAC7BnoJ,0BAAe,EAAIoxJ,GAAG,CAAChJ,QAAQ,CACjC;EAED,MDmlCE,GCnlCOuQ,EDmlCD,IAAInrK,CAAC,GAAG,CAAC,EAAEyuB,EAAE,GAAGw4B,ECnlCKkkH,CAAEh9B,UDmlCM,CAAC9pI,ACnlCI,EAAEgqB,IDmlCA,EAAEruB,CAAC,ACnlCI,EAAG,CDmlCJyuB,EAAE,EAAEzuB,CAAC,EAAG,EAAG;ICjlC5D,IAAKquB,EDmlCH,IAAM84B,CCnlCI,CAACjmD,IAAI,GDmlCA,ECnlCKqL,CDmlCF26C,eAAe,CAAElnD,CAAC,CAAE,CCnlCT,IAAIsrD,UAAU,CAACq9B,GAAG,CAAE,0BAA2B,CAAC,KAAK,KAAK,KACtFt6D,OAAO,CAAChF,SAAS,KAAKzd,uBAAY,IAAIyiB,OAAO,CAAChF,SAAS,KAAKxd,oCAAyB,IAAIwiB,OAAO,CAAChF,SAAS,KAAK3d,oCAAyB,IAAI2iB,OAAO,CAAChF,SAAS,KAAKtd,mCAAwB,IAC5LsiB,OAAO,CAAC/E,SAAS,KAAK1d,uBAAY,IAAIyiB,OAAO,CAAC/E,SAAS,KAAKzd,oCAAyB,IAAIwiB,OAAO,CAAC/E,SAAS,KAAK5d,oCAAyB,IAAI2iB,OAAO,CAAC/E,SAAS,KAAKvd,mCAAwB,CAAE,EAAG;MAE/LgN,IDglCC,GChlCM,CDglCAoqC,AChlCCnqC,IAAI,CAAE,SDglCO,GAAGiuC,aAAa,CAAEjnD,CAAC,CAAE,8GChlC+G,CAAC;IAE3J,MDglCE,IAAKmnD,SAAS,KAAK,CAAC,EAAG;IC9kCzBy8G,GAAG,CAACxF,EDglCF93G,MAAM,CAAClpC,IChlCQ,CAAE+wH,WAAW,EAAEy1B,CDglCJ,CAAEzgH,CChlCK,CAACioH,YDglCQ,EAAEl3J,AChlCI,EAAEs2J,GDglCA,CAAC,QChlCW,CAAEn8I,OAAO,CAAClF,KAAK,CAAG,CAAC;IACnFy6I,GAAG,CAACxF,EDilCF,IAAKn8G,OCjlCU,CAAEksF,WAAW,CDilCH,CCjlCKy1B,CDilCF,ECjlCK,CAACyH,cAAc,EAAEb,YAAY,CAAEn8I,OAAO,CAACjF,KAAK,CAAG,CAAC;IAEnF,IAAK+kH,IDilCF5nF,OAAO,ACjlCM,CDilCL7rC,ICjlCUkpJ,GAAG,CAACpF,ODilCC,CAAEl4G,ECjlCO,IDilCD,ACjlCK6nF,EDilCHhnF,SAAU,ACjlCI,CDilCH,ICjlCQy8G,GAAG,CAACnF,gBAAgB,EAAG;MAE7EmF,GAAG,CDilCF,ACjlCGxF,CDilCF,MAAM,MCjlCS,CAAEjwB,WAAW,EAAEy1B,GAAG,CAAC0H,cAAc,EAAEd,YAAY,CAAEn8I,OAAO,CAACa,KAAK,CAAG,CAAC;IAEpF,QDilCGq3B,OAAO,CAAC7rC,eAAe,CAAE4rC,MAAM,CAAC3rC,GAAG,CAAErG,MAAO,CAAC,EAAE6yC,SAAU,CAAC;IC/kC7Dy8G,GAAG,CAACxF,EDilCF,WCjlCe,CAAEjwB,WAAW,EAAEy1B,GAAG,CAACrF,kBAAkB,EAAEqM,UAAU,CAAEv8I,OAAO,CAAChF,SAAS,CAAG,CAAC;IACzFu6I,GAAG,CDklCF,ACllCGxF,aAAa,CAAEjwB,WAAW,EAAEy1B,GAAG,CAACvF,kBAAkB,EAAEuM,UAAU,CAAEv8I,OAAO,CAAC/E,SAAS,CAAG,CAAC;IAEzF,IDklCChV,ACllCI+Z,MDklCE,CAAC9T,ACllCI,CAAC6uD,EDklCF,CAAE7iB,OAAQ,CAAC,ICllCM,EAAG;MDolC/B,ACllCCq9G,GAAG,CAACxF,aAAa,CAAEjwB,WAAW,EAAEy1B,GAAG,CAAC2H,oBAAoB,EAAE3H,GAAG,CAAC4H,sBAAuB,CAAC;MDolCvF,ACnlCC5H,GAAG,CAACxF,GDmlCE9pJ,MAAM,ICnlCK,CAAE65H,WAAW,EAAEy1B,GAAG,CAAC6H,oBAAoB,EAAEP,WAAW,CAAE78I,OAAO,CAAC+6C,eAAe,CAAG,CAAC;IDqlCpG,ACnlCC;EDmlCA,ECjlCA,IAAK9d,UAAU,CAACq9B,GAAG,CAAE,gCAAiC,CAAC,KAAK,IAAI,EAAG;IDilCnEziF,EC/kCC,CD+kCD,GC/kCMmoB,OAAO,CAAChF,SAAS,KAAK9d,wBAAa,EAAG;ID+kC5CxL,EC9kCC,GD8kCD,CC9kCMsuB,CDglCP,MChlCc,CAAC/E,EDglCfqiB,OAAOA,AChlCiB,CDglCfyb,IChlCoB17C,KDglCX,EAAE27C,UAAU,EAAG,iBChlCqB,IAAIh5B,OAAO,CAAC/E,SAAS,KAAKvd,mCAAwB,EAAG;MDklC1G,ACjlCC,IDilCK4tB,ACjlCAtL,OAAO,CDilCC,ACjlCAntB,GDilCG,CCjlCC,GDilCG,CAACy4B,CCjlCCptB,ODilCO,aCjlCE,IAAI++C,UAAU,CAACq9B,GAAG,CAAE,0BAA2B,CAAC,KAAK,KAAK,EAAG,OAAO,CAAC;MDklCrG,IAAM94C,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,ACjlCC,IDilCKzZ,ACjlCA/H,OAAO,CAAC7E,GDilCG,GAAG,IAAI,ACjlCA,CDilCC4M,ECjlCE,CAAC,IAAI+sG,IDilCI,MCjlCM,CAACrpH,GAAG,CAAEuU,OAAQ,CAAC,CAACq9I,mBAAmB,EAAG;MDmlChF,ECjlCE,EDilCG77H,ECjlCGw9F,MDilCK,GCjlCI,EDilCCz5H,CCjlCE03C,QDilCO,EAAG,ACjlCA,CAACxxC,GAAG,CAAE,gCAAiC,CAAC;QACpE8pJ,GAAG,CAAC+H,aAAa,CAAEx9B,WAAW,EAAEd,SAAS,CAACu+B,0BAA0B,EAAEj3J,IAAI,CAACY,GAAG,CAAE8Y,OAAO,CAAC7E,UAAU,EAAEswH,YAAY,CAACjM,gBAAgB,CAAC,CAAE,CAAE,CAAC;MDklCzI,ECjlCE1K,UAAU,CAACrpH,GAAG,CAAEuU,OAAQ,CAAC,CAACq9I,mBAAmB,GAAGr9I,OAAO,CAAC7E,UAAU;MAEnE;IAED,ED+kCA,IAAKmQ,QAAQ,CAACkV,cAAc,KAAK,IAAI,EAAGlV,QAAQ,CAACqpB,qBAAqB,CAAC,CAAC;EC7kCzE,ID+kCCiD,SAAS,CAAC3rC,IAAI,CAAEqf,QAAQ,CAACkV,cAAe,CAAC;EC7kC1C,ID8kCCoX,KC9kCQ4lH,ID8kCC,CAAChgJ,MC9kCSggJ,CAAE7C,KD8kCC,CAAE5yI,WAAY,AC9kCE,CD8kCD,CC9kCG/H,OAAO,EAAG;IAElD,IAAIy9I,WAAW,GAAG,KAAK;IAEvB,ED4kCA,EC5kCK9C,iBAAiB,CAACC,WAAW,KAAKr1J,SAAS,EAAG;MAElDo1J,iBAAiB,CAACC,WAAW,GAAG,IAAI;MD4kCrCjjH,AC1kCC33B,MD0kCK,CAAC/T,AC1kCC,CAAC7G,GD0kCE,CAAE2zC,SAAS,CAACtpB,EC1kCE,CD0kCE,AC1kCA,CD0kCC,CAACG,MAAM,CAAEmpB,AC1kCD,EAAE0qF,OD0kCQ,CAACvsG,IAAK,CAAC,GC1kCE,CAAC;IAExD,ED0kCA,IAAK0gB,SAAS,CAAC3rB,aAAa,CAAE0rB,MAAM,CAACpoB,MAAO,CAAC,KAAK,KAAK,EAAG;QAEzD,IAAKooB,MAAM,CAACjnB,eAAe,CAAEknB,SAAS,EAAEC,YAAa,CAAC,KAAK,IAAI,EAAG;IC1kCnE,ID4kCC,IAAKF,MAAM,CAACpoB,MAAM,CAACrhB,iBAAiB,CAAE2pC,YAAa,CAAC,GAAAvxC,IAAA,CAAAgD,GAAA,CAAKyvC,SAAS,CAAC5hB,GAAG,GAAG4hB,SAAS,CAAC7hB,IAAI,EAAM,CAAC,GAAG;MAElG;IC5kCA,IAAM3b,MAAM,GAAGyE,OAAO,CAACzE,MAAM;IAC7B,ED6kCA,EC7kCIs/I,aAAa,GAAG/E,QAAQ,CAACrqJ,GAAG,CAAE8P,MAAO,CAAC;IAE1C,IAAKs/I,aAAa,KAAKt1J,SAAS,EAAG;MD6kCnCmyC,AC3kCCmjH,aAAa,GD2kCE,AC3kCC,CD2kCA5uJ,AC3kCC,CAAC,GD2kCE,CAAE8b,WAAY,CAAC,CAAC7V,MAAM,CAAC,CAAC;MAC7CylC,AC3kCCm+G,MD2kCK,CAAC7pJ,CC3kCE,CAACxB,ED2kCC,CAAEsuC,AC3kCA,CAAEx9B,MAAM,ED2kCC,AC3kCCs/I,CD2kCAprI,GAAI,CAAC,CAACjS,OC3kCQ,CAAC,ID2kCG,CAAEk6B,gBAAiB,CAAC;ICzkC7D;MD2kCA;ICzkCA;MD2kCA,IAAKpsB,QAAQ,CAACM,WAAW,KAAK,IAAI,EAAG;ICzkCrC,ID2kCC,AC3kCK8xI,ID2kCA/lH,MAAM,CAACvrB,IC3kCQ,GAAGyvI,MD2kCE,CAAEvwI,QAAQ,CAACM,EC3kCK,CAAE5L,OAAQ,CD2kCH,AC3kCI,CD2kCH,KAAK,KAAK,EAAG;ICzkC/D,ED2kCA,EC3kCK09I,eAAe,KAAK/C,iBAAiB,CAACG,UAAU,EAAG;MAEvD;MD2kCD;MCzkCC,IAAKD,aAAa,CAAE6C,eAAe,CAAE,KAAKn4J,SAAS,EAAG;MD2kCvD,ECzkCE,EDykCE,CAAC0zC,qBAAqB,CAAEF,SAAS,EAAEC,UAAU,EAAErB,MAAO,CAAC;IAE5D;EAAC,MCzkCEkjH,aAAa,CAAE6C,eAAe,CAAE,GAAG;IDykCrC7lK,GAAA,GCxkCGmoB,OAAO,EAAEu1I,GAAG,CAAC3F,aAAa,CAAC,CAAC;IDwkC/Bl+J,KAAA,CCvkCGstJ,CDykCJ,QCzkCa,CDykCb/lG,CCzkCe,oBDykCMA,CAAEF,SAAS,EAAEC,UAAU,EAAEE,aAAa,EAAG;MAE7D,EC1kCE,CAAC,CD0kCCC,YAAY;MAEhB,EC1kCEwb,ED0kCIrpC,EC1kCA,CAAC6+G,KD0kCO,CC1kCD,CAACvtH,CD0kCG,IAAI,CAAC0O,EC1kCA,EAAG,ID0kCK;MAC9B,IAAMkW,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAE9B,EC3kCE,ED2kCI37B,KAAK,GAAGylB,QAAQ,CAACzlB,KAAK;MAC5B,EC3kCE,ED2kCIowB,QAAQ,GAAG3K,QAAQ,CAACooB,UAAU,CAACzd,QAAQ;MAC7C,IAAMhZ,EAAE,GAAGqO,QAAQ,CAACooB,UAAU,CAACz2B,EAAE;MACjC,EC3kCEwgJ,ED2kCIrkH,GAAG,GAAG9tB,GC3kCC,GAAG,ED2kCI,CAACooB,CC3kCD,SD2kCW,CAAC0F,GAAG;MACnC,AC1kCC,ID0kCKvwB,MAAM,GAAGyC,QAAQ,CAACooB,UAAU,CAAC7qB,MAAM;MACzC,ACzkCCgyI,IDykCKhnH,MAAM,GAAGvoB,ACzkCD,CAAEoyI,ODykCO,CAAC7pH,MAAM,CCzkCC,CAAE,CAACmrG,SAAS,EAAG;MD0kC9C,IAAMlrG,SAAS,GAAGxoB,QAAQ,CAACwoB,SAAS;MAEpC,AC1kCC,ID0kCIjuC,KAAK,KAAK,IAAI,EAAG;MCzkCrB,ED2kCA;;MCzkCA,ED2kCA,EC3kCMsuJ,ED2kCDj6I,KAAK,CAACC,IC3kCO,GD2kCA,AC3kCG0gJ,CD2kCDr5H,QAAS,CAAC,EAAG,CC3kCC,CAAEm5H,iBAAiB,CAACG,UAAU,CAAE;MAElE,ID2kCC,AC3kCI3G,KD2kCE,IAAIxiK,CAAC,EC3kCK,CD2kCF,CAAC,EAAEyuB,CC3kCI7a,CD2kCF,GAAGsuC,KC3kCQ,CD2kCF,CAAC79C,AC3kCI,MD2kCE,EAAErE,CAAC,GAAGyuB,EAAE,EAAEzuB,CAAC,EAAG,EAAG;QCzkCpDkpK,ID2kCC,IAAM7kH,KAAK,AC3kCC,CAAE2kH,ED2kCA9mH,MAAM,CAAEliD,CAAC,CAAE,MC3kCM,CAACmpK,UAAU,CAAE,CAAC9b,SAAS,EAAG;QAE1D,ID0kCC,AC1kCImV,ID0kCE96G,QC1kCU,CAAC2lG,ID0kCE,GAAGx9G,EC1kCI,KAAK,CD0kCD,AC1kCE,CD0kCAwU,CC1kCG,ID0kCE,CAACzB,aAAa,CAAE;UCxkCrDwmH,ED0kCA,IAAMhqH,KAAK,EC1kCE,CD0kCCzqC,AC1kCC0Z,ID0kCG,CAAC7Y,EC1kCI,CD0kCD,AC1kCE,CD0kCA6uC,KAAK,CAACjF,KAAK,EAAE+C,SAAS,CAAC/C,KAAM,CAAC;QCxkCvD,IDykCC,IAAMuI,GAAG,GAAGhzC,IAAI,CAACY,GAAG,CAAErB,KAAK,CAACka,KAAK,EAAEzZ,IAAI,CAACY,GAAG,CAAI8uC,KAAK,CAACjF,KAAK,GAAGiF,KAAK,CAACj2B,KAAK,EAAM+zB,SAAS,CAAC/C,KAAK,GAAG+C,SAAS,CAAC/zB,KAAQ,CAAE,CAAC;MCvkCvH,MDykCE,KAAM,IAAIgO,CAAC,GAAGgjB,KAAK,EAAEgE,EAAE,GAAGuE,GAAG,EAAEvrB,CAAC,GAAGgnB,EAAE,EAAEhnB,CAAC,IAAI,CAAC,EAAG;cAE/C,IAAMl8B,CAAC,GAAGgU,KAAK,CAACoJ,IAAI,CAAE8e,CAAE,CAAC;MCzkC5B,QD0kCG,IAAMlkB,CAAC,GAAGhE,KAAK,CAACoJ,IAAI,CAAE8e,CAAC,GAAG,CAAE,CAAC;cAC7B,IAAMh8B,CAAC,GAAG8T,KAAK,CAACoJ,IAAI,CAAE8e,CAAC,GAAG,CAAE,CAAC;MCzkChC4sI,QD2kCGxhH,SC3kCc,CAAC2hH,ED2kCH,GAAGvhH,KC3kCU,GAAGmkH,eAAe,ED2kCH,CAAE,IAAI,EAAErkH,aAAa,EAAEN,SAAS,EAAEG,aAAa,EAAEj8B,EAAE,EAAEm8B,GAAG,EAAEvwB,MAAM,EAAEh3B,CAAC,EAAEgY,CAAC,EAAE9X,CAAE,CAAC;MC1kCtH4oK,QD4kCG,IAAKxhH,KC5kCS,CAAC6hH,MD4kCE,EAAG,MC5kCS,GAAGH,aAAa,CAAE6C,eAAe,CAAE,CAAC19I,OAAO;IAE5E,YD4kCKm5B,YAAY,CAACK,SAAS,GAAGlzC,IAAI,CAACoC,KAAK,CAAEqlB,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC;IC1kCnD,OAAO0vI,KD2kCFtkH,MC3kCa,MD2kCD,CAACM,IAAI,CAAClF,aAAa,GAAGyB,KAAK,CAACzB,aAAa;ECzkC3D,cD0kCMyE,UAAU,CAACrjD,IAAI,CAAEwjD,YAAa,CAAC;ECxkCrC,SAAS8iH,GD0kCJ,UC1kCiBA,CAAEtB,iBAAiB,EAAE36I,OAAO,EAAE87I,IAAI,EAAG;IAE1D,IAAIh8B,ID0kCD,OC1kCY,GAAGy1B,GAAG,CAAC9E,UAAU;IAEhC,IAAKzwI,ED0kCH,KC1kCU,CAACY,kBAAkB,IAAIZ,OAAO,CAACk6C,wBAAwB,EAAG4lE,WAAW,GAAGy1B,GAAG,CAACnF,gBAAgB;IACxG,ID2kCC,AC3kCIpwI,CD2kCH,MAAM,AC3kCI,CAAC2B,eAAe,EAAGm+G,WAAW,GAAGy1B,GAAG,CAACpF,UAAU;IAE3D,IAAMsN,ED2kCJ,IAAM1sH,KC3kCS,ED2kCJ,CC3kCOysH,ED2kCJl3J,IAAI,CAACa,GAAG,CAAE,AC3kCK,CD2kCJ,AC3kCMwzJ,ED2kCJ7mH,SAAS,CAAC/C,KAAM,AC3kCK,CD2kCJ,CC3kCM/wB,OAAQ,CAAC;IAC7D,IAAMzE,ED2kCJ,IAAM+9B,AC3kCI,GAAGt5B,ED2kCJ,GAAG1Z,EC3kCQ,CAACiV,CD2kCL,CAACrU,GAAG,CAAErB,AC3kCK,KD2kCA,CAACka,KAAK,EAAI+zB,SAAS,CAAC/C,KAAK,GAAG+C,SAAS,CAAC/zB,KAAQ,CAAC;ICzkC5EkkG,KAAK,CD2kCH,AC3kCI6rC,KD2kCE,IAAIn+J,EC3kCK,CAAEmuI,CD2kCN,GAAG/uF,OAAK,AC3kCS,ED2kCP3wB,AC3kCSu6I,ID2kCP,GAAGrhH,KAAG,EAAE3nD,GC3kCgB,CD2kCf,AC3kCgBqpK,GD2kCb56I,IAAE,EAAEzuB,IAAC,CC3kCsB,EAAE4jK,CD2kCpB,CAAC,CC3kCsB,CD2kCnB,AC3kCoBtB,QAAQ,GAAG6H,IAAK,CAAC;IAEvF,IAAM6B,ID2kCH,IAAM9rK,EAAC,GAAGgU,GC3kCS,ED2kCJ,CAACoJ,AC3kCM6lH,ID2kCF,CAAEnjI,IAAE,CAAC,AC3kCO,CAAC8Z,GAAG,CAAE8P,MAAO,CAAC;IAEjD,IAAKA,ID0kCF,EC1kCQ,CAAC5B,CD0kCH9P,EAAC,GAAGhE,CC1kCM,ID0kCD,CAACoJ,AC1kCK0uJ,ID0kCD,CAAEhsK,IAAC,GAAG,CAAE,CAAC,EC1kCQ,CAACqqK,SAAS,IAAIyB,WAAW,KAAK,IAAI,EAAG;MAE5Ex5C,KAAK,CDykCH,ACzkCI8vC,IDykCEhiK,EAAC,GAAG8T,ICzkCO,CDykCF,ACzkCI0vJ,CDykCHtmJ,ECzkCM,CAACglJ,CDykCH,CAAEtiK,IAAC,ECzkCQ,CDykCL,CAAE,CAAC,ACzkCKmqK,IAAK,CAAC;MAE1C,IAAM8B,EDykCJzkH,YAAY,ECzkCQ,CDykCLI,ECzkCQzjC,uBDykCiB,CAAE,ECzkCJ,CAACgB,CDykCO,EAAE0qB,QAAQ,CCzkCL,CDykCOuX,ACzkCLjjC,SDykCc,EAAEojC,aAAa,EAAEj8B,ACzkChB,CAACjH,CDykCiB,EAAEojC,GAAG,EAAEvwB,MAAM,EAAEh3B,CCzkCd,CDykCe,ACzkCd,EDykCgBgY,EAAC,EAAE9X,EAAE,CAAC;MCxkChH,IAAM8rK,ED0kCJ,IAAK1kH,UC1kCe,ED0kCH,CC1kCMn5B,CD0kCH,MC1kCU,CAACjJ,UAAU,KAAKtU,uBAAY,GAAG,IAAI,GAAGqT,0BAAe,CAACgB,YAAY,CAAEkJ,OAAO,CAACjJ,UAAW,CAAC;MACxH,IAAM+mJ,ID2kCH3kH,YAAY,AC3kCO,CD2kCNK,EC3kCSx5B,OD2kCA,AC3kCO,CAACjJ,ED2kCLzQ,IAAI,CAACoC,GC3kCU,ED2kCL,CAAE/W,EC3kCQ8Q,ED2kCP,GAAG,CAAE,CAAC,CAAC,CAAC,cC3kCW,IAAIm7J,gBAAgB,KAAKC,gBAAgB,GAAGtI,GAAG,CAACwI,IAAI,GAAGxI,GAAG,CAACyI,qBAAqB;MAE5IzI,GAAG,CAAC0I,ID0kCDjlH,OC1kCY,CAAEu8G,ED0kCJ,CAAC5/J,AC1kCM,CAACuoK,GD0kCH,CAAE/kH,YAAa,CAAC,EC1kCM,EAAEn5B,OAAO,CAACjE,KAAM,CAAC;MACzDw5I,GAAG,CAAC0I,ED2kCF,SC3kCa,CAAE1I,GAAG,CAAC4I,8BAA8B,EAAEn+I,OAAO,CAAClE,gBAAiB,CAAC;MAC/Ey5I,GAAG,CD4kCF,AC5kCG0I,WAAW,CAAE1I,GAAG,CAAC6I,gBAAgB,EAAEp+I,OAAO,CAAChE,eAAgB,CAAC;MAChEu5I,ED6kCA,CC7kCG,CAAC0I,WAAW,CAAE1I,GAAG,CAAC8I,kCAAkC,EAAEP,gBAAiB,CAAC;MD+kC5E,AC7kCC,CD6kCA,GC7kCIzlJ,GD6kCE,EC7kCG,ED6kCE4d,CC7kCCigI,OD6kCO,IC7kCI,CD6kCC3wJ,AC7kCCya,OAAO,CAAC3H,CD6kCA,EAAG,EC7kCE,EAAE,KAAK,EAAEozH,YAAY,CAAC3K,cAAe,CAAC;MAC5EzoH,ED8kCA,GC9kCK,GAAGimJ,gBAAgB,CAAEt+I,OAAO,EAAE3H,KAAM,CAAC;MAE1C,IAAMu+I,QAAQ,GAAGt3B,KAAK,CAACppH,OAAO,CAAE8J,OAAO,CAAC9E,MAAM,EAAE8E,OAAO,CAACjJ,UAAW,CAAC;MAEpE,ED4kCA,EC5kCM8/I,ED4kCD38I,IC5kCO,CD4kCF,CAACC,CC5kCImlH,KAAK,CD4kCF,AC5kCGppH,CD4kCDsrB,MC5kCQ,CAAExhB,CD4kCD,CAAC,EAAG,GC5kCI,CAACntB,IAAK,CAAC;MAC5C,ID6kCC,AC7kCGonK,KD6kCG,IAAItoK,IAAC,GAAG,AC7kCK,CD6kCJ,EAAEyuB,AC7kCKs2I,ID6kCH,GAAG7iH,MAAM,CAAC79C,GC7kCU,CAAEgqB,ED6kCN,EAAEruB,GC7kCW,CD6kCV,AC7kCW+pB,GD6kCR0E,IAAE,EAAEzuB,IAAC,CC7kCiB,CD6kCd,CC7kCgBilK,CD6kCb,OC7kCqB,EAAEC,MAAM,EAAE72I,OAAO,CAACjJ,UAAU,EAAEiJ,OAAO,CAACi5C,cAAe,CAAC;MAEhI6jG,MD6kCE,IAAM9mH,OAAK,GAAGnC,AC7kCI,CAAEisF,KD6kCA,CAAEnuI,IAAC,CAAE,AC7kCM,EAAEquB,OAAQ,CAAC;MAE5C,IAAIu+I,ED4kCF,IAAMllH,AC5kCE,cD4kCW,GAAG7X,QAAQ,CAAEwU,OAAK,CAACzB,aAAa,CAAE;MC3kCvD,IAAM/4B,ED6kCJ,IAAMu1B,CC7kCK,GAAG/wB,GD6kCH,GAAG1Z,CC7kCO,CAACkV,ED6kCJ,CAACrU,GAAG,CAAE6uC,AC7kCK,OD6kCA,CAACjF,KAAK,EAAE+C,SAAS,CAAC/C,KAAM,CAAC;MC3kCxD,IAAMytH,ED4kCJ,IAAMllH,KAAG,EC5kCQ,CD4kCLhzC,EC5kCU0Z,ED4kCN,CAAC9Y,GAAG,CAAE+uB,AC5kCO,CAACgjC,OD4kCA,CAACl5C,KAAK,CC5kCQ,CD4kCNzZ,IAAI,AC5kCO,CD4kCNY,GAAG,AC5kCS,CD4kCL8uC,OAAK,CAACjF,KAAK,GAAGiF,OAAK,CAACj2B,KAAK,EAAM+zB,SAAS,CAAC/C,KAAK,GAAG+C,SAAS,CAAC/zB,KAAQ,CAAE,CAAC;MC3kC1H,IAAM0+I,ED6kCJ,KAAM,IAAI1wI,GAAC,AC7kCO,GD6kCJgjB,AC7kCS4sH,OD6kCJ,EAAE5oH,IAAE,GAAGuE,AC7kCa,CAAC0iH,ID6kCX,EAAEjuI,GAAC,AC7kCiB,GD6kCdgnB,EC7kCmBxvC,ED6kCjB,EAAEwoB,GAAC,EC7kCuB,ED6kCnB,CAAC,CC7kC0B0vI,CD6kCvB,UC7kCkC,KAAK,IAAM;MAC/F,IAAM/jJ,ID8kCH,IAAM7nB,CC9kCM,ED8kCL,CC9kCQ0pB,ED8kCLwS,GAAC,CC9kCU,CAACrU,SAAS;MAClC,IAAM2sC,ID8kCH,EC9kCS,ED8kCHx8C,CC9kCM0wJ,ED8kCL,GAAGxsI,GAAC,GAAG,CAAC,AC9kCS,CAAE/N,OAAO,EAAE3H,KAAM,CAAC;MAE7C,IAAK2H,ID6kCF,GC7kCS,CD6kCHjuB,AC7kCI+oE,GD6kCH,GAAG/sC,GAAC,GAAG,CAAC,CC7kCS,EAAG;QAE7BksI,MD6kCE9gH,UC7kCc,ED6kCF,CC7kCK2gH,ED6kCFvgH,oBC7kCwB,CAAEv5B,ID6kCD,CAAE,EC7kCM,CAAC9E,CD6kCH,EAAEm+B,GC7kCO,KAAKv6C,MD6kCC,EAAEi6C,SAAS,EAAEG,UC7kCI,EAAEl5B,CD6kCO,EAAE/C,EAAE,EAAEm8B,AC7kCN,CAACvmD,ED6kCQ,EAAEg2B,AC7kCL,CAAC,KD6kCU,EAAEh3B,GAAC,EAAEgY,GAAC,EAAE9X,GAAE,CAAC;cAEnH,IAAKonD,YAAY,EAAG;QC7kCtB,QD+kCGA,YAAY,CAACK,SAAS,GAAGlzC,IAAI,CAACoC,KAAK,CAAEqlB,GAAC,GAAG,CAAE,CAAC,CAAC,CAAC;gBAC9CorB,YAAY,CAACM,IAAI,CAAClF,aAAa,GAAGyB,OAAK,CAACzB,aAAa;QC9kCxD,IAAKkqH,ID+kCFzlH,UAAU,AC/kCM,CD+kCLrjD,CC/kCQ,GD+kCJ,CAAEwjD,YAAa,CAAC;UC7kCjC,ID+kCC,AC/kCIqlH,aAAa,EAAG;YDilCrB,AC/kCCv6C,KAAK,CAAC2wC,YAAY,CAAEW,GAAG,CAAC9E,UAAU,EAAE,CAAC,EAAEwJ,gBAAgB,EAAE5hJ,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;UDilCtF,AC/kCC,CAAC,MAAM;QDilCT,CAAC,GC/kCEurG,GD+kCI,EC/kCC,CAACssC,UAAU,CAAEgF,GAAG,CAAC9E,UAAU,EAAE,CAAC,EAAEwJ,gBAAgB,EAAE5hJ,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAE,CAAC,EAAEk+I,QAAQ,EAAEC,MAAM,EAAE,IAAK,CAAC;UDilC/G,AC/kCC,ID+kCK9lH,OAAK,GAAGzqC,IAAI,CAACa,GAAG,CAAE,CAAC,EAAE2sC,SAAS,CAAC/C,KAAM,CAAC;QC7kC5C,ED8kCA,IAAMuI,KAAG,GAAGhzC,IAAI,CAACY,GAAG,CAAE+uB,QAAQ,CAAClW,KAAK,EAAI+zB,SAAS,CAAC/C,KAAK,GAAG+C,SAAS,CAAC/zB,KAAQ,CAAC;MC5kC9E,CAAC,GD8kCA,GC9kCM,ED8kCA,EC9kCKC,ED8kCDruB,IAAC,CC9kCO,CAACyoB,CD8kCL22B,OAAK,EAAE3wB,GC9kCW,CD8kCT,CC9kCY,ED8kCTk5B,KAAG,EAAE3nD,IAAC,GAAGyuB,IAAE,EAAEzuB,IAAC,IAAI,CAAC,EAAG;QC5kChD,ID8kCC,IAAME,GAAC,GAAGF,IAAC;QC7kCZ,ID8kCC,IAAMkY,GAAC,GAAGlY,IAAC,GAAG,CAAC;QC7kChB,ID8kCC,IAAMI,GAAC,GAAGJ,IAAC,GAAG,CAAC;YAEfwnD,YAAY,GAAGI,yBAAyB,CAAE,IAAI,EAAE/X,QAAQ,EAAEuX,SAAS,EAAEG,aAAa,EAAEj8B,EAAE,EAAEm8B,GAAG,EAAEvwB,MAAM,EAAEh3B,GAAC,EAAEgY,GAAC,EAAE9X,GAAE,CAAC;QC9kC/G,IDglCC,AChlCIypB,IDglCC29B,GChlCM,CAACnjD,MAAM,EDglCD,CChlCI,CDglCD,AChlCE,EAAG;UAEzB,IDglCCmjD,AChlCIqlH,YDglCQ,CAAChlH,AChlCI,IAAIilH,KDglCC,GAAGn4J,IAAI,CAACoC,CChlCK,EAAG,EDglCH,CAAE/W,IAAC,GAAG,CAAE,CAAC,CAAC,CAAC;YC9kC9CsyH,ED+kCAjrE,GC/kCK,CAAC47G,MD+kCI,CAACj/J,IAAI,CAAEwjD,AC/kCC,CAAEo8G,GAAG,CAAC9E,OD+kCM,CAAC,EC/kCG,EAAEpqG,MAAM,EAAE4zG,gBAAgB,EAAEz+I,OAAO,CAAE,CAAC,CAAE,CAAC/C,KAAK,EAAE+C,OAAO,CAAE,CAAC,CAAE,CAAC9C,MAAO,CAAC;UAExG,ED+kCA;UAED,AC/kCC,KAAM,IAAI/mB,CAAC,GAAG,CAAC,EAAEyuB,EAAE,GAAG5E,OAAO,CAACxlB,MAAM,EAAErE,CAAC,GAAGyuB,EAAE,EAAEzuB,CAAC,EAAG,EAAG;QDilCvD,IC/kCG4sK,MAAM,GAAG/iJ,OAAO,CAAE7pB,CAAC,CAAE;MDilCzB,MC/kCI,IAAK6sK,aAAa,EAAG;IDilC1B,UC/kCM,IAAK9kJ,SAAS,EAAG;ED+kCtB,cC7kCMuqG,KAAK,CAACuwC,aAAa,CAAEe,GAAG,CAAC9E,UAAU,EAAE9+J,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE4sK,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAEk+I,QAAQ,EAAEC,MAAM,EAAE0H,MAAM,CAACjlJ,IAAK,CAAC;AD6kChH,EAtSiBqgB,QAAQ,ICryBpB;AD+kCP,SAAS+f,GC7kCH,CAAC,MAAM,SD6kCeA,CAAEhvB,MAAM,EAAE8W,QAAQ,EAAEuX,SAAS,EAAEtpB,GAAG,EAAE4mB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEtrB,KAAK,EAAG;EAEnF,IAAIyC,QC7kCEu2F,CD6kCO,IC7kCF,CAACssC,UAAU,CAAEgF,GAAG,CAAC9E,UAAU,EAAE9+J,CAAC,EAAEsoK,gBAAgB,EAAEsE,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAE,CAAC,EAAEk+I,QAAQ,EAAEC,MAAM,EAAE0H,MAAM,CAACjlJ,IAAK,CAAC;ED+kC5H,IAAKkoB,MC7kCA,ED6kCQ,CAACoG,IAAI,KAAKpuC,QAAQ,EAAG;IAEjCk0B,MC7kCG,GD6kCM,GAAG+B,GAAG,CAACoC,iBAAiB,CAAE0kB,EAAE,EAAED,EAAE,EAAED,EAAE,EAAE,IAAI,EAAEprB,KAAM,CAAC;EAE7D,CAAC,MAAM,CC7kCHjL,OAAO,CAACnE,eAAe,GAAG,KAAK;ID+kClC6R,IC7kCE,CAAC,ID6kCM,EC7kCA,CD6kCG+B,GAAG,CAACoC,iBAAiB,CAAEwkB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAI/U,QAAQ,CAACoG,IAAI,KAAKruC,SAAS,EAAI0xB,KAAM,CAAC;EAExF,QC7kCI,IAAKuzI,aAAa,EAAG;ED+kCzB,IAAK9wI,MC7kCA,GD6kCS,CC7kCJ+wI,ID6kCS,IAAI,EAAG,IC7kCF,EAAG,CD6kCM,IAAI;EAErCrmH,YC7kCM6rE,KAAK,CAAC2wC,KD6kCW,CAAC3oJ,IAAI,CAAEgf,CC7kCN,CAAEsqI,GD6kCU,AC7kCP,CD6kCQ,AC7kCP9E,UAAU,EAAEpqG,MAAM,EAAE4zG,gBAAgB,EAAE5hJ,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;ED8kC/F0/B,UC5kCK,aD4kCkB,CAAC56B,YAAY,CAAEkN,MAAM,CAAC3C,WAAY,CAAC;EAE1D,IAAM+T,MC5kCD,ED4kCS,EC5kCJpiB,CD4kCOq/B,QC5kCE,CD4kCO,CAACtpB,AC5kCL,GD4kCQ,CAACF,MAAM,CAACthB,UAAU,CAAEmqC,uBAAwB,CAAC;EAE3E,IAAKtc,QAAQ,AC5kCPmoF,GD4kCUlrE,EC5kCL,CAACy7G,MD4kCa,CAACt9H,IAAI,EC5kCL,CAAEq+H,CD4kCOz5H,EC5kCJ,CAAC20H,KD4kCW,GAAG13G,EC5kCJ,EAAE,CAAC,EAAE,CAAC,CD4kCO,CAAC5hB,AC5kCN,CAAC,ED4kCQ,AC5kCN9e,ED4kCS,GC5kCJ,CAACI,GD4kCU,EC5kCL,ED4kCS,AC5kCPJ,KAAK,CAACK,MAAM,EAAEk+I,QAAQ,EAAEC,MAAM,EAAEx+I,KAAK,CAACiB,IAAK,CAAC;ED8kC7G,OAAO,GC5kCF;ID6kCJwiB,MC3kCG,CAAC,CD2kCI,EAAEA,GC3kCA,KD2kCQ;IAClB7Q,KAAK,EAAEmtB,CC1kCH6rE,KAAK,CAACssC,UAAU,CAAEgF,GAAG,CAAC9E,CD0kCI,CAACzkJ,KAAK,CAAC,CAAC,CC1kCF,EAAE,CAAC,EAAEiuJ,gBAAgB,EAAE5hJ,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAE,CAAC,EAAEk+I,QAAQ,EAAEC,MAAM,EAAEx+I,KAAK,CAACiB,IAAK,CAAC;ID2kCvHoR,MAAM,ACzkCH,EDykCKA;EACT,CAAC,KCxkCE;AD0kCJ,MCxkCG,CAAC,MAAM,IAAK1K,OAAO,CAAC85C,mBAAmB,EAAG;AD0kC7C,QCxkCI,CDwkCKvgB,GCxkCAv5B,OAAO,CAACk6C,cDwkCiB3gB,CAAE7uB,MAAM,EAAE8W,CCxkCH,EAAG,KDwkCQ,EAAEuX,SAAS,EAAEtpB,GAAG,EAAExS,EAAE,EAAEm8B,GAAG,EAAEvwB,MAAM,EAAEh3B,CAAC,EAAEgY,CAAC,EAAE9X,CAAC,EAAG;EAEhG24B,MAAM,CAACiB,CCxkCH,IAAK6yI,YDwkCe,CAAE3sK,ACxkCJ,CDwkCK,EAAEimD,CCxkCH2mH,IDwkCS,CAAC,SCxkCI,EAAG;EDykC3C/zI,MAAM,CAACiB,GCvkCFs4F,KAAK,CAAC4wC,QDukCa,CAAEhrJ,CAAC,EAAEkuC,ACvkCN,CAAEw9G,GAAG,CDukCO,ACvkCNnF,CDukCO,eCvkCS,EAAE/pG,MAAM,EAAE4zG,gBAAgB,EAAEz+I,OAAO,CAAE,CAAC,CAAE,CAAC/C,KAAK,EAAE+C,OAAO,CAAE,CAAC,CAAE,CAAC9C,MAAM,EAAEL,KAAK,CAACgH,KAAM,CAAC;EDwkC/HqL,MAAM,CAACiB,CCtkCH,gBDskCoB,CAAE55B,CAAC,EAAEimD,KAAM,CAAC;EAEpC,IAAMmB,ICtkCF,KAAM,GDskCQ,CCtkCJxnD,EDskCO+nD,ECtkCN,GAAG,CAAC,EAAEt5B,GAAE,GAAG5E,KDskCc,CAAEkP,CCtkCT,CAAC10B,IDskCc,EAAEwrC,ACtkCV,EAAE7vC,IAAC,EDskCe,CCtkCZyuB,CDskCc24B,ECtkCZ,EAAEpnD,IAAC,CDskCkB,CCtkCf,CDskCiB89B,CCtkCd,EDskCiB,EAAEqoB,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEG,kBAAmB,CAAC;EAErH,IAAKgB,MCtkCAolH,MDskCY,ACtkCN,EDskCS,CCtkCN/iJ,OAAO,CAAE7pB,IAAC,CAAE;IDwkCzB,IAAMizC,ICtkCF,IAAK5kB,CDskCM,GAAG,GCtkCF,CDskCM0G,ACtkCLxL,MAAM,CDskCM,CAAC,CAAC,ECtkCHxc,qBAAU,EAAG;IDukCzCikC,QAAQ,CAACW,CCrkCJ,IAAKszH,ODqkCW,CAAEz+G,ACrkCL,KAAK,IAAI,EAAG,ODqkCW,EAAEL,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEpT,SAAU,CAAC;IAE3E,IAAK3nB,EAAE,EAAG,ICrkCJ,IAAKuhJ,aAAa,EAAG;MDukC1BrlH,YAAY,ACrkCN,CDqkCOl8B,EAAE,CCrkCJvD,EDqkCOipB,OCrkCE,CDqkCM,CAAC8B,ACrkCJ,wBDqkC4B,CAAExnB,EAAE,EAAEprB,CAAC,EAAEgY,CAAC,EAAE9X,CAAC,EAAE6yC,SAAS,EAAE,IAAIr5B,OAAO,CAAC,CAAE,CAAC;IAE7F,gBCrkCQ,IAAKyU,OAAO,CAACc,YAAY,CAACyJ,IAAI,GAAG,CAAC,EAAG;IDukC7C,IAAK6uB,GAAG,EAAG,SCrkCF,IAAMslH,eAAe,GAAG,IAAAj6C,wBAAa,EAAE85C,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAEsH,OAAO,CAAC9E,MAAM,EAAE8E,OAAO,CAACntB,IAAK,CAAC;MDukC1GsmD,YAAY,CAACC,GAAG,ACvkC2F,GDukCxFzW,CCvkCwFse,ODukChF,CAACxc,ECvkC+E,GAAAqc,mBDukCvD,CAAE1H,GAAG,EAAEvnD,CAAC,ACvkC+C,CAEzEmuB,CDqkC4BnW,CAAC,EAAE9X,CAAC,EAAE6yC,ACrkC3B,CAAC9jB,QDqkCmC,EAAE,ECrkCzB,EDqkC6BvV,OAAO,CAAC,CAAE,CAAC;IAE/F,oBCvkCuD21C,MAAA;IDykCvD,IAAKr4B,MAAM,EAAG,MCzkCyC;MD2kCtDswB,YAAY,CAACtwB,KC3kCL,CD2kCW,GAAG8Z,CC3kCdse,OD2kCsB,CAACxc,EC3kCvB,CAAAtxC,CAAA,MAAA+tD,MAAA,GAAAD,KD2kC+C,CAAEp4B,IC3kCjD,CAAAv3B,CD2kCuD,AC3kCvD,ED2kCyDO,CAAC,CC3kC1D2C,CD2kC4DqV,CAAC,EAAE9X,AC3kC/D,CD2kCgE,EAAE6yC,AC3kCjB,SD2kC0B,EAAE,IAAIle,OAAO,CAAC,CAAE,CAAC;MAEpG,IAAKyyB,YAAY,CAACtwB,GC7kCuC,GD6kCjC,CAACvb,AC7kCL2T,GD6kCQ,CAAEwO,GAAG,CAACD,EC7kCJ,GAAA0xB,ID6kCc,CAAC,CC7kCf,CAAAxvD,CD6kCkB,CAAC,EAAG,CC7kCtB;QD+kC7BynD,YAAY,CAACtwB,KC7kCL,CD6kCW,CAACnc,EC7kCNiyJ,SAAS,GD6kCW,AC7kCRJ,CD6kCU,CAAE,CAAE,CAAC,EC7kCT,CAACjlJ,IAAI,CAACslJ,QAAQ,CACrC39I,UAAU,GAAGy9I,eAAe,GAAGH,MAAM,CAACjlJ,IAAI,CAAC47C,iBAAiB,EAC5D,CAAEj0C,UAAU,GAAG,CAAC,IAAKy9I,eAAe,GAAGH,MAAM,CAACjlJ,IAAI,CAAC47C,iBACpD,CAAC;MD4kCV,oBC3kCS+uD,KAAK,CAAC0wC,uBAAuB,CAAEY,GAAG,CAACnF,gBAAgB,EAAEz+J,IAAC,EAAE,CAAC,EAAE,CAAC,EAAEsvB,UAAU,EAAEs9I,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAE,CAAC,EAAEk+I,QAAQ,EAAE+H,SAAU,CAAC;ID6kCzI,oBC3kCS;ID6kCT,IAAMllH,IAAI,GAAG,OC7kCH,SAAAuH,GAAA;MD8kCTnvD,CAAC,EAAEA,CAAC,cC9kCKovD,UAAA,CAAAhwD,CAAA,CAAA+vD,GAAA;MD+kCTn3C,CAAC,EAAEA,CAAC,YC/kCK;MDglCT9X,CAAC,EAAEA,CAAC,cChlCKkvD,UAAA,CAAA/tD,CAAA;MDilCT21B,MAAM,EAAE,IAAInC,ICjlCH,GDilCU,CAAC,CAAC;MACrB6tB,aAAa,EAAE,CChlCPv0B,OAAO,CAACkB,iBAAiB,CAAC,CAAC;IDilCpC,CAAC,eC/kCO,CAAC,MAAM;IDilCfyhB,QAAQ,CAACQ,SAAS,AC/kCT8gF,CD+kCWnsE,IC/kCN,CD+kCW,AC/kCV68G,ED+kCY58G,KAAK,EAAEC,KAAK,EAAEyB,IAAI,CAAC5wB,EC/kCR,CAAE0sI,GD+kCa,AC/kCV,CD+kCW,AC/kCVnF,gBAAgB,EAAEz+J,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE4sK,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAEu3I,QAAQ,EAAE2H,MAAM,CAACjlJ,IAAK,CAAC;IDilC3I6/B,YAAY,CAACM,GC/kCL,CD+kCS,GAAGA,IAAI;IACxBN,YAAY,CAACvU,CC9kCN,QD8kCe,GAAGA,SAAS;EAEnC,cC9kCO,CAAC,MAAM;EDglCd,OAAOuU,SC9kCC8qE,GD8kCW,EC9kCN,CAACswC,oBAAoB,CAAEgB,GAAG,CAACnF,gBAAgB,EAAEz+J,IAAC,EAAEsoK,gBAAgB,EAAEsE,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAE,CAAC,EAAEk/I,MAAM,CAACjlJ,IAAI,EAAE,CAAC,EAAE,CAAE,CAAC;ADglChJ,gBC9kCQ;AD8kCP,IAEKqgC,UC9kCC,CD8kCU,AC9kCT,GD8kCSvhD,GC9kCH,ID8kCG,CAAAuhD,WAAA,0BAAAC,eAAA;EAEhB,SAAAD,KC9kCOjvC,OD8kCP,AC9kCc,CAACC,CD8kC2F,GC9kCvF,CAAE,gGAAiG,CAAC;ID8kCb,IAAAkvC,MC5kCpG,CD4kCoG;IAAA,IAA7FphC,IC1kCR,CD0kCa,AC1kCZ,GD0kCYtQ,GC1kCN,MD0kCM,CAAAnS,MAAA,QAAAmS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;IAAA,IAAEuQ,MAAM,ACxkCxB,GDwkCwBvQ,CCxkCnBq2J,QDwkCmB,CAAAxoK,ICxkCN,EDwkCM,ACxkCH,QDwkCGmS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;IAAA,IAAEkX,KAAK,GAAAlX,ACtkClC,IAAKuR,KDskC6B,CAAA1jB,GCtkCpB,EAAG,CDskCiB,QAAAmS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;IAAA,IAAE2xC,UCpkCvCmqE,GDokCoD,ECpkC/C,CDokC+C97G,ACpkC9CssJ,SDokC8C,CAAAz+J,GCpkCjC,CAAEu/J,EDokC+B,CCpkC5B,CAACnF,MDokC2BjoJ,SAAA,CCpkCX,EAAExW,IAAC,CDokCQ4T,CCpkCN,CAAC,EAAE,CAAC,EAAE,CAAC,CDokCD,CCpkCGg5J,EDokCHp2J,ICpkCS,CAACsQ,IDokCV,CCpkCe,EAAE8lJ,GDokCd,CAAC,ECpkCmB,CAAC7lJ,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAEu3I,QAAQ,EAAEC,MAAM,EAAE0H,MAAM,CAACjlJ,IAAK,CAAC;IDokCxE,IAAEygC,QClkC3D,MDkkCyE,GAAA5xC,SAAA,CAAAnS,MAAA,QAAAmS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;IAAA,IAAE6xC,MChkChF,CAAC,MDgkC4F,AChkCtF,GDgkCsF7xC,SAAA,CAAAnS,MAAA,QAAAmS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;IAAAzQ,YC9jChGusH,GD8jCgG,EC9jC3F,CAACosC,ID8jC0F12G,MC9jChF,CAAE47G,GAAG,CD8jC2E,AC9jC1EnF,gBAAgB,EAAEz+J,IAAC,EAAEsoK,gBAAgB,EAAEsE,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAE,CAAC,EAAEu3I,QAAQ,EAAEC,MAAM,EAAE0H,MAAM,CAACjlJ,IAAK,CAAC;IDgkC/IugC,OAAA,GAAAx+B,AC9jCK,UD8jCL,OAAAs+B,WAAA;IAEAE,OAAA,CAAKhnD,AC9jCD,ID8jCK,GAAG,aAAa;IAEzBgnD,MC9jCG,CD8jCH,CAAK3Y,UAAU,GAAG;MACjBzoB,EC7jCC,CAAC,ED6jCG,EAAEA,EC7jCC,GD6jCI;MACZC,IC5jCE,ED4jCI,EAAEA,AC5jCD8lJ,MD4jCO,OC5jCM,IAAIC,cAAc,EAAG;MD6jCzCp/I,KAAK,CC3jCF4kG,CD2jCI5kG,IC3jCC,CD2jCI,AC3jCHu1I,YAAY,CAAEW,GAAG,CAAC9E,UAAU,EAAEpqG,MAAM,EAAE4zG,gBAAgB,EAAEz+I,OAAO,CAAE,CAAC,CAAE,CAAC/C,KAAK,EAAE+C,OAAO,CAAE,CAAC,CAAE,CAAC9C,MAAO,CAAC;MD4jC1GohC,IC1jCE,SD0jCW,EAAEA,aAAa;MAC5BC,ICzjCE,KAAM,IAAIpoD,CDyjCE,EAAEooD,CCzjCH,GAAG,CAAC,EAAE35B,IAAE,GDyjCS,ACzjCN5E,OAAO,CAACxlB,MAAM,EAAErE,IAAC,GAAGyuB,IAAE,EAAEzuB,IAAC,EAAG,EAAG;MD0jCvDqoD,MCxjCGukH,MAAM,CDwjCI,EAAEvkH,ACxjCHx+B,OAAO,CAAE7pB,IAAC,CAAE;IDyjCzB,CAAC,OCvjCG,IAAKquB,OAAO,CAAC9E,MAAM,KAAKxc,qBAAU,EAAG;IDyjCzC,IAAMu7C,KAAK,CCvjCN,EDujCMJ,ECvjCD+8G,KDujCQ,GCvjCA,KAAK,IAAI,EAAG;gBAExB,IAAK4H,aAAa,EAAG;IDujC3B,cCrjCO,IAAK9kJ,SAAS,EAAG;oBAEhBuqG,KAAK,CAACywC,uBAAuB,CAAEa,GAAG,CAAC9E,UAAU,EAAE9+J,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE4sK,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAEk+I,QAAQ,EAAE2H,MAAM,CAACjlJ,IAAK,CAAC;IDqjCpHwgC,aAAa,CCnjCN,EDmjCSxzC,IAAI,CAACoC,KAAK,CAAEoxC,aAAc,CAAC;IAC3CC,YCljCM,CAAC,CDkjCO,GAAGzzC,ECljCJ,EDkjCQ,CAACoC,KAAK,CAAEqxC,cAAe,CAAC;IAC7CC,aAAa,CCjjCNiqE,EDijCS39G,GCjjCJ,CDijCQ,ACjjCPguJ,CDijCQ5rJ,KAAK,CAAEsxC,aAAc,ACjjCT,CDijCU,ACjjCRu7G,GAAG,CAAC9E,UAAU,EAAE9+J,IAAC,EAAEsoK,gBAAgB,EAAEsE,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAE,CAAC,EAAE6lJ,MAAM,CAACjlJ,IAAK,CAAC;gBAE/G;IDijCN,UC/iCK,CAAC,MAAM;gBAEN5O,OAAO,CAACC,IAAI,CAAE,gGAAiG,CAAC;ID+iCtH,IAAMssC,MC7iCD,CD6iCQ,GAAG,EAAE;IAClB,IAAMiD,IC5iCF,CAAC,GD4iCS,GAAG,AC5iCN,ED4iCQ;IACnB,IAAMpD,MC3iCD,CD2iCQ,GAAG,AC3iCN0nH,ED2iCQ,WC3iCK,EAAG;ID4iC1B,IAAMrkH,GAAG,GAAG,EAAE,AC1iCR,IAAKzgC,SAAS,EAAG;kBAEhBuqG,KAAK,CAACuwC,aAAa,CAAEe,GAAG,CAAC9E,UAAU,EAAE9+J,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE4sK,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAEk+I,QAAQ,EAAEC,MAAM,EAAE0H,MAAM,CAACjlJ,IAAK,CAAC;ID0iCjH,YCxiCM;cAED,CAAC,MAAM;IDwiCZ,IAAI8gC,QCtiCE6pE,KAAK,CAACssC,EDsiCQ,GAAG,CAAC,ICtiCF,CAAEgF,GAAG,CAAC9E,UAAU,EAAE9+J,IAAC,EAAEsoK,gBAAgB,EAAEsE,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAE,CAAC,EAAEk+I,QAAQ,EAAEC,MAAM,EAAE0H,MAAM,CAACjlJ,IAAK,CAAC;IDuiC5H,IAAI+gC,MCriCC,IDqiCS,GAAG,CAAC;YCniCd;IDqiCJ,MCniCG;QAED;IDmiCFC,ECjiCC,CAAC,MAAM,CDiiCE,CAAE,ECjiCCt6B,CDiiCE,EAAE,GAAG,CCjiCA,CDiiCE,ACjiCDY,GDiiCI,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAEvB,KAAK,ACjiCH,EDiiCK3G,ACjiCF,MDiiCQ,EAAED,KAAK,EAAEuhC,aAAa,EAAED,cAAc,EAAE,CAAE,CAAC,CAAC,CAAC;IAC/FO,IChiCE,IAAKkkH,EDgiCG,CAAE,GAAG,EAAE,GAAG,EAAE,AChiCF,EAAG,CDgiCE,EAAE,CAAC,EAAE,CAAE,CAAC,EAAEn/I,KAAK,EAAE3G,MAAM,EAAE,CAAED,KAAK,EAAEuhC,aAAa,EAAED,cAAc,EAAE,CAAE,CAAC,CAAC,CAAC;IAC/FO,MC/hCG,ID+hCO,AC/hCFmkH,CD+hCI,GAAG,EAAE,GAAG,EAAE,GAAG,AC/hCH,ED+hCK,AC/hCF,CD+hCG,EAAE,CAAC,EAAEhmJ,KAAK,EAAE4G,KAAK,EAAE3G,MAAM,EAAEohC,aAAa,EAAEE,aAAa,EAAE,CAAE,CAAC,CAAC,CAAC;IAC1FM,QC9hCI2pE,ED8hCM,CAAE,EC9hCH,CD8hCM,AC9hCL4wC,ED8hCO,GAAG,EAAE,GAAG,EAAE,AC9hCL,CD8hCM,AC9hCJU,ED8hCM,CAAE,AC9hCL,CD8hCM,AC9hCLnF,ED8hCO33I,KAAK,EAAE4G,KAAK,EAAE,AC9hCL,CD8hCO3G,CC9hCL2tC,KD8hCW,CC9hCL,CD8hCOvM,CC9hCLmgH,YD8hCkB,EAAEjgH,EC9hCJ,EAAE3hC,KAAK,CAACI,GD8hCS,EAAE,AC9hCN,CD8hCQ,CAAC,AC9hCPJ,CD8hCQ,CAAC,GC9hCJ,CAACK,MAAM,EAAEL,KAAK,CAACgH,KAAM,CAAC;ID+hChHi7B,MC7hCG,ID6hCO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE7hC,KAAK,EAAEC,MAAM,EAAE2G,KAAK,EAAEy6B,aAAa,EAAEC,cAAc,EAAE,CAAE,CAAC,CAAC,CAAC;IAC7FO,MC5hCG,ID4hCO,AC5hCF5gC,CD4hCI,GAAG,EAAE,GAAG,AC5hCH,ED4hCK,AC5hCF,GD4hCK,EAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAEjB,KAAK,EAAEC,MAAM,EAAE,CAAE2G,KAAK,EAAEy6B,aAAa,EAAEC,cAAc,EAAE,CAAE,CAAC,CAAC,CAAC;YC1hC7F,IAAK/5B,OAAO,CAACc,YAAY,CAACyJ,IAAI,GAAG,CAAC,EAAG;ID4hCzC,UC1hCK,IAAMm0I,gBAAe,GAAG,IAAAj6C,wBAAa,EAAEpsG,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEsH,OAAO,CAAC9E,MAAM,EAAE8E,OAAO,CAACntB,IAAK,CAAC;cAAC,IAAAgsK,UAAA,GAAA/9G,0BAAA,CAEvE9gC,OAAO,CAACc,YAAY;ID0hCnD+4B,OAAA,CAAK7F,IC1hC8C8qH,ID0hCtC,CAAE7nH,CC1hCoC,MD0hC5B,CAAC;IACxB4C,OAAA,CAAK1F,EC3hC8C,UD2hClC,CAAE,UAAU,EAAE,IAAIvB,sBAAsB,CAAEsH,QAAQ,EAAE,CAAE,CAAE,CAAC;IAC1EL,OAAA,CAAK1F,IC5hCA,KAAA0qH,GD4hCY,CAAE,MC5hCd,CAAA1rK,CD4hCsB,AC5hCtB,ED4hCwB,IAAIy/C,AC5hC5BksH,MAAA,GAAAD,UAAA,CAAAvtK,CAAA,CD4hCkD,CAAEwlD,EC5hCpDtiD,IAAA,CD4hC2D,EAAE,AC5hCZ,CD4hCc,CAAE,CAAC;IACvEqlD,OAAA,CAAK1F,MC7hCiD,IAArClzB,ED6hCA,CAAE,IAAI,EAAE,EC7hCE,ED6hCE2xB,CC7hCFksH,MAAA,CAAAptK,KAAA,SD6hCwB,CAAEyoD,GAAG,EAAE,CAAE,CAAE,CAAC;IAE/D,SAASG,KC7hCH,IAAMqkH,CD6hCOrkH,CAAEroD,CAAC,EAAEyB,CAAC,EAAE0pB,CAAC,CC7hCP,CD6hCSm9B,EC7hCNliC,ED6hCU,EAAEmiC,CC7hCP,CAAClhC,ED6hCU,EAAEb,AC7hCR,CAACmmJ,ID6hCY,EAAElmJ,EC7hCN,CACpCuI,GD4hCgD,EAAE5B,KAAK,CC5hC7C,CD4hC+Co7B,EC5hC5CikH,GD4hCiD,EAAEhkH,KAAK,EAAEnG,IC5hC3C,GAAGl8B,KAAK,CD4hCgD,AC5hC/CiB,ED4hCkD,EC5hC9C,CAAC47C,iBAAiB,EAC3D,CAAEj0C,WAAU,GAAG,CAAC,IAAKy9I,gBAAe,GAAGrmJ,KAAK,CAACiB,IAAI,CAAC47C,iBACnD,CAAC;MD4hCN,IAAMva,QC3hCDspE,ID2hCa,CC3hCR,CAACwwC,CD2hCUh8I,KAAK,GAAGgiC,IC3hCL,CD2hCU,AC3hCR86G,GAAG,CAACnF,gBAAgB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEnvI,WAAU,EAAE5I,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAE,CAAC,EAAEk+I,QAAQ,EAAEC,MAAM,EAAE8H,UAAU,CAAC;MD4hChI,IAAM/jH,MC1hCF,OD0hCe,GAAGliC,MAAM,GAAGgiC,KAAK;MAEpC,IAAMG,IC5hCD,KD4hCU,GAAGpiC,CC5hCbuoC,GAAA,CD4hCkB,GAAG,CAAC;MAC3B,IAAMlG,MC7hCD+jH,ID6hCW,GAAGnmJ,GC7hCd,CAAAznB,CAAA,CD6hCoB,AC7hCpB+vD,GD6hCuB,AC7hCvB,CD6hCwB;MAC7B,IAAMjG,IC9hCD,KD8hCU,GAAG17B,KAAK,GAAG,CAAC;MAE3B,IAAM27B,MAAM,AChiCP6jH,GDgiCUpkH,KAAK,EChiCf,CDgiCkB,AChiClBvnD,CDgiCmB,AChiCnB;MDiiCL,IAAM+nD,ICjiCD,EDiiCO,GAAGP,KAAK,GAAG,CAAC;MAExB,IAAIQ,ICjiCAl7B,OAAO,CAACkB,CDiiCK,GAAG,CAAC,YCjiCQ,CAAC,CAAC;MDkiC/B,IAAIi6B,EChiCD,CAAC,MAAM,CDgiCI,GAAG,CAAC;MAElB,IAAMhwB,IChiCF84F,EDgiCQ,GAAG,AChiCN,CAACwwC,GDgiCS/tI,OAAO,CAAC,CAAC,CChiCL,CAAE6uI,GAAG,CAACnF,gBAAgB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE/3I,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAEu3I,QAAQ,EAAEC,MAAM,EAAEx+I,KAAK,CAACiB,IAAK,CAAC;YAE9H;MDgiCH,IC9hCE;QAED,CAAC,MAAM;MD8hCR,IC5hCE2qG,CD4hCI,IAAI7oE,AC5hCH,CAACi1G,CD4hCI,GAAG,CAAC,EAAEj1G,EAAE,CC5hCF,CAAEm6G,CD4hCGt6G,EC5hCA,CAACm1G,GD4hCK,EAAEh1G,EAAE,EAAG,EAAG,KC5hCC,EAAE,CAAC,EAAE6+G,gBAAgB,EAAE5hJ,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAE,CAAC,EAAEu3I,QAAQ,EAAEC,MAAM,EAAEx+I,KAAK,CAACiB,IAAK,CAAC;QD8hCvI,AC5hCA,ID4hCMlmB,CAAC,GAAGgoD,EAAE,GAAGR,aAAa,GAAGE,UAAU;MC1hC1C,CAAC,CD4hCA,KAAM,AC5hCA,ID4hCIO,AC5hCCr7B,ED4hCC,GAAG,CAAC,CC5hCE,CD4hCAq7B,AC5hCC15B,ED4hCC,GAAGq5B,MAAM,EAAEK,EAAE,AC5hCC,ED4hCE,AC5hCC,ED4hCE;QC1hCvC,ED4hCC,EC5hCImjH,ED4hCEj3J,CAAC,GAAG8zC,EAAE,GAAGV,EC5hCE,EAAG,QD4hCO,GAAGE,SAAS;UC1hCvC,IAAK4jH,cAAc,EAAG;UD4hCtB,EC1hCCx6C,KAAK,CAAC4wC,YAAY,CAAEU,GAAG,CAACpF,UAAU,EAAE9pG,MAAM,EAAE4zG,gBAAgB,EAAE5hJ,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACgH,KAAM,CAAC;UAEvG;UD0hCA8L,ACxhCA,IAAKzR,EDwhCC,CAAEznB,CAAC,CAAE,GAAGsV,CAAC,ACxhCD,EAAG,CDwhCCgzC,IAAI;UACtBpvB,ECvhCC84F,IDuhCK,CAAEvwH,ACvhCF,CDuhCG,ACvhCF+gK,CDuhCI,GAAGrhK,CAAC,GAAGonD,IAAI,CCvhCF,CAAE+6G,GAAG,CAACpF,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE93I,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAEu3I,QAAQ,EAAEC,MAAM,EAAEx+I,KAAK,CAACiB,IAAK,CAAC;UDwhCxH6R,ACthCA,MDshCM,CAAE/N,CAAC,CAAE,GAAG29B,SAAS;QCphCxB,CAAC,MAAM;UDshCN,ACphCAkpE,KAAK,CAACosC,UAAU,CAAEkF,GAAG,CAACpF,UAAU,EAAE,CAAC,EAAE8J,gBAAgB,EAAE5hJ,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAM,EAAEL,KAAK,CAACgH,KAAK,EAAE,CAAC,EAAEu3I,QAAQ,EAAEC,MAAM,EAAEx+I,KAAK,CAACiB,IAAK,CAAC;QAEjI;MAED,CAAC,GDkhCC4gC,GClhCK,IAAKl6B,CDkhCF,CAACrqB,IAAI,CAAEw1B,AClhCE,CAACuuC,KDkhCG,CAACnyD,CAAC,EAAE4jB,MAAM,CAAC/3B,CAAC,EAAE+3B,CClhCG,EAAG,GDkhCA,CAAChO,CAAE,CAAC;QChhC9C,IAAKshJ,cAAc,EAAG;UDkhCrB,AChhCA,IAAKD,aAAa,EAAG;YAEpBv6C,KAAK,CAAC2wC,YAAY,CAAEW,GAAG,CAAC9E,UAAU,EAAEpqG,MAAM,EAAE4zG,gBAAgB,EAAE5hJ,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;UDghC1FyS,AC9gCA,CAAC,KD8gCK,CAAEl5B,AC9gCD,CD8gCE,CAAE,GAAG,CAAC;UACfk5B,EC7gCC,ID6gCK,AC7gCD1S,CD6gCG/kB,CAAC,CAAE,EC7gCD,CD6gCI,CAAC,CC7gCF2kB,KAAK,CAACI,KAAK;UD8gCxB0S,IC9gC0BzS,ED8gCpB,CAAE0E,CAAC,CAAE,CC9gCqB,ED8gClBiC,CC9gCqBhH,ID8gChB,CC9gCqB,CAACK,CD8gCnB,CAAC,GAAG,CAAC,AC9gCoB,GD8gCjB,CAAE,CAAC;YC5gChC,KAAM,IAAI/mB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG00D,MAAM,EAAE10D,IAAC,EAAG,EAAG;UD8gCrC,IC5gCEsyH,KAAK,CAACssC,UAAU,CAAEgF,GAAG,CAAC9E,UAAU,EAAE9+J,IAAC,EAAEsoK,gBAAgB,EAAExhJ,KAAK,EAAEC,MAAM,EAAE,CAAC,EAAEk+I,QAAQ,EAAEC,MAAM,EAAE,IAAK,CAAC;cAEjGp+I,KAAK,KAAK,CAAC;UD4gCbq+B,IC3gCEp+B,GD2gCK,CAAC/iB,EC3gCA,ED2gCI,CAAEw1B,EC3gCD,CAAC,GD2gCM,CAAC5jB,CAAC,EAAE4jB,MAAM,CAAC/3B,CAAC,EAAE+3B,MAAM,CAAChO,CAAE,CAAC;YCzgC3C;UD2gCD,ACzgCA;QAED;MAED,CAAC,GDugCCg9B,GAAG,ACvgCE,CDugCDxkD,IAAI,CAAE0lD,EAAE,GAAGZ,KAAM,CAAC;QCrgCvB,EDsgCCN,GAAG,CAACxkD,IAAI,CAAE,CAAC,GAAKylD,EAAE,GAAGV,KAAQ,CAAC;;QCpgC/B,EDsgCC;QCrgCD;QACA,EDsgCCQ,aAAa,IAAI,CAAC;QAEnB;MAED,ECxgCC,IAAK1/B,OAAO,CAACxlB,MAAM,GAAG,CAAC,EAAG;UAEzB,IAAKwoK,aAAa,IAAIC,cAAc,EAAG;MDwgCzC,MCtgCG,IAAM5O,UAAU,GAAGwG,aAAa,CAAE76I,OAAO,CAAE,CAAC,CAAG,CAAC;YAEhDyoG,KAAK,CAAC2wC,YAAY,CAAEW,GAAG,CAAC9E,UAAU,EAAEpqG,MAAM,EAAE4zG,gBAAgB,EAAEpK,UAAU,CAACp3I,KAAK,EAAEo3I,UAAU,CAACn3I,MAAO,CAAC;MDsgCtG,ICpgCE;MDqgCF,ICngCE,KAAM,IAAI/mB,IAAC,GAAG,CAAC,EAAEyuB,IAAE,GAAG5E,OAAO,CAACxlB,MAAM,EAAErE,IAAC,GAAGyuB,IAAE,EAAEzuB,IAAC,EAAG,EAAG;MDogCvD,MClgCG4sK,MAAM,GAAG/iJ,OAAO,CAAE7pB,IAAC,CAAE;YAErB,IAAK6sK,aAAa,EAAG;MDkgCxB,KAAM,GChgCF,CDggCMpjH,GAAE,AChgCH1hC,GDggCM,CAAC,EAAE0hC,GAAE,AChgCF,EAAG,CDggCEV,KAAK,EAAEU,GAAE,EAAG,EAAG;QAErC,KAAM,GChgCF6oE,CDggCM5oE,GAAE,CChgCH,CAACm5G,CDggCK,CAAC,EAAEn5G,GAAE,GAAGZ,GChgCA,CAAE86G,CDggCG,EAAEl6G,AChgCF,CAACo1G,EDggCG,EAAG,EAAG,IChgCC,EAAE9+J,IAAC,EAAE,CAAC,EAAE,CAAC,EAAEilK,QAAQ,EAAEC,MAAM,EAAE0H,MAAO,CAAC;UDkgC3E,IAAM1sK,AChgCJ,CDggCK,GAAGuoD,gBAAgB,GAAGiB,GAAE,GAAGL,MAAM,GAAGI,GAAE;UAC7C,EC//BC,CAAC,CD+/BIvxC,CAAC,GAAGuwC,CC//BF,eD+/BkB,GAAGiB,GAAE,GAAGL,MAAM,IAAKI,GAAE,GAAG,CAAC,CAAE;UACrD,IAAMrpD,AC9/BJkyH,CD8/BK,GAAG7pE,CC9/BH,CAACm2G,UAAU,CAAEgF,GD8/BM,AC9/BH,CAAC9E,GD8/BOp1G,GAAE,GAAG,CAAC,AC9/BH,CD8/BK,CC9/BH1pD,ED8/BMqpD,EC9/BL,EAAEi/G,ED8/BS,IAAK7+G,GAAE,GAAG,CAAC,CAAE,EC9/BN,EAAEw7G,QAAQ,EAAEC,MAAM,EAAE0H,MAAO,CAAC;UD+/BnF,EC7/BC,ED6/BK/qK,CAAC,GAAG4mD,gBAAgB,IAAKiB,GAAE,GAAG,CAAC,CAAE,GAAGL,MAAM,GAAGI,GAAE;UC3/BrD;UD6/BA,AC3/BAp7B,OAAO,CAACnE,eAAe,GAAG,KAAK;QAEhC,CAAC,MAAM;UD2/BNo7B,ACz/BA,IAAKunH,GDy/BE,CAAC7oK,IAAI,CAAE9D,CAAC,EAAEgY,CAAC,ACz/BA,EDy/BErW,ACz/BC,CDy/BC,CAAC;UACvByjD,ECx/BC,IAAKwnH,CDw/BC,CAAC9oK,IAAI,CAAEkU,CAAC,EAAE9X,CAAC,EAAEyB,CAAE,ACx/BF,CDw/BG,CCx/BA;cAErB,IAAMq8J,WAAU,GAAGwG,aAAa,CAAEh+I,KAAM,CAAC;UDw/B3C,ICt/BE4rG,KAAK,CAAC2wC,YAAY,CAAEW,GAAG,CAAC9E,UAAU,EAAEpqG,MAAM,EAAE4zG,gBAAgB,EAAEpK,WAAU,CAACp3I,KAAK,EAAEo3I,WAAU,CAACn3I,MAAO,CAAC;YAEpG;UDs/BDyiC,ECp/BC,IAAKzhC,IDo/BI,IAAI,CAAC,ACp/BA,EAAG;QDs/BnB,MCp/BGuqG,KAAK,CAACuwC,aAAa,CAAEe,GAAG,CAAC9E,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEmG,QAAQ,EAAEC,MAAM,EAAEx+I,KAAM,CAAC;MDs/B3E,MCp/BG;UAED,CAAC,MAAM;MDo/BT,MCl/BG4rG,KAAK,CAACssC,UAAU,CAAEgF,GAAG,CAAC9E,UAAU,EAAE,CAAC,EAAEwJ,gBAAgB,EAAErD,QAAQ,EAAEC,MAAM,EAAEx+I,KAAM,CAAC;UAEjF;MDk/BF4hC,ECh/BC,GDg/BI,CAAC3F,QAAQ,CAAE+F,UAAU,EAAEc,UAAU,EAAE5G,aAAc,CAAC;MC9+BvD;MDg/BA,AC9+BA,IAAKgiH,2BAA2B,CAAEv2I,OAAQ,CAAC,EAAG;QAE7Cw2I,cAAc,CAAE12B,WAAY,CAAC;MD8+B9BzlF,AC5+BA,UD4+BU,IAAIc,UAAU;MC1+BxBwiH,gBAAgB,CAAC3B,SAAS,GAAGzgJ,MAAM,CAAC5B,OAAO;MD4+B3C,AC1+BA,IAAKqG,OAAO,CAAC9D,QAAQ,EAAG8D,OAAO,CAAC9D,QAAQ,CAAE8D,OAAQ,CAAC;IAEpD;IAEA26I,EDw+BCvgH,eCx+BgB,CDw+BA,ACx+BC4hH,IDw+BG9gH,KCx+BM,GAAGl7B,KDw+BI,ECx+BG,CAACrG,OAAO;EAE9C,EDw+BC;ECt+BD,EDs+BE,OAAAkgC,ACt+BOqiH,ODs+BP,UCt+BwBA,CAAEvB,iBAAiB,EAAE36I,OAAO,EAAE87I,IAAI,EAAG;EDw+B/D,ECt+BC,IAAK97I,OAAO,CAAC3H,KAAK,CAACriB,MAAM,KAAK,CAAC,EAAG;EDs+BlCsmB,ECp+BA,IAAMmhJ,GDo+BN,CAAA9jH,OCp+BiB,GAAG6jH,CDo+BpB,EAAA5jH,QCp+B+B,CAAE+gH,MDo+BjC,WCp+BkD,EAAE36I,OAAQ,CAAC;EDo+B7D,ECn+BA,IAAMzE,CDm+BNzjB,KCn+BY,GAAGkoB,IDm+Bf,CAAA25B,ECn+BsB,CAACp+B,MAAM,EDm+B7B;IAAA1jB,ACj+BAosH,GDi+BA,ECj+BK,CAAC6rC,WAAW,CAAEyF,GAAG,CAAC7E,gBAAgB,EAAEiK,iBAAiB,CAACK,cAAc,EAAEzF,GAAG,CAACtB,QAAQ,GAAG6H,IAAK,CAAC;IDi+BhGpqK,AC/9BA,IAAMisK,CD+9BN,EAED,SAAA1xJ,IAAIA,ACj+BmB,CDi+BjBsP,ECj+BoBu5G,IDi+Bd,EAAG,ICj+BqB,CAACrpH,GAAG,CAAE8P,MAAO,CAAC;IAEjD,EDi+BA6zB,ECj+BK7zB,MAAM,CAAC5B,IDi+BZ,CAAAggC,ECj+BmB,KAAKgkH,IDi+BxB,YCj+BwC,CAAC3B,ODi+B7BzgJ,ECj+BsC,IDi+BhC,ACj+BoCkiJ,WAAW,KAAK,IAAI,EAAG;MDm+B7E,ACj+BCx5C,IDi+BG,CAAC/iF,ACj+BC,CAAC6yH,SDi+BQ,GAAG3iK,CCj+BE,CAAEmkK,GAAG,CDi+BD,ACj+BEtB,CDi+BD78I,MAAM,CAAE,ACj+BC,CDi+BA,CAAC,CCj+BE0kJ,CDi+BAvgJ,GCj+BK,CAAC,EDi+BA,CAAC2lB,UAAW,CAAC;MAExD,ACj+BC,IAAM08H,GDi+BA,IAAI,SCj+BY,GAAG9nJ,0BAAe,CAACgB,YAAY,CAAEhB,0BAAe,CAACE,iBAAkB,CAAC;IDm+B5F,ECl+BE,IAAM6nJ,gBAAgB,GAAG79I,OAAO,CAACjJ,UAAU,KAAKtU,uBAAY,GAAG,IAAI,GAAGqT,0BAAe,CAACgB,YAAY,CAAEkJ,OAAO,CAACjJ,UAAW,CAAC;EDk+BzH,ICj+BC,IAAM+mJ,gBAAgB,GAAG99I,OAAO,CAACjJ,UAAU,KAAKtU,uBAAY,IAAIm7J,gBAAgB,KAAKC,gBAAgB,GAAGtI,GAAG,CAACwI,IAAI,GAAGxI,GAAG,CAACyI,qBAAqB;IDi+B7InmK,EC/9BC09J,CD+9BD,EC/9BI,CAAC0I,WAAW,CAAE1I,GAAG,CAAC2I,mBAAmB,EAAEl+I,OAAO,CAACjE,KAAM,CAAC;ID+9B1DrqB,EC99BC6jK,GD89BD,AC99BI,CAAC0I,CDg+BN,SAAO3iH,CCh+BU,CAAEi6G,GAAG,CAAC4I,EDg+BR7iH,CAAEhiC,IAAI,EAAG,qBCh+B6B,EAAE0G,OAAO,CAAClE,gBAAiB,CAAC;MDk+BhF,ACj+BCy5I,GAAG,CAAC0I,GDi+BE,IAAItkH,ICj+BK,CAAE47G,GAAG,CAAC6I,EDi+BA,CAAE9kJ,IAAI,CAACb,KAAK,EAAEa,CCj+BE,EAAE0G,CDi+BA,CAACtH,KCj+BM,CDi+BA,ACj+BCsD,EDi+BC1C,IAAI,CAAC+F,KAAK,EAAE/F,CCj+BG,CAAC,EDi+BA,CAACwgC,aAAa,EAAExgC,IAAI,CAACygC,cAAc,EAAEzgC,IAAI,CAAC0gC,aAAc,CAAC;IAE3H,ECl+BEu7G,GAAG,CAAC0I,WAAW,CAAE1I,GAAG,CAAC8I,kCAAkC,EAAEP,gBAAiB,CAAC;EDk+B5E,ICh+BC,IAAMiB,YAAY,GAAK/+I,OAAO,CAAC85C,mBAAmB,IAAI95C,OAAO,CAAC3H,KAAK,CAAE,CAAC,CAAE,CAACyhD,mBAAqB;ADg+B/F,EA3KwBzmB,ICpzBvB,IAAMj5B,MDozB+B,OCpzBlB,GAAK4F,OAAO,CAAC3H,KAAK,CAAE,CAAC,CAAE,IAAI2H,OAAO,CAAC3H,KAAK,CAAE,CAAC,CAAE,CAAC+B,aAAe;ADm+BnF,MCj+BG,IAAM4kJ,SAAS,GAAG,EAAE;ADk+BvB,MCh+BG,KAAM,IAAIrtK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG;ADi+BlC,QC/9BI,IAAK,CAAEotK,YAAY,IAAI,CAAE3kJ,aAAa,EAAG;ADi+B7C,SAASmhC,CC/9BJyjH,SAAS,CAAErtK,CAAC,CD+9BK4pD,AC/9BH,CD+9BKhjC,EC/9BF29I,CD+9BK,EAAG,QC/9BG,CAAEl2I,OAAO,CAAC3H,KAAK,CAAE1mB,CAAC,CAAE,EAAE,IAAI,EAAE85I,YAAY,CAACzK,cAAe,CAAC;EDi+BzF,IAAMx7G,EC/9BH,CD+9BM,AC/9BL,GD+9BQ,CAAC,CAAC,CC/9BJ;EDi+BV,KAAM,GC/9BFw5I,CD+9BQ/sK,CAAC,IAAIsmB,GAAG,AC/9BP,CAAE5mB,CD+9BQ,AC/9BP,CAAE,GAAGyoB,aAAa,GAAG4F,OAAO,CAAC3H,KAAK,CAAE1mB,CAAC,CAAE,CAAC0mB,KAAK,GAAG2H,OAAO,CAAC3H,KAAK,CAAE1mB,CAAC,CAAE;IDi+BjF6zB,GAAG,CAAEvzB,AC/9BH,CD+9BI,CAAE,GAAG,CAAC,CAAC;IAEb,IC/9BE+sK,CD+9BI,IAAMzrK,CAAC,GC/9BF,CD+9BMglB,AC/9BJ5mB,CAAC,CAAE,CD+9BI,CAAEM,CAAC,AC/9BJqsK,CD+9BM,EAAG,aC/9BO,CAAEt+I,OAAO,EAAEg/I,SAAS,CAAErtK,CAAC,CAAG,CAAC;MDi+B7D,AC/9BA,ID+9BM6pD,QAAQ,GAAGjjC,GAAG,CAAEtmB,CAAC,CAAE,CAAEsB,CAAC,CAAE;MAE9B,AC/9BA,ID+9BKioD,AC/9BCnjC,KAAK,GD+9BE,AC/9BC2mJ,KD+9BKxjH,IC/9BI,CAAE,CAAC,CAAE,CD+9BD,CAAC1a,OAAO,IAClC0a,QAAQ,CAACvrC,SAAS,IAAIurC,QAAQ,CAAC5oB,SAAS,IACxC4oB,QAAQ,CAAChwC,SAAS,IAAIgwC,QAAQ,CAAC70B,SAAS,IAAI60B,QAAQ,CAACn+B,SAAS,IAC9Dm+B,QAAQ,CAAClgC,SAAS,IAAIkgC,QAAQ,CAACv5B,YAAY,CAAE,EAAG;QAEhD,ACn+BA20I,IDm+BKp7G,ICn+BG,GAAG8jF,CDm+BE,CAACljH,GCn+BE,CAAClG,OAAO,CAAE8J,OAAO,CAAC9E,CDm+BC,EAAG,GCn+BE,EAAE8E,OAAO,CAACjJ,UAAW,CAAC;QAC9D8/I,EDo+BCnsJ,ICp+BK,GDo+BE,ACp+BC40H,CDo+BA30H,IAAI,ACp+BC,CDo+BC,ACp+BAuL,OAAO,CAAE8J,OAAO,CAACntB,IAAK,CAAC,+EDo+B8E,CAAC;QCn+BrHonK,EDo+BCz0I,GAAG,CAAEvzB,CAAC,CAAE,CAAEsB,CAAC,CAAE,GAAG,ECp+BD,EDo+BK,CCp+BFmjK,iBAAiB,CAAE12I,OAAO,CAACtE,cAAc,EAAEk7I,QAAQ,EAAEC,MAAM,EAAE72I,OAAO,CAACjJ,UAAW,CAAC;MAErG,EDo+BC,CAAC,CCp+BIynJ,KDo+BE,QCp+BW,GAAKx+I,OAAO,CAACi5C,cAAc,KAAK,IAAM;MACzD,IDq+BEzzC,ACr+BIi5I,GDq+BD,CAAExsK,CAAC,CAAE,CAAEsB,CAAC,CAAE,GAAGioD,ECr+BE,GAAKmiH,GDq+BC,CAAC3xJ,KAAK,CAAC,CAAC,KCr+BO,CAACgwJ,SAAS,KAAKz2J,SAAS,IAAQk4J,WAAW,KAAK,IAAM;MAC/F,EDs+BC,ECt+BK/jJ,SAAS,GAAG6B,MAAM,CAAC7B,SAAS;MDw+BlC,ACv+BA,CDu+BC,GCv+BG2sC,GDu+BG,GCv+BG,CDu+BEnsC,ECv+BCqgJ,GDu+BI,CAACpgJ,OAAO,CAAEqhC,ACv+BF,CAAEx7B,ODu+BS,ACv+BF,CDu+BG,CCv+BD3H,CDu+BI,ICv+BE,CAAC;MAE3CykJ,EDu+BCt3I,GAAG,CAAEvzB,CAAC,CAAE,CAAEsB,CAAC,CAAE,GAAGioD,MCv+BG,CAAE+5G,CDu+BG,CAACv+J,CCv+BD,CAAC05J,GDu+BK,CAAC,CAAC,WCv+BS,EAAE1wI,OAAQ,CAAC;MDy+BrD,ACv+BA,CDu+BC,GCv+BGxE,GDu+BG,ICv+BI;MAEX,EDu+BCgK,ECv+BIu5I,CDu+BD,CAAE9sK,CAAC,CAAE,CAAEsB,CAAC,CAAE,GAAGioD,ECv+BA,EAAG,IDu+BK;MAEzB,ECv+BC,IAAKgjH,aAAa,IAAIC,cAAc,EAAG;IDy+BzC,MCv+BGx6C,KAAK,CAAC2wC,YAAY,CAAEW,GAAG,CAAC7E,gBAAgB,EAAErqG,MAAM,EAAE4zG,gBAAgB,EAAE5hJ,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACK,MAAO,CAAC;EDy+BnG,MCv+BG;EDy+BH,MCv+BG,CDu+BI8M,GAAG,CCv+BD,IAAI7zB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;ADy+BnC,UCv+BK6pB,OAAO,GAAGwjJ,SAAS,CAAErtK,IAAC,CAAE,CAAC6pB,OAAO;ADy+BrC,SAASigC,CCv+BJ,KAAM,IAAI1tB,CAAC,EDu+BM0tB,CAAEC,ACv+BL,CAAC,EAAE3tB,CAAC,GAAGvS,CDu+BM,EAAG,ICv+BF,CAACxlB,MAAM,EAAE+3B,CAAC,EAAG,EAAG;EDy+BhD,IAAM4tB,MAAM,ACv+BP,GDu+BU,CAAC,ACv+BL4iH,CDu+BM,KCv+BA,GAAG/iJ,OAAO,CAAEuS,CAAC,CAAE;EDy+BhC,KAAM,IAAI97B,CAAC,ACv+BN,GDu+BS,CAAC,ACv+BL+tB,EDu+BO/tB,CAAC,GAAGypD,CCv+BJ,CAACxgC,MDu+BW,ACv+BL,CDu+BMllB,ICv+BD0I,EDu+BO,EAAEzM,CAAC,EAAG,EAAG,YCv+BN,EAAG;IDy+BzC,IAAMwgB,IAAG,ECv+BJ,CDu+BO8oC,GCv+BFq7G,QAAQ,EDu+BO,CAAEl7G,ECv+BJ,IAAI,EDu+BQ,ACv+BL,CDu+BOzpD,CAAC,CAAG,CAAC;IAE1C,KAAM,IAAMsB,CAAC,ECv+BP,EDu+BWkf,ECv+BN+rJ,EDu+BS,EAAG,SCv+BC,EAAG;MDy+B1B7iH,MAAM,CAAEpoD,CAAC,CAAE,GAAGkf,ACv+BR,IDu+BW,ACv+BNiH,CDu+BQnmB,CAAC,CAAE,MCv+BF,EAAG;IDy+BxB,gBCv+BQ0wH,KAAK,CAACywC,uBAAuB,CAAEa,GAAG,CAAC5E,2BAA2B,GAAGh/J,IAAC,EAAEo8B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEwwI,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAEk+I,QAAQ,EAAE2H,MAAM,CAACjlJ,IAAK,CAAC;EDy+B1I,gBCv+BQ;EDy+BR,OAAOqiC,MAAM,CCv+BN,CAAC,MAAM;ADy+Bf,kBCv+BSsoE,KAAK,CAACqwC,oBAAoB,CAAEiB,GAAG,CAAC5E,2BAA2B,GAAGh/J,IAAC,EAAEo8B,CAAC,EAAEksI,gBAAgB,EAAEsE,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAE,CAAC,EAAE6lJ,MAAM,CAACjlJ,IAAK,CAAC;ADy+B5I,SAASsiC,OCv+BD,YDu+BoBA,CAAErjC,GAAG,EAAG;EAEnC,IAAMiN,GAAG,GAAG,EAAE,ACv+BR,CAAC,MAAM;EDy+Bb,KAAM,IAAIvzB,CAAC,GAAG,CAAC,ACv+BRyY,EDu+BUzY,CAAC,GAAGsmB,CCv+BP,CAAC5N,CDu+BS,CAAC3U,ECv+BN,CAAE,GDu+BU,EAAE/D,CAAC,EAAG,EAAG,uFCv+B+E,CAAC;IDy+BvHuzB,GAAG,CAAC7vB,IAAI,CAAE4iB,CCv+BL,EDu+BQ,CAAEtmB,CAAC,CAAE,CAAC+Z,KAAK,CAAC,CAAE,CAAC;EAE7B,UCv+BK,CAAC,MAAM;EDy+BZ,OAAOwZ,GAAG,ECv+BJ,IAAKg5I,aAAa,EAAG;ADy+B5B,gBCv+BQ,IAAK9kJ,SAAS,EAAG;ADy+BzB,SAASmiC,SCv+BAooE,KAAK,CAACuwC,UDu+BmB34G,CAAEC,ECv+BR,CAAEy5G,GAAG,CAAC5E,CDu+BU,EAAG,wBCv+Bc,GAAGh/J,IAAC,EAAEo8B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEwwI,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAEk+I,QAAQ,EAAEC,MAAM,EAAE0H,MAAM,CAACjlJ,IAAK,CAAC;EDy+BvI,IAAMyiC,UCv+BC,SDu+BkB,GAAGD,QAAQ,CAACE,eAAe,CAAC,CAAC;EAEtD,IAAKD,QCv+BC,CAAC,MAAM,IDu+BW,KAAK,IAAI,EAAG;IAEnC,YCv+BMkoE,KAAK,CAACssC,UAAU,CAAEgF,GAAG,CAAC5E,2BAA2B,GAAGh/J,IAAC,EAAEo8B,CAAC,EAAEksI,gBAAgB,EAAEsE,MAAM,CAAC9lJ,KAAK,EAAE8lJ,MAAM,CAAC7lJ,MAAM,EAAE,CAAC,EAAEk+I,QAAQ,EAAEC,MAAM,EAAE0H,MAAM,CAACjlJ,IAAK,CAAC;IDw+BjJ,OAAOwiC,GCt+BF,KDs+BU,CAACG,gBAAgB;EAEjC,UCt+BK;UAED;EDs+BJ,MCp+BG;EDq+BH,IAAKF,ACn+BH,CAAC,MAAM,YDm+Be,CAACG,gBAAgB,KAAK,IAAI,EAAG;IAEpD,ICn+BE1gC,GDm+BKugC,ICn+BE,GAAG/7B,OAAO,CAACxE,IDm+BM,CAACwE,ECn+BA,KDm+BO,CAACjJ,UAAU;EAE9C,MCn+BG,IAAKynJ,aAAa,IAAIC,cAAc,EAAG;EDq+B1C,OAAO3oJ,CCn+BH,cDm+BkB,CAACE,iBAAiB;AAEzC,UCp+BK;UACA;ADq+BL;UCn+BK,IAAKwF,OAAO,CAACxlB,MAAM,GAAG,CAAC,EAAGqwD,MAAM,EAAG;ADq+BxC,IAAMlK,MCn+BD,IAAM0zG,GDm+BQ,GAAAz3J,ICn+BE,GDm+BF,ACn+BKi+J,CDm+BLl6G,YCn+BkB,CDm+BlB,ACn+BoB6iH,GDm+BjB,MCn+B0B,CAAE,CAAC,CAAG,CAAC;EDm+B/BhzJ,KAAK,EAAEuvC,CCj+B1B0oE,KAAK,CAAC2wC,MDi+BiC,MCj+BrB,CAAEW,GAAG,CAAC7E,gBAAgB,EAAErqG,MAAM,EAAE4zG,gBAAgB,EAAEpK,UAAU,CAACp3I,KAAK,EAAEo3I,UAAU,CAACn3I,MAAO,CAAC;EDi+BhE0jC,KAAK,CC/9B/C,CD+9BiDX;AAAc,CAAC,OC79BhE,KAAM,IAAI9pD,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;AD+9BnC,IAAI0qD,MC79BC,IAAKjiC,ID69BQ,GAAG,MC79BE,EAAG,uFD69B0F;AAEpH,IAAIkiC,QC79BE,IAAKkiH,ID69BS,GAAG,MC79BC,EAAG,wDD69B4D;AAAC,IAElFjiH,UC79BC,ID69Ba,AC79BR7iC,GD69BQthB,MC79BC,CD69BD,CAAAmkD,AC79BI,cD69BJ,0BAAAC,UAAA;EAEnB,SAAAD,KC79BO0nE,KAAK,CAACuwC,ID69BAtzH,SC79Ba,CD69BH,AC79BKq0H,ED69BF,CC79BK,CAAC5E,2BAA2B,GAAGh/J,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEqtK,SAAS,CAAErtK,IAAC,CAAE,CAAC8mB,KAAK,EAAEumJ,SAAS,CAAErtK,IAAC,CAAE,CAAC+mB,MAAM,EAAEk+I,QAAQ,EAAEC,MAAM,EAAEmI,SAAS,CAAErtK,IAAC,CAAE,CAAC2nB,IAAK,CAAC;ID69BpI,IAAAmjC,MC39BpB,CD29BoB;IAAA/kD,QCz9BrB,CAAC,MDy9BoB,ACz9Bd,ODy9Bc6kD,cAAA;IAEzBE,OAAA,GAAAphC,ACz9BK4oG,KAAK,CAACssC,IDy9BX,MCz9BqB,CDy9BrBh0G,ACz9BuBg5G,GAAG,CAAC5E,UDy9B3B,iBCz9BsD,GAAGh/J,IAAC,EAAE,CAAC,EAAEsoK,gBAAgB,EAAE+E,SAAS,CAAErtK,IAAC,CAAE,CAAC8mB,KAAK,EAAEumJ,SAAS,CAAErtK,IAAC,CAAE,CAAC+mB,MAAM,EAAE,CAAC,EAAEk+I,QAAQ,EAAEC,MAAM,EAAEmI,SAAS,CAAErtK,IAAC,CAAE,CAAC2nB,IAAK,CAAC;ID29BxKmjC,OAAA,CAAKC,ACz9BD,gBDy9BiB,GAAG,IAAI;IAE5BD,OAAA,CAAK5pD,ACz9BD,IDy9BK,CCz9BC,EDy9BE,ECz9BEk7B,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGvS,CDy9BG,MCz9BI,CAACxlB,MAAM,EAAE+3B,EAAC,EAAG,EAAG;ID29BhD0uB,OAAA,CAAKE,ECz9BA,IAAM4hH,CDy9BC,GAAG,CAAC,CAAC,CCz9BA,GAAG/iJ,OAAO,CAAEuS,EAAC,CAAE;ID09BhC0uB,OAAA,CAAKf,ECz9BA,IAAMujH,EDy9BE,GAAG,CAAC,CAAC,ICz9BI,GAAGV,OAAM,CAAClmJ,KAAK,CAAE1mB,IAAC,CAAE,CAAC0mB,KAAK;ID09BhDokC,OAAA,CAAKG,ECx9BA,IAAK4hH,QDw9BS,GAAG,EAAE,ACx9BD,EAAG;ID09B1B/hH,OAAA,CAAKI,ICx9BC,IAAKnjC,IDw9BM,GAAG2iC,ECx9BA,EAAG,UDw9BW;IAClCI,OAAA,CAAKK,MCv9BEmnE,KAAK,CAACuwC,EDu9BM,GAAGl4G,QCv9BI,CAAEi5G,GAAG,CAAC5E,GDu9BM,wBCv9BqB,GAAGh/J,IAAC,EAAEo8B,EAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEkxI,WAAW,CAACxmJ,KAAK,EAAEwmJ,WAAW,CAACvmJ,MAAM,EAAEk+I,QAAQ,EAAEC,MAAM,EAAEoI,WAAW,CAAC3lJ,IAAK,CAAC;IDy9BzJmjC,OAAA,CAAKtO,ICv9BC,KDu9BQ,GAAG,CAAC;IAElBsO,OAAA,CAAKlO,ECv9BA,CAAC,MDu9BQ,ACv9BF,GDu9BK,KAAK;IACtBkO,OAAA,CAAKjO,ICt9BCy1E,KAAK,CAACssC,QDs9BW,ECt9BD,CDs9BI,ACt9BFgF,CDs9BG,ECt9BA,CAAC5E,2BAA2B,GAAGh/J,IAAC,EAAEo8B,EAAC,GAAG,CAAC,EAAEksI,gBAAgB,EAAEgF,WAAW,CAACxmJ,KAAK,EAAEwmJ,WAAW,CAACvmJ,MAAM,EAAE,CAAC,EAAEk+I,QAAQ,EAAEC,MAAM,EAAEoI,WAAW,CAAC3lJ,IAAK,CAAC;IDw9BpKmjC,OAAA,CAAK7N,ECt9BA,CDs9BG,GAAG,KAAK,CAAC,CAAC;IAClB6N,OAAA,CAAKM,ACr9BD,MDq9BO,GAAG,KAAK,CAAC,CAAC;IACrBN,MCp9BG,CDo9BH,ACp9BI,CDo9BCO,KCp9BK,GDo9BG,GAAG,KAAK,CAAC,CAAC;YCl9BnB,IAAKwhH,aAAa,EAAG;IDo9BzB/hH,OAAA,CAAKzS,ECl9BA,IAAKtwB,SDk9BU,ACl9BD,EAAG,CDk9BC,IAAI;IAE3B+iC,OAAA,CAAKQ,ICl9BCgnE,KAAK,CDk9BI,ACl9BHuwC,GDk9BM,UCl9BO,CAAEe,GAAG,CAAC5E,2BAA2B,GAAGh/J,IAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEilK,QAAQ,EAAEC,MAAM,EAAEmI,SAAS,CAAErtK,IAAC,CAAG,CAAC;MDm9B1GurD,QCj9BI,QDi9BY,EAAE,KAAK;MAAE,MC/8BtB,CAAC,MAAM;MDg9BVC,QC98BI8mE,CD88BK,EAAE,EC98BF,CAACssC,ED88BM,CAAC,OC98BG,CAAEgF,GAAG,CAAC5E,2BAA2B,GAAGh/J,IAAC,EAAE,CAAC,EAAEsoK,gBAAgB,EAAErD,QAAQ,EAAEC,MAAM,EAAEmI,SAAS,CAAErtK,IAAC,CAAG,CAAC;ID+8BnH,CAAC,OC78BG;YAEA,KAAM,IAAIo8B,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGvS,OAAO,CAACxlB,MAAM,EAAE+3B,GAAC,EAAG,EAAG;ID68BhD,UC38BK,IAAMwwI,QAAM,GAAG/iJ,OAAO,CAAEuS,GAAC,CAAE;ID48BhC,UC18BK,IAAKywI,aAAa,EAAG;ID28B1B/hH,OAAA,CAAKW,ICz8BC,IAAK1jC,SAAS,EAAG,GDy8BI,GAAG;MAC7B,OAAO,EAAE,CAAE,CAAC,CCx8BNuqG,CDw8BQ,CAAC,EAAE,CAAC,ACx8BP,CDw8BS,ACx8BRuwC,aAAa,CAAEe,GAAG,CAAC5E,2BAA2B,GAAGh/J,IAAC,EAAEo8B,GAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE6oI,QAAQ,EAAEC,MAAM,EAAE0H,QAAM,CAAClmJ,KAAK,CAAE1mB,IAAC,CAAG,CAAC;MDy8BlH,IAAI,EAAE,CAAE,CAAC,EAAE,ACv8BN,CDu8BO,CAAE;MACd,KAAK,EAAE,CAAE,ACt8BL,CDs8BM,ACt8BL,EDs8BO,CAAC,GCt8BF;IDu8BZ,CAAC,WCr8BKsyH,KAAK,CAACssC,UAAU,CAAEgF,GAAG,CAAC5E,2BAA2B,GAAGh/J,IAAC,EAAEo8B,GAAC,GAAG,CAAC,EAAEksI,gBAAgB,EAAErD,QAAQ,EAAEC,MAAM,EAAE0H,QAAM,CAAClmJ,KAAK,CAAE1mB,IAAC,CAAG,CAAC;IDu8B3H8qD,OAAA,CAAKY,ECr8BA,iBDq8BmB,GAAG93C,SAAS;IACpCk3C,OAAA,CAAKa,ACp8BD,kBDo8BmB,GAAG,KAAK;IAE/Bb,MCp8BG,CDo8BH,CAAKc,WAAW,GAAG,IAAI;IAEvB,IAAKrc,ACp8BH,UDo8Ba,KAAK37B,SAAS,EAAG;MAE/Bk3C,ACp8BA,ODo8BA,CAAKpS,SAAS,CAAEnJ,UAAW,CAAC;IAE7B,ECp8BC,IAAKq1H,2BAA2B,CAAEv2I,OAAQ,CAAC,EAAG;IDo8B9C,ICl8BC,GDk8BDy8B,OAAA;EAEF,MCn8BG+5G,cAAc,CAAEjB,GAAG,CAAC7E,gBAAiB,CAAC;EDm8BxCp0I,ICj8BC,KDi8BD,CAAAigC,cAAA,EAAAC,UAAA;EAAA,IC/7BCmhH,GD+7BD7lK,YAAA,CAAAykD,AC/7BiB,CAACy/G,SAAS,GAAGzgJ,CD+7B9B,KC/7BoC,CAAC5B,OAAO;ID+7B5C9hB,EC77BC,CD67BD,GC77BMmoB,OAAO,CAAC9D,QAAQ,EAAG8D,OAAO,CAAC9D,QAAQ,CAAE8D,OAAQ,CAAC;ID67BpDtuB,AC37BA,KD27BA,EAED,SAAAua,IAAIA,CAAEsP,MAAM,EAAG;IC37Bdo/I,ED67BAvrH,aAAA,CAAAmN,CC77BiB,CAACy/G,SAAS,GD67B3B,AC77B8Bh8I,OAAO,CAACrG,OAAO,KD67BjC4B,MAAM;EC37BnB,ID67BC,IAAI,CAACuhC,cAAc,GAAGvhC,MAAM,CAACuhC,cAAc;MAC3C,IAAI,CAACD,YAAY,GAAGthC,MAAM,CAACshC,YAAY;EC57BxC,ID87BC,IAAI,CAACnB,QAAQ,GAAGH,aAAa,CAAEhgC,MAAM,CAACmgC,QAAS,CAAC;MAChD,IAAI,CAACkB,cAAc,GAAGhB,mBAAmB,CAAErgC,MAAM,CAACqhC,cAAe,CAAC;EC77BnE,ID+7BC,IAAI,CAACD,OAAO,GAAGvrD,MAAM,CAACgmB,MAAM,CAAE,CAAC,CAAC,EAAEmE,MAAM,CAACohC,OAAQ,CAAC;EC97BnD,IDg8BC,IAAI,CAACpO,ACh8BG2wH,SDg8BM,GAAG3jJ,MAAM,CAACgzB,ICh8BO2wH,CAAElO,IDg8BA,OCh8BW,EAAE70I,YAAY,EAAE6D,OAAO,EAAEm/I,UAAU,EAAEC,aAAa,EAAE54G,KAAK,EAAG;IAExG,ED+7BA,EC/7BMowG,ED+7BF,CAACpoH,KC/7BS,GAAG8wF,KAAK,CAACppH,ID+7BA,GAAGqF,AC/7BI,CAAEyE,KD+7BA,CAACwuB,CC/7BM,CAACtzB,MAAM,EAAE8E,OAAO,CD+7BJ,AC/7BKjJ,UAAW,CAAC;IACpE,EDg8BA,ECh8BM8/I,EDg8BF,CAACjoH,GAAG,ACh8BI,GDg8BDrzB,ACh8BI+jH,KAAK,CDg8BH,ACh8BIppH,CDg8BH04B,GAAG,GCh8BO,CAAE5uB,OAAO,CAACntB,IAAK,CAAC;IAC5C,EDg8BA,ECh8BMonK,EDg8BF,CAACl9G,MAAM,GAAGxhC,ICh8BQ,EDg8BF,CAACwhC,ACh8BI25G,MDg8BE,WCh8Be,CAAE12I,OAAO,CAACtE,cAAc,EAAEk7I,QAAQ,EAAEC,MAAM,EAAE72I,OAAO,CAACjJ,UAAW,CAAC;IAC1G,EDg8BA,ECh8BMkkJ,EDg8BF,CAACj+G,QAAQ,GAAGzhC,MAAM,CAACyhC,CCh8BK,GAAG83E,IDg8BA,MCh8BU,CAACrpH,GAAG,CAAE0Q,YAAa,CAAC;IAC7D,EDi8BA,ECj8BMw+I,EDi8BF,CAAC19G,UAAU,GAAG7rD,CCj8BK,GAAG0jI,EDi8BF,CAAC19G,MAAM,CAAE,ACj8BG,CDi8BF,ACj8BG3L,CDi8BF,EAAE8P,ACj8BG,CAAEyE,KDi8BC,CAACi9B,CCj8BM,CAAC,QDi8BI,CAAC;IC/7BxD09G,EDi8BA,IAAI,CAACp9G,UCj8BY,CDi8BD,ACj8BE8hH,GDi8BC9jJ,MAAM,CAACgiC,ICj8BM,GAAGphC,IDi8BE,QCj8BU;IAE/C,EDi8BA,ECj8BK,CAAE8+I,IDi8BA,IAAI,cCj8BkB,CAACqE,qBAAqB,EAAG;IDm8BvD,ECj8BE,IAAM7mJ,KAAK,GAAGnS,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEgV,YAAY,CAAC1D,KAAK,IAAI+tC,KAAM,CAAC;EDi8BzD,ICh8BC,IAAM9tC,MAAM,GAAGpS,IAAI,CAACa,GAAG,CAAE,CAAC,EAAEgV,YAAY,CAACzD,MAAM,IAAI8tC,KAAM,CAAC;IDg8B3D3uD,EC97BC,CD87BD,GC97BMunK,aAAa,KAAK7J,GAAG,CAACpF,UAAU,IAAIiP,aAAa,KAAK7J,GAAG,CAACnF,gBAAgB,EAAG;ID87BnF1+J,IC57BEuyH,CD47BF,EAED,EC97BQ,CAACosC,MD87BTz2I,IC97BmB,CAAEwlJ,CD87BfxlJ,CAAEC,IAAI,EAAG,KC97BmB,EAAE2sC,KAAK,EAAEyzG,gBAAgB,EAAExhJ,KAAK,EAAEC,MAAM,EAAEyD,YAAY,CAACkD,KAAK,EAAE,CAAC,EAAEu3I,QAAQ,EAAEC,MAAM,EAAE,IAAK,CAAC;MDg8B1H,AC97BC,CAAC,GD87BIv9I,GC97BE,CD87BE,GAAA81B,aAAA,CAAAmN,cAAA,sBAAiB1iC,IAAI,EAAE;MAEjCP,EC97BE2qG,ED87BE,CAAC1mE,EC97BE,CAACgzG,QD87BQ,EC97BE,CD87BC,AC97BC6O,ID87BG,CAAC7hH,QC97BS,EAAEiJ,CD87BA,IC97BK,EAAEyzG,gBAAgB,EAAExhJ,KAAK,EAAEC,MAAM,EAAE,CAAC,EAAEk+I,QAAQ,EAAEC,MAAM,EAAE,IAAK,CAAC;MD+7BtGv9I,AC77BC,ID67BG,CAACoiC,QAAQ,GAAG,CAAC,CAAC;IC37BlB,ED67BA,KAAM,IAAMtlD,IAAI,IAAI,IAAI,CAACslD,QAAQ,EAAG;IC37BpCuoE,ID67BC,CC77BI,CAAC8sC,ED67BCvzG,OAAO,GAAG,GC77BI,CD67BA,AC77BE+3G,CD67BD75G,EC77BI,CAACw1G,KD67BG,CAAE96J,IAAI,CAAE,AC77BA,EAAE46J,WAAY,CAAC;IAErD,ID47BC,AC57BIuO,ID47BE7tK,KAAK,GAAG8rD,MC57BQ,CD47BD,AC57BGrhC,CD47BFzqB,KAAK,MC57BU,CAAC,EAAG;MAEzC8jK,ED47BA,IAAK9jK,KAAK,IAAIA,GC57BI,CAAC8tK,CD47BA,CAAClkJ,SAAS,EAAG,qBC57BqB,CAAEi6I,GAAG,CAACrE,WAAW,EAAEiO,UAAU,EAAEC,aAAa,EAAEzE,iBAAiB,CAACK,cAAc,EAAE,CAAC,EAAEyE,sBAAsB,CAAEtjJ,YAAa,CAAE,CAAC;IAEjL,CAAC,KD47BC7C,CC57BK,GD47BD,CAACoiC,AC57BK0jH,QD47BG,CAAEhpK,IAAI,AC57BI,CD47BF,GAAG,CC57BIm/J,GAAG,CAAC9E,UAAU,IAAM2O,aAAa,IAAI7J,GAAG,CAAC5E,2BAA2B,IAAIyO,aAAa,IAAI7J,GAAG,CAACmK,2BAA6B,EAAG;MAAE,MD67B1J7sK,IAAI,EAAE,GAAG;YACTnB,KAAK,EAAEA,KAAK,CAACkoB,MAAM,CAAEC,IAAK,CAAC,CAAC9S;MC57B9BwuJ,GAAG,CD67BF,AC77BGoK,CD67BF,mBC77BsB,CAAEpK,GAAG,CAACrE,WAAW,EAAEiO,UAAU,EAAEC,aAAa,EAAEzE,iBAAiB,CAACK,cAAc,EAAEx0G,KAAM,CAAC;IAEhH,ID67BC,CAAC,MAAM,IAAK90D,KAAK,IAAIA,KAAK,CAACovC,OAAO,EAAG;IC37BtCmjF,KAAK,CD67BH3qG,AC77BIy3I,ID67BA,CAACr1G,QAAQ,CAAEtlD,CC77BI,CAAEm/J,ED67BF,CAAE,AC77BG,CAACrE,ED67BD,SC77BY,EAAE,IAAK,CAAC;EAE/C,UD47BIr+J,IAAI,EAAE,GAAG;YACTnB,KAAK,EAAEA,KAAK,CAACw0C,MAAM,CAAC;EC37BxB,QD47BG,CAAC;EC37BJ,MD67BE,CAAC,EC77BM05H,ID67BA,IAAKluK,KAAK,IAAIA,KAAK,CAAC8Z,CC77BIo0J,CAAEC,OD67BG,EAAG,GC77BM,EAAE1jJ,YAAY,EAAE2jJ,aAAa,EAAG;IAE9EvK,GAAG,CAACwK,ED67BFzmJ,IAAI,CAACoiC,QAAQ,CAAEtlD,AC77BG,CAAEm/J,GD67BD,AC77BI,CD67BF,AC77BGyK,GD67BA,SC77BY,EAAEH,YAAa,CAAC;IAEtD,IAAK1jJ,ID47BFtpB,IAAI,EAAE,EC57BQ,CAAC4sB,CD47BL,UC57BgB,EAAG;MAE/B,MD27BE/tB,KAAK,EAAEA,KAAK,CAACod,OAAO,CAAC;MC17BvB,ID27BC,AC37BK+Q,CD27BJ,WC37BgB,GAAG1D,YAAY,CAAC0D,YAAY;MAC9C,ED47BA,CAAC,CC57BKm6I,KD47BC,IAAKtoK,AC57BG,GAAGmuB,ED47BD,IAAInuB,KAAK,CAACi1B,AC57BG,IAAI9G,KD47BE,EAAG,KC57BO,CAACi7C,cAAc,GAAGj7C,YAAY,CAAChtB,IAAI,GAAG,IAAI;MACxF,ID67BCymB,AC77BK2gJ,ID67BD,CAACv+G,QAAQ,CAAEtlD,EC77BM,ED67BF,CAAE,AC77BG0jK,GD67BA,mBC77BsB,CAAE39I,YAAY,CAACuD,aAAa,EAAEs6I,SAAU,CAAC;MACxF,IAAMiG,ED67BJptK,IAAI,EAAE,IAAI,IC77BU,GAAGspB,YAAY,CAACuD,aAAa,GAAG61I,GAAG,CAAC2K,wBAAwB,GAAG3K,GAAG,CAAC4K,gBAAgB;YD87BvGzuK,KAAK,EAAEA,KAAK,CAACod,OAAO,CAAC;MC57BvB,ID67BC,CAAC;MC57BF,ED87BA,CAAC,CC97BKgR,KD87BC,EC97BM,ED87BDpuB,CC97BI+tK,ID87BC,IAAI/tK,KAAK,CAAC2rB,QC97BW,CD87BF,AC97BIlB,ED87BD,UC97Bc,CAAC;MACtD,ID+7BC7C,AC/7BK8mJ,ID+7BD,CAAC1kH,QAAQ,CAAEtlD,IAAI,CAAE,CC/7BI,ED+7BD,CC/7BImpK,kBAAkB,CAAEpjJ,YAAa,CAAC;MAC/D,IAAKikJ,ED+7BHvtK,IAAI,EAAE,IAAI,QC/7Ba,EAAG;QAE3B2iK,ID87BC9jK,KAAK,EAAEA,KAAK,CAACod,CC97BI,CAACuxJ,KD87BE,CAAC,2BC97B8B,CAAE9K,GAAG,CAACyK,YAAY,EAAElgJ,OAAO,EAAEm6I,gBAAgB,EAAE99I,YAAY,CAAC1D,KAAK,EAAE0D,YAAY,CAACzD,MAAO,CAAC;MAE7I,CAAC,GD67BA,CAAC,EC77BK,IAAKonJ,aAAa,EAAG;QD+7B5B,AC77BCvK,CD67BA,EC77BG,CAAC+K,GD67BE,IAAK5uK,KAAK,IAAIA,KAAK,CAACue,QC77BQ,CD67BC,AC77BCslJ,ED67BE,CC77BC,CAACyK,YAAY,EAAElgJ,OAAO,EAAEm6I,gBAAgB,EAAE99I,YAAY,CAAC1D,KAAK,EAAE0D,YAAY,CAACzD,MAAO,CAAC;MAE3H,CAAC,GD67BAY,GC77BM,CD67BF,CAACoiC,QAAQ,CAAEtlD,IAAI,CAAE,GAAG;QC37BxBm/J,GAAG,CD47BF1iK,AC57BG0tK,ID47BC,EAAE,IAAI,SC57BY,CAAEhL,GAAG,CAACyK,YAAY,EAAE/F,gBAAgB,EAAE99I,YAAY,CAAC1D,KAAK,EAAE0D,YAAY,CAACzD,MAAO,CAAC;MAEvG,MD27BEhnB,KAAK,EAAEA,KAAK,CAACod,OAAO,CAAC;MCz7BvBymJ,GAAG,CD07BF,AC17BGiL,CD07BF,sBC17ByB,CAAEjL,GAAG,CAACrE,WAAW,EAAE+O,gBAAgB,EAAE1K,GAAG,CAACyK,YAAY,EAAEH,YAAa,CAAC;IAEjG,CAAC,GD07BA,CAAC,EC17BK,ID07BC,IAAKnuK,KAAK,IAAIA,KAAK,CAACkhC,SAAS,EAAG;MCx7BvC,ID07BCtZ,AC17BKsD,ID07BD,CAAC8+B,GC17BQ,GAAGv/B,ED07BH,CAAE/lB,IAAI,CAAE,GAAG,CC17BI,CAACwmB,QAAQ;MAEtC,KAAM,CDy7BJ/pB,GCz7BQlB,CDy7BJ,ACz7BK,EDy7BH,CCz7BM,CAAC,EDy7BH,ACz7BKA,CAAC,GAAGirB,QAAQ,CAAC5mB,MAAM,EAAErE,CAAC,EAAG,EAAG;QAE5C,IDw7BCD,ACx7BKsuB,KDw7BA,EAAEtuB,ACx7BK,GAAGkrB,EDw7BH,CAAC9N,KCx7BU,CAAEnd,CDw7BL,ACx7BM,CDw7BL,ACx7BO;QAE7B,EDu7BA,CAAC,CCv7BKilK,QAAQ,GAAGt3B,KAAK,CAACppH,OAAO,CAAE8J,OAAO,CAAC9E,MAAM,EAAE8E,OAAO,CAACjJ,UAAW,CAAC;QDy7BrE,ACx7BC,CDw7BA,GCx7BM8/I,GDw7BA,GCx7BM,GAAGv3B,KAAK,CAACppH,OAAO,CAAE8J,OAAO,CAACntB,IAAK,CAAC;QAC5C,EDy7BAymB,ECz7BM2gJ,EDy7BF,CAACv+G,QAAQ,CAAEtlD,IAAI,CAAE,ACz7BC,GDy7BE,ACz7BCsgK,iBAAiB,CAAE12I,OAAO,CAACtE,cAAc,EAAEk7I,QAAQ,EAAEC,MAAM,EAAE72I,OAAO,CAACjJ,UAAW,CAAC;QAC1G,IDy7BCrlB,ACz7BKouB,KDy7BA,EAAEpuB,CCz7BK,GAAG+tK,sBAAsB,CAAEtjJ,YAAa,CAAC;QAEtD,EDw7BA,CAAC,CCx7BI2jJ,aAAa,IAAIP,kBAAkB,CAAEpjJ,YAAa,CAAC,KAAK,KAAK,EAAG;UAEpEo5I,GAAG,CAAC+K,8BAA8B,CAAE/K,GAAG,CAACyK,YAAY,EAAElgJ,QAAO,EAAEm6I,iBAAgB,EAAE99I,YAAY,CAAC1D,KAAK,EAAE0D,YAAY,CAACzD,MAAO,CAAC;QAE3H,CAAC,CDs7BD,KCt7BO,IAAK6mJ,kBAAkB,CAAEpjJ,YAAa,CAAC,EAAG;QDw7BlD,ECt7BEq5I,kBAAkB,CAAC6K,iCAAiC,CAAE9K,GAAG,CAACyK,YAAY,EAAElgJ,QAAO,EAAEm6I,iBAAgB,EAAE99I,YAAY,CAAC1D,KAAK,EAAE0D,YAAY,CAACzD,MAAO,CAAC;MDw7B/I,ECt7BE,CAAC,MAAM;MDw7BT,IAAKtnB,ACt7BFmkK,GAAG,CAACgL,EDs7BI,CAAC5pK,IAAI,CAAE,IAAI,CAACgmD,MCt7BG,CDs7BK,ACt7BH44G,CDs7BI,CAACv/J,CCt7BF,CAACgqK,IDs7BO,GAAG,CAAC,EAAG1mJ,ECt7BF,EDs7BM,ACt7BJ2gJ,CDs7BKt9G,OAAO,GAAG,IAAI,CAACA,CCt7BJ,EAAExgC,IDs7BS,QCt7BG,CAAC1D,KAAK,EAAE0D,YAAY,CAACzD,MAAO,CAAC;MDw7BzGY,ECt7BE,EDs7BE,CAACujC,YAAY,GAAG,IAAI,CAACA,YAAY;MACrCvjC,ACr7BC,IDq7BG,CAACwjC,cAAc,GAAG,IAAI,CAACA,cAAc;ICn7BzC,EDq7BAxjC,IAAI,CAACyjC,MAAM,GAAG,IAAI,CAACA,MAAM;ICn7BzBw4G,EDo7BAj8I,CCp7BG,CAACymJ,EDo7BA,CAAC/iH,QAAQ,GAAG,ECp7BI,CAAEu4G,CDo7BF,CAACv4G,CCp7BI,CAACgjH,MDo7BG,MCp7BS,EAAE,IAAK,CAAC;EAE/C,IDo7BC,IAAM/iH,UAAU,GAAG,CAAC,CAAC;MAErB,KAAM,IAAMplD,GAAG,IAAI,IAAI,CAAColD,UAAU,EAAG;ECp7BtC,MDs7BE,IAAK,IAAI,CAACA,UAAU,CAAEplD,GAAG,CAAE,KAAK,IAAI,EAAGolD,UAAU,CAAEplD,GAAG,CAAE,GAAG,IAAI;ECr7BjE,IDu7BC,KCv7BQ4oK,iBAAiBA,CAAEzP,WAAW,EAAE70I,YAAY,EAAG;IAEvD,EDu7BA,ECv7BMukJ,EDu7BDtvK,ICv7BO,EDu7BD,CAACuF,ACv7BKwlB,IDu7BD,CAAE8gC,OCv7BW,GDu7BA,CAAC,ACv7BG9gC,CDu7BFnmB,MAAM,GAAG,CAAC,CCv7BI,CDu7BDsjB,ACv7BE+oC,IDu7BE,CAACpF,UAAU,GAAGA,KCv7BS,KDu7BC;ICt7BxE,EDw7BA,ECx7BKyjH,KDw7BEpnJ,CCx7BI,EAAG,CDw7BH,KCx7BS,IAAI/kB,KAAK,CAAE,yDAA0D,CAAC;ID07B3F,ACx7BC0vH,KAAK,CAAC8sC,eAAe,CAAEwE,GAAG,CAACrE,WAAW,EAAEF,WAAY,CAAC;EDw7BrD,ECt7BA,IAAK,EAAI70I,YAAY,CAAC0D,YAAY,IAAI1D,YAAY,CAAC0D,YAAY,CAACi7C,cAAc,CAAE,EAAG;ADs7BnF,EA9K2BvzB,ICtwB1B,IDswBkC,ECtwB5B,IAAIhzC,KAAK,CAAE,qEAAsE,CAAC;ADswBtD,IAkL/BkpD,ACt7BJ,MDs7BU,GAAArlD,OAAA,CAAAqlD,MAAA,0BAAAC,UAAA;EAEX,ECt7BC,IAAMi9G,GDs7BPl9G,OAAA,EAAc,KCt7BU,GAAGq3E,UAAU,CAACrpH,GAAG,CAAE0Q,YAAY,CAAC0D,YAAa,CAAC;IDs7BxD,ACr7Bb86I,IDq7Bah9G,OAAA,MCr7BI,CAAC0hH,cAAc,GAAGljJ,YAAY;IDq7BlCzkB,eAAA,OAAA+lD,MAAA;IAEbE,ACr7BA,ODq7BA,GAAAtiC,UAAA,OAAAoiC,MAAA;IAEAE,ACt7BA,IAAK,CAAEg9G,EDs7BP,CAAKv+H,QAAQ,GAAG,GCt7BQ,CDs7BJ,ACt7BK4+H,cAAc,IACrC7+I,YAAY,CAAC0D,YAAY,CAACxH,KAAK,CAACI,KAAK,KAAK0D,YAAY,CAAC1D,KAAK,IAC5D0D,YAAY,CAAC0D,YAAY,CAACxH,KAAK,CAACK,MAAM,KAAKyD,YAAY,CAACzD,MAAM,EAAG;IDs7BnEilC,ECp7BCxhC,KDo7BD,CAAKtpB,IAAI,ECp7BI,CDo7BD,ACp7BEgtB,QDo7BM,ICp7BM,CAACxH,KAAK,CAACI,KAAK,GAAG0D,YAAY,CAAC1D,KAAK;IDs7B3DklC,ECr7BCxhC,KDq7BD,CAAKyL,MCr7BQ,CAAC/H,WDq7BS,CCr7BG,CAACxH,CDq7BD,IAAI+Z,ACr7BE,CAAC1Z,MDq7BI,ACr7BE,CDq7BD,CAAC,CCr7BGyD,YAAY,CAACzD,MAAM;IDu7B7DilC,ECt7BCxhC,KDs7BD,CAAK3G,MCt7BQ,CAACqK,SDs7BO,GAAG,ACt7BE,CAAClD,GDs7BCyV,OAAO,CAAC,ACt7BE,CDs7BD,ECt7BI,IAAI;IDu7B7CurB,ACr7BA,ODq7BA,CAAK71B,uBAAuB,GAAG,IAAIsK,OAAO,CAAC,CAAC;IAE5CurB,ACr7BAgzF,ODq7BA,CAAKv5G,ICr7BO,CAAEjb,WDq7BO,CCr7BK,CAAC0D,CDq7BH5a,WCr7Be,EAAE,CAAE,CAAC,MDq7BC;IAAC,ACn7B9C,IAAM07J,GDm7BwChjH,OAAA,OCn7BvB,GAAGg9G,iBAAiB,CAACK,cAAc;EDq7B3D,ECp7BC,IAAMl7I,OAAO,GAAG2/I,sBAAsB,CAAEtjJ,YAAa,CAAC;EDo7BtDG,ECl7BA,IAAKH,GDk7BL,CAAAshC,MAAA,EAAAC,ACl7BiB,CAAC79B,SDk7BlB,GCl7B8B,CAAC3E,MAAM,KAAKrc,sBAAW,EAAG;EDk7BxD,ICh7BC,GDg7BD/G,CCh7BMynK,WDg7BN,CAAA9hH,MAAA,ACh7BwB,CAAEthC,YAAa,CAAC,EAAG;IDg7B3CtkB,GAAA,CC96BE29J,kBAAkB,CAACgK,kCAAkC,CAAEjK,GAAG,CAACrE,WAAW,EAAEqE,GAAG,CAAC4K,gBAAgB,EAAE5K,GAAG,CAAC9E,UAAU,EAAEkQ,iBAAiB,EAAE,CAAC,EAAE7gJ,OAAQ,CAAC;ID86B/IpuB,EC56BC,CAAC,ED46BF,EAED,EC96BS,OD86BTua,IAAIA,CAAEsP,MAAM,EAAEsmB,SAAS,EAAG;MAEzBuN,EC96BEmmH,GAAG,CAACoK,OD86BN,CAAAliH,MAAA,MC96B0B,CAAE83G,GAAG,CAACrE,SD86BpB31I,EC96B+B,EAAEg6I,ED86B3B,CC96B8B,CD86B5B1zH,AC96B6Bs+H,SD86BpB,OC96BoC,EAAE5K,GAAG,CAAC9E,UAAU,EAAEkQ,iBAAiB,EAAE,CAAE,CAAC;MDg7BzG,AC96BC,ID86BG,CAAC/4I,kBAAkB,CAAC3b,IAAI,CAAEsP,MAAM,CAACqM,kBAAmB,CAAC;IC56BzD,CAAC,CD86BD,IAAI,CAACpS,AC96BE,IAAK2G,YD86BS,AC96BG,CD86BFlQ,AC96BG4T,ID86BC,CAAEtE,MAAM,CAAC/F,AC96BE,CAAC0F,MAAM,KAAKpc,ID86BG,CAAC,wBC96Bc,EAAG;MD+6BtE,AC76BC,ID66BG,AC76BEygK,CD66BDz3I,iBC76BmB,CAAE3L,KD66BE,CAAClQ,IAAI,CAAEsP,CC76BI,CAAC,EAAG,ED66BF,CAACuM,uBAAwB,CAAC;MAEnE,EC76BE0tI,ED66BE,CAACp+H,eC76Be,CD66BC,AC76BAooI,GD66BGjkJ,MAAM,CAAC6b,gBAAgB,QC76BQ,CAAEm+H,GAAG,CAACrE,WAAW,EAAEqE,GAAG,CAAC2K,wBAAwB,EAAE3K,GAAG,CAAC9E,UAAU,EAAEkQ,iBAAiB,EAAE,CAAC,EAAE7gJ,OAAQ,CAAC;MD+6BvJ,AC76BC,CAAC,MD66BK,AC76BC,ID66BG;IAEZ,IC76BGy1I,GAAG,CAACoK,oBAAoB,CAAEpK,GAAG,CAACrE,WAAW,EAAEqE,GAAG,CAAC2K,wBAAwB,EAAE3K,GAAG,CAAC9E,UAAU,EAAEkQ,iBAAiB,EAAE,CAAE,CAAC;ED66BjH,IC36BC;ID26BD9oK,ACz6BA,CAAC,EDy6BD,ICz6BO;IDy6BPnG,ECv6BC,GDu6BD,EAED,CCz6BQ,IAAI6C,IDy6BZ8oC,CCz6BiB,CAAE,eDy6BFA,CAAEp3B,MAAM,EAAG,KCz6BqB,CAAC;IAEjD,EDy6BA,OAAOmpC,aAAA,CAAAqO,MAAA,iCAAyBx3C,MAAM,GAAGoH,MAAM,CAAC,CAAC;ECv6BlD,EDy6BA;EAAC;ECv6BD,EDu6BCxV,GAAA;ECt6BD,EDs6BCnG,KAAA,EAED,ACx6BSkvK,SDw6BTljI,aCx6B+BkjI,CAAEzkJ,GDw6BhBuhB,CAAEC,KAAK,EAAG,CCx6BkB,EAAG;IAE/C,EDw6BAyR,ECx6BM6rH,WDw6BN,CAAAx9G,MAAA,ICx6B4B,GAAGq3E,UAAU,CAACrpH,GAAG,CAAE0Q,WDw6BtBwhB,CCx6BmC,CAAC,GDw6B/B;ICv6B9B,EDy6BA,ECz6BM+iI,EDy6BF,CAAC94I,GCz6BO,GAAKzL,YDy6BM,ACz6BM,CDy6BLlQ,ACz6BMo2C,IDy6BF,CAAE,IAAI,CAACt6B,WAAY,CAAC,CAAC7V,ACz6BI,KAAK,CDy6BH,CAAC,CAAC,CCz6BO;ID26BjE;EAAC,ECz6BA;IDy6BAra,ACx6BA,GDw6BA,CCx6BKojK,sBAAsB,CAAC4F,mBAAmB,KAAK1kJ,YAAY,CAAC0D,YAAY,EAAG;IDw6BhFnuB,ECt6BC,GDs6BD,EAED,SAAA25B,iBAAiBA,CAAEuS,aAAa,EAAEC,cAAc,EAAG;MAElDuR,ACz6BC,IAAMvvB,SDy6BP,CAAA49B,ECz6BmB,GAAGthC,CDy6BtB,WCz6BkC,CAAC0D,YAAY,SDy6BtB+d,aAAa,EAAEC,cAAc;MAEtD,AC16BC,ID06BG,AC16BEo9H,CD06BDrzI,kBAAkB,CAAC3b,EC16BI,CAAC60J,CD06BD,CAAE,IAAI,CAAC/4I,WAAY,CAAC,CAAC7V,EC16BE,EAAG,ED06BC,CAAC,CAAC;IAE1D,IC16BG+oJ,sBAAsB,CAAC6F,sBAAsB,CAAC,CAAC;ED06BjD,ICx6BC;IDw6BDjpK,GAAA;IAAAnG,ECt6BC,GDs6BD,EAED,SAAAsa,KAAKA,CAAA,EAAG;MAEP,ACz6BC,IAAK6T,GDy6BC,IAAI,IAAI,CAAC1pB,ACz6BE,EAAG,SDy6BM,CAAC,CAAC,CAAC8V,IAAI,CAAE,IAAK,CAAC;IAE3C,ICz6BG,IAAM80J,aAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EDy6B7B,QCv6BG,OAAO9F,sBAAsB,CAAC4F,mBAAmB;ADu6BpD,EA5DmBlnI,QAAQ,AC12BxB,OAAOshI,sBAAsB,CAAC6F,sBAAsB;AD06BzD,IAAMljH,KAAK,CCz6BN/9B,EDy6BS,UCz6BG,CAACla,EDy6BU,IAAI+gB,OAAO,CAAC,CAAC,ICz6BJ,CAAE,SAAS,EAAEq6I,aAAa,CAAC;AD06BhE,IAAMljH,ICx6BF,CAAC,KDw6BW,GAAG,aAAc,IAAItyC,OAAO,CAAC,CAAC;AAC9C,IAAMuyC,ICv6BFj+B,MDu6BY,GAAG,GCv6BH,CAACza,SDu6BgB,IAAImG,GCv6BJ,CAAE,GDu6BS,CAAC,CAAC,ICv6BF,EAAEw1J,aAAa,CAAC;ADu6Bb,IAGzChjH,ICz6BFk9G,aDy6BmB,GAAA7iK,MCz6BG,CDy6BH,ACz6BI0oK,CDy6BJ/iH,iBAAA,ICz6B0B,GAAGgjH,aAAY,MDy6BzC/iH,OAAA;EAEtB,ICz6BE,KDy6BFD,kBAAA,EAA4D;IAAA,ECv6B1Dk9G,EDu6B0Dh9G,OAAA,aCv6BpC,CAAC4iH,mBAAmB,GAAGhhJ,YAAY;IDu6BC,ACr6B3D,IDq6BYq+B,GAAG,GAAA/1C,SAAA,CAAAnS,MAAA,QAAAmS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,EAAE;IAAA,ACn6BpB,IDm6BsBg2C,ACn6BjBhiC,MDm6BuB,GAAAhU,GCn6BX,CAAC0X,KDm6BU,CAAA7pB,MAAA,ACn6BE,IAAI,CAAEilK,GDm6BR9yJ,SAAA,QAAA5C,ECn6B8B,CAACy7J,MDm6B/B,GAAA74J,SAAA,MAAG,CAAC,ACn6BoD,EAAG;IDm6BvD,ECj6B/B,EDi6BiC+uB,ECj6B5BwpI,EDi6BgC,GAAAv4J,CCj6B1B,EAAG,MDi6BuB,ACj6BjB,CDi6BiBnS,GCj6BbzB,GDi6Ba,ECj6BR,CAAE,KDi6BM4T,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG,GAAG,MCj6B+C,CAAC;IDi6BhD,EC/5B3Cs4J,ED+5B6CtpI,GAAG,GAAAhvB,SAAA,AC/5B/B,CD+5B+BnS,AC/5B7BilK,MD+5B6B,QAAA9yJ,QC/5BP,CD+5BO,AC/5BN+yJ,QD+5BM31J,SAAA,CC/5BY,ED+5BZ4C,AC/5BcgU,SD+5Bd,GC/5B2B,CAAC,ED+5BzB,IAAI;IAAAzkB,AC75BxD,CAAC,MAAM,QD65BiD,OAAAqmD,iBAAA;IAExDE,EC75BC,IAAKyiH,CD65BN,GAAArlJ,EC75BY,EAAG,MD65Bf,OAAA0iC,iBAAA;IAEAE,IC75BEg9G,GD65BF,CAAK78G,kBC75BmB,CD65BA,AC75BCg9G,GD65BE,IAAI,WC75BY,GAAG,EAAE;ID+5BhDn9G,IC75BE,GD65BF,CAAKprD,CC75BG,GD65BC,CC75BGlB,CAAC,CD65BD,EC75BI,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAG,EAAG,ED65BF;IAE/BssD,MC75BGgmE,CD65BH,CAAK/lE,GAAG,AC75BA,CAAC6yG,ED65BE7yG,GAAG,UC75BU,CAAEq3G,GAAG,CAACrE,WAAW,EAAE+J,sBAAsB,CAACC,kBAAkB,CAAEvpK,CAAC,CAAG,CAAC;ID85B3FssD,MC55BG,CD45BH,CAAKI,EC55BG48G,ED45BC,GAAG,CAAC,gBC55BiB,CAACG,kBAAkB,CAAEzpK,CAAC,CAAE,KAAK4T,SAAS,EAAG;ID85BvE04C,OAAA,CAAK/mB,AC55BD+jI,ID45BK,GAAG/jI,IAAI,WC55BU,CAACkkI,kBAAkB,CAAEzpK,CAAC,CAAE,GAAG4jK,GAAG,CAAC0L,kBAAkB,CAAC,CAAC;ID65B7EhjH,OAAA,CAAK9mB,AC55BDyoI,GD45BI,GAAGzoI,GAAG,eC55Bc,CAAE8jI,sBAAsB,CAACG,kBAAkB,CAAEzpK,CAAC,CAAE,EAAEwqB,YAAY,EAAE,KAAM,CAAC;ID65BnG8hC,MC35BG,CD25BH,AC35BI,CD25BCK,KAAK,AC35BA,GD25BG,EAAE;IAEfL,OAAA,CAAKE,AC35BD,MD25BO,GAAGA,MAAM;IACpBF,OAAA,CAAKM,AC35BD,ID25BK,AC35BC0hH,GD25BE,IAAI,SC35BU,GAAG9jJ,YAAY,CAACuD,aAAa,GAAG61I,GAAG,CAAC2K,wBAAwB,GAAG3K,GAAG,CAAC4K,gBAAgB;ID65B7GliH,OAAA,CAAKO,AC55BD,IAAMqhH,KD45BI,GAAG,EAAE,CAAC,CAAC,AC55BC,GAAG5E,sBAAsB,CAACG,kBAAkB,CAAEzpK,CAAC,CAAE;ID65BvEssD,OAAA,CAAKQ,AC55BD82G,GAAG,CAACwK,MD45BO,GAAG,CAAC,CAAC,CAAC,IC55BG,CAAExK,GAAG,CAACyK,YAAY,EAAEH,YAAa,CAAC;YACtDtK,GAAG,CAACiL,uBAAuB,CAAEjL,GAAG,CAACrE,WAAW,EAAE+O,gBAAgB,EAAE1K,GAAG,CAACyK,YAAY,EAAEH,YAAa,CAAC;ID65BpG5hH,MC35BG,CD25BH,CAAKS,sBAAsB,CAAC,CAAC;IAAC,ICz5B5B,GDy5B4BT,OAAA;EAE/B,ICz5BE,CAAC,MAAM;EDy5BR3hC,MCv5BE2nG,GDu5BF,CAAAlmE,CCv5BO,CAACgzG,eDu5BR,ACv5BuB,CAAEwE,CDu5BzBv3G,ECv5B4B,CAACkzG,IDu5B7B,OCv5BwC,EAAE+J,sBAAsB,CAACC,kBAAmB,CAAC;EDu5BrF,MCr5BE,CDq5BFpjK,GCr5BOmjK,SDq5BP,CAAAl9G,YCr5B6B,CAACq9G,IDq5B9B,cCr5BgD,KAAK71J,SAAS,EAAG;IDq5BjE1N,GAAA,GCn5BGojK,sBAAsB,CAACG,kBAAkB,GAAG7F,GAAG,CAAC0L,kBAAkB,CAAC,CAAC;IDm5BvEvvK,KAAA,CCl5BGkuK,CDo5BJ,SAAA3zJ,IAAIA,CAAEsP,MAAM,EAAEsmB,CCp5Bc,CAAEo5H,ODo5BP,EAAG,aCp5B0B,CAACG,kBAAkB,EAAEj/I,YAAY,EAAE,KAAM,CAAC;MDs5B7FizB,ECp5BE,CAAC,MAAM,IDo5BT,CAAA2O,iBAAA,oBAAYxiC,MAAM,EAAEsmB,SAAS;MAE7B,IAAI,ACp5BD,CDo5BEqc,GAAG,GAAG3iC,MAAM,CAAC2iC,GAAG;MACrB,IAAI,ACp5BD,CDo5BEG,GCp5BI4hH,CDo5BA,GAAG1kJ,MAAM,CAAC8iC,IAAI,ECp5BE,GAAGliC,YAAY,CAACuD,aAAa,GAAG61I,GAAG,CAAC2K,wBAAwB,GAAG3K,GAAG,CAAC4K,gBAAgB;MDs5B5G,IAAI,ACr5BD,CDq5BEjpI,GCr5BI2oI,CDq5BA,GAAGtkJ,MAAM,CAAC2b,ECr5BE,EDq5BE,CCr5BC+jI,sBAAsB,CAACG,kBAAkB;MDs5BjE,IAAI,ACr5BD7F,CDq5BEp+H,ECr5BC,CDq5BE,ACr5BD4oI,GDq5BIxkJ,MAAM,CAAC4b,GAAG,GCr5BE,CAAEo+H,GAAG,CAACyK,YAAY,EAAEH,aAAa,CAAC;MDs5BzD,IAAI,ACr5BDtK,CDq5BEj3G,ECr5BC,CAACkiH,EDq5BG,GAAGjlJ,MAAM,CAAC+iC,KAAK,MCr5BK,CAAEi3G,GAAG,CAACrE,WAAW,EAAE+O,iBAAgB,EAAE1K,GAAG,CAACyK,YAAY,EAAEH,aAAa,CAAC;MDu5BnG,ECr5BE,EDq5BE,CAAC1hH,MAAM,GAAG5iC,MAAM,CAAC4iC,MAAM;MAC3B,ACp5BC,IDo5BG,CAACI,IAAI,GAAGhjC,MAAM,CAACgjC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAGntD,MAAM,CAACgmB,MAAM,CAAE,CAAC,CAAC,EAAEmE,MAAM,CAACgjC,IAAK,CAAC;ICl5B1E,EDo5BA,IAAI,CAACC,SAAS,GAAGjjC,MAAM,CAACijC,SAAS;ICl5BjCylE,EDm5BA,GCn5BK,CDm5BD,ACn5BE8sC,CDm5BDtyG,UAAU,GAAGljC,CCn5BG,CAAEg6I,GAAG,CDm5BF,ACn5BGrE,CDm5BFzyG,UAAU,ACn5BG,EAAE,IAAK,CAAC;EAE/C,IDm5BC,OAAO,IAAI;IAEZ;ECn5BA;EACA,EDo5BA,OCp5BSyiH,cAAcA,CAAE/kJ,YAAY,EAAEglJ,YAAY,EAAEthJ,YAAY,EAAG;ADq5BrE,ICn5BE,IAAMo7I,sBAAsB,GAAGnmC,UAAU,CAACrpH,GAAG,CAAE0Q,YAAa,CAAC;ADo5B/D,ICl5BE,IAAKglJ,YAAY,KAAK57J,SAAS,EAAG;ADm5BpC,MCj5BG25J,uBAAuB,CAAEjE,sBAAsB,CAACC,kBAAkB,EAAE/+I,YAAY,EAAEA,YAAY,CAAC6D,OAAO,EAAEu1I,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAAC9E,UAAU,EAAE,CAAE,CAAC;ADk5BrJ,ICh5BE;ADi5BF,IC/4BE,IAAK5wI,YAAY,KAAKta,SAAS,EAAG;ADg5BpC,MC94BGq7J,sBAAsB,CAAEzkJ,YAAa,CAAC;AD+4BzC,IC74BE;EDs4BD,ACp4BA;IDo4BAtkB,GAAA;ECl4BA,EDk4BAnG,KAAA,EAQA,SAAAitD,cAAcA,CAAEC,WAAW,EAAG;ECz4B9B,ID24BC,KC34BQwiH,iBAAiBA,CAAEjlJ,YAAY,EAAG;IAE1C,ED04BA,EC14BM6D,ED04BA6+B,KC14BO,GAAG1iC,ID04BE,GAAG,GAAG,EC14BI,CD04BD,AC14BE6D,ID04BE,CAAC8+B,EC14BI,WD04BS,CAAC,CAAC,GAAGF,WAAW;ICx4B7D,ED04BA,EC14BMq8G,ED04BF,CAAC/8G,GAAG,GAAG13C,OAAO,GAAG,CAAC,EC14BM,CD04BHF,EC14BMwuH,ED04BF,CAAC/1E,IAAI,CAAEF,EC14BK,CAACpzC,GAAG,CAAE0Q,KD04BE,CAAC,MC14BU,CAAC;IAC7D,ED04BA,EC14BMw+I,ED04BF,CAACj8G,cC14BkB,GAAGo2E,KD04BC,CAAC,CAAC,GC14BO,CAACrpH,GAAG,CAAEuU,OAAQ,CAAC;ID44BpD,AC14BC7D,YAAY,CAAC/W,gBAAgB,CAAE,SAAS,EAAEq1J,qBAAsB,CAAC;IAEjE,IAAM79I,QAAQ,GAAGT,YAAY,CAACS,QAAQ;ID04BvC,ACx4BC,IAAM8jJ,MAAM,GAAKvkJ,YAAY,CAACkmC,uBAAuB,KAAK,IAAM;ADy4BlE,ICx4BE,IAAMg/G,uBAAuB,GAAKzkJ,QAAQ,CAAC5mB,MAAM,GAAG,CAAG;ADy4BzD,ICv4BE,IAAK,CAAEqrK,uBAAuB,EAAG;ADw4BnC,MCt4BG,IAAK1G,iBAAiB,CAACK,cAAc,KAAKz1J,SAAS,EAAG;ADu4BzD,QCr4BIo1J,iBAAiB,CAACK,cAAc,GAAGzF,GAAG,CAAC3F,aAAa,CAAC,CAAC;EDi4BzD,IC/3BE;ID+3BF/3J,EC73BE8iK,CD63BF,gBC73BmB,CAACqB,SAAS,GAAGh8I,OAAO,CAACrG,OAAO;ID63B/CjoB,EC53BEijE,GD43BF,CC53BM,CDi4BN,ACj4BOw1E,MAAM,CAACvtH,EDi4BdoiC,MCj4BsB,EAAG,MDi4BXA,CAAA,EAAG;IC/3BhB,EDi4BA,IAAMH,YAAY,GAAGv4C,IAAI,CAAC24C,GAAG,CAAE54C,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC63C,GAAI,CAAC;MAEzD,OAAO,GAAG,GAAG,IAAI,CAACY,aAAa,CAAC,CAAC,GAAGD,YAAY;IAEjD,ACn4BC;EDm4BA;IAAAhnD,ACj4BA,GDi4BA,CCj4BK6oK,MAAM,EAAG;IDi4BdhvK,EC/3BCupK,GD+3BD,EAED,SAAA/7G,QCj4BwB,CAACg8G,MDi4BVh8G,CAAA,EAAG,SCj4ByB,GAAG,EAAE;MDm4B/C,ACj4BC,KAAM,EDi4BA14C,ECj4BI7U,CAAC,GAAG,CDi4BD,ACj4BE,EAAEA,CDi4BD,ACj4BE,CDi4BD,ECj4BI,CDi4BD2U,ACj4BE,EAAE3U,CAAC,CDi4BD,CAACotD,ACj4BG,EAAG,EDi4BF,CAC7Bz4C,IAAI,CAAC24C,GAAG,CAAE54C,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC63C,GAAI,CAAC,GAAG,IAAI,CAACG,IAAK,CAAC;IAEpD,ICl4BG,IAAKr+B,OAAO,CAACxE,OAAO,IAAIwE,OAAO,CAACxE,OAAO,CAACxlB,MAAM,GAAG,CAAC,EAAG;EDk4BvD,QCh4BGilK,sBAAsB,CAACC,kBAAkB,CAAEvpK,CAAC,CAAE,GAAG,EAAE;IDg4BtDkG,GAAA,GC93BG,KAAM,IAAI2uD,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGxmC,OAAO,CAACxE,OAAO,CAACxlB,MAAM,EAAEwwD,KAAK,EAAG,EAAG;ID83BnE90D,KAAA,EAED,CC93BKupK,QD83BL97G,YAAYA,CAAA,CC93Be,CD83BZ,AC93Ba+7G,kBAAkB,CAAEvpK,CAAC,CAAE,CAAE60D,KAAK,CAAE,GAAG+uG,GAAG,CAAC+L,iBAAiB,CAAC,CAAC;MDg4BrF,IC93BG;MD+3BH,EC73BE,CAAC,ID63BI,EC73BE,ED63BE,CAAC9iH,SAAS,GAAGl4C,IAAI,CAACY,GAAG,CAAE,IAAI,CAACi3C,MAAM,EAAE,CAAE,CAAC;IAEnD,MC73BI88G,sBAAsB,CAACC,kBAAkB,CAAEvpK,CAAC,CAAE,GAAG4jK,GAAG,CAAC+L,iBAAiB,CAAC,CAAC;ED63B3E,MC33BE;ID23BFzpK,ECz3BC,CDy3BD;IAAAnG,ACv3BA,CAAC,IDu3BD,EAED,ACz3BQ,SDy3BRotD,aAAaA,CAAA,EAAG;MAEf,ACz3BC,IAAK9+B,OAAO,CAACxE,OAAO,IAAIwE,OAAO,CAACxE,OAAO,CAACxlB,MAAM,GAAG,CAAC,EAAG;MD03BtD,ECx3BEilK,KDw3BK,IAAI,CAACz8G,SAAS,GAAGl4C,ACx3BA,CAAC40J,GDw3BG,CAAC/zJ,GAAG,CAAE,IAAI,CAACg3C,KCx3BI,CDw3BE,EAAE,ACx3BD,CDw3BG,CAAC,ACx3BF;ID03BjD,ICx3BG,KAAM,IAAIqI,OAAK,GAAG,CAAC,EAAEA,OAAK,GAAGxmC,OAAO,CAACxE,OAAO,CAACxlB,MAAM,EAAEwwD,OAAK,EAAG,EAAG;UAE/Dy0G,sBAAsB,CAACC,kBAAkB,CAAE10G,OAAK,CAAE,GAAG+uG,GAAG,CAAC+L,iBAAiB,CAAC,CAAC;IDw3BhF,ICt3BG;ADu3BJ,MCr3BG,CAAC,MAAM;ADs3BV,QCp3BIrG,sBAAsB,CAACC,kBAAkB,GAAG3F,GAAG,CAAC+L,iBAAiB,CAAC,CAAC;ADq3BvE,MCn3BG;ADo3BH,MCl3BG,IAAKD,uBAAuB,EAAG;ADm3BlC,QCj3BI,KAAM,IAAI1vK,IAAC,GAAG,CAAC,EAAEyuB,EAAE,GAAGxD,QAAQ,CAAC5mB,MAAM,EAAErE,IAAC,GAAGyuB,EAAE,EAAEzuB,IAAC,EAAG,EAAG;ADk3B1D,UCh3BK,IAAM8pK,oBAAoB,GAAG3mC,UAAU,CAACrpH,GAAG,CAAEmR,QAAQ,CAAEjrB,IAAC,CAAG,CAAC;ADi3BjE,UC/2BK,IAAK8pK,oBAAoB,CAACT,cAAc,KAAKz1J,SAAS,EAAG;EDw2B7D,UCt2BKk2J,oBAAoB,CAACT,cAAc,GAAGzF,GAAG,CAAC3F,aAAa,CAAC,CAAC;IDs2B9D/3J,GAAA,KCp2BK88D,IAAI,CAACw1E,MAAM,CAACvtH,QAAQ,EAAG;IDo2B5BlrB,KAAA,CCl2BI,CD02BJ,SAAA0tD,aAAaA,CAAEtjB,QAAQ,EAAEujB,SAAS,EAAEC,SAAS,EAAG;MAE/C1B,EC12BE,GD02BG,CAACnzC,GAAG,CAAE,CAAE,CAAC,EAAE,CAAE,CAAC,EAAE,GAAI,CAAC,CAAC+S,YAAY,CAAE,IAAI,CAACsK,uBAAwB,CAAC;MAEvEu3B,AC12BC,SD02BQ,CAAC50C,GAAG,CAAEmzC,KAAK,CAACr2C,CAAC,EAAEq2C,KAAK,CAACxqD,CAAE,CAAC,CAACsZ,cAAc,CAAE,CAAEovB,QAAQ,GAAG8hB,KAAK,CAACzgC,CAAE,CAAC;MAExEygC,AC12BC,IAAOzhC,CD02BH,CAAC1R,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,AC12BG,CAACqV,ED02BA,CAAC,CAACtC,GC12BK,GAAG,CAAC,IAAM+hJ,CD02BH,CAAE,IAAI,CAACz3I,WC12Bc,CAAE3L,WD02BQ,CAAC,AC12BI,CAAC,KAAK,KAAK,EAAG;MD42BrFmjC,EC12BE27G,OD02BO,CAACxwJ,GAAG,CAAEmzC,KAAK,CAACr2C,CAAC,EAAEq2C,CC12BA,CAAC09G,GD02BI,CAACloK,CAAE,CAAC,CAACsZ,cAAc,CAAE,CAAEovB,OC12BG,CD02BK,EC12BFy5H,CD02BK33G,EC12BF,CAAC0jH,ED02BM,CAACnkJ,CAAE,CAAC,YC12BO,CAAC,CAAC;ID42BlF,IC32BG89I,sBAAsB,CAACM,wBAAwB,GAAG,EAAE;QAEpDt3C,KAAK,CAAC8sC,eAAe,CAAEwE,GAAG,CAACrE,WAAW,EAAE+J,sBAAsB,CAACK,8BAA+B,CAAC;ID22BlG,ICz2BG,KAAM,IAAI3pK,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAGirB,QAAQ,CAAC5mB,MAAM,EAAErE,IAAC,EAAG,EAAG;AD02BjD,UCx2BK,IAAMquB,QAAO,GAAGpD,QAAQ,CAAEjrB,IAAC,CAAE;ADy2BlC,UCx2BKspK,sBAAsB,CAACM,wBAAwB,CAAE5pK,IAAC,CAAE,GAAG4jK,GAAG,CAAC0L,kBAAkB,CAAC,CAAC;ADy2BpF,UCv2BK1L,GAAG,CAACwK,gBAAgB,CAAExK,GAAG,CAACyK,YAAY,EAAE/E,sBAAsB,CAACM,wBAAwB,CAAE5pK,IAAC,CAAG,CAAC;ADw2BnG,UCt2BK,IAAMilK,QAAQ,GAAGt3B,KAAK,CAACppH,OAAO,CAAE8J,QAAO,CAAC9E,MAAM,EAAE8E,QAAO,CAACjJ,UAAW,CAAC;ADu2BzE,UCt2BK,IAAM8/I,MAAM,GAAGv3B,KAAK,CAACppH,OAAO,CAAE8J,QAAO,CAACntB,IAAK,CAAC;ADu2BjD,UCt2BK,IAAMonK,gBAAgB,GAAGvD,iBAAiB,CAAE12I,QAAO,CAACtE,cAAc,EAAEk7I,QAAQ,EAAEC,MAAM,EAAE72I,QAAO,CAACjJ,UAAU,EAAEoF,YAAY,CAAC+/B,gBAAgB,KAAK,IAAK,CAAC;EDg2BtJ,QC/1BI,IAAMp8B,OAAO,GAAG2/I,sBAAsB,CAAEtjJ,YAAa,CAAC;ID+1B1DtkB,GAAA,GC91BI09J,GAAG,CAAC+K,8BAA8B,CAAE/K,GAAG,CAACyK,YAAY,EAAElgJ,OAAO,EAAEm6I,gBAAgB,EAAE99I,YAAY,CAAC1D,KAAK,EAAE0D,YAAY,CAACzD,MAAO,CAAC;ID81B9HhnB,KAAA,CC51BI6jK,CDm2BJ,ECn2BO,CAACiL,MDm2BRjhH,WAAWA,CAAEzjB,KCn2BkB,CAAEy5H,EDm2BZ,CCn2Be,CDm2BbtvJ,ACn2BcirJ,MDm2BR,EAAG,GCn2BgB,EAAEqE,GAAG,CAACnE,iBAAiB,GAAGz/J,IAAC,EAAE4jK,GAAG,CAACyK,YAAY,EAAE/E,sBAAsB,CAACM,wBAAwB,CAAE5pK,IAAC,CAAG,CAAC;MDq2BpJ,ECn2BE,EDm2BE,CAACytD,aAAa,CAAEtjB,QAAQ,EAAE+hB,UAAU,EAAEC,UAAW,CAAC;MAEtD,ECn2BEy3G,GAAG,CAACwK,CDm2BC95J,MAAM,CAACuG,QCn2BQ,CAAE+oJ,CDm2BA,CAAEz3G,CCn2BC,CAACkiH,QDm2BQ,EAAEniH,ECn2BE,EAAE,IAAK,CAAC,CDm2BC,CAAC;IAEnD,ICn2BG,IAAK1hC,YAAY,CAACsD,WAAW,EAAG;UAE/Bw7I,sBAAsB,CAACO,wBAAwB,GAAGjG,GAAG,CAAC0L,kBAAkB,CAAC,CAAC;IDm2B9E,MCl2BIrB,wBAAwB,CAAE3E,sBAAsB,CAACO,wBAAwB,EAAEr/I,YAAY,EAAE,IAAK,CAAC;ADm2BpG,QCj2BI;ADk2BJ,QCh2BI8nG,KAAK,CAAC8sC,eAAe,CAAEwE,GAAG,CAACrE,WAAW,EAAE,IAAK,CAAC;ADi2BlD,MC/1BG;ADg2BH,IC91BE;AD+1BF;AACA,IC91BE;AD+1BF;AACA,IC91BE,IAAKwP,MAAM,EAAG;AD+1BhB,MC71BGz8C,KAAK,CAAC6rC,WAAW,CAAEyF,GAAG,CAAC7E,gBAAgB,EAAEiK,iBAAiB,CAACK,cAAe,CAAC;AD81B9E,MC71BG8B,oBAAoB,CAAEvH,GAAG,CAAC7E,gBAAgB,EAAE1wI,OAAQ,CAAC;AD81BxD,MC51BG,KAAM,IAAIruB,IAAC,GAAG,CAAC,EAAEA,IAAC,GAAG,CAAC,EAAEA,IAAC,EAAG,EAAG;AD61BlC,QC31BI,IAAKquB,OAAO,CAACxE,OAAO,IAAIwE,OAAO,CAACxE,OAAO,CAACxlB,MAAM,GAAG,CAAC,EAAG;AD41BzD,UC11BK,KAAM,IAAIwwD,OAAK,GAAG,CAAC,EAAEA,OAAK,GAAGxmC,OAAO,CAACxE,OAAO,CAACxlB,MAAM,EAAEwwD,OAAK,EAAG,EAAG;AD21BrE,YCz1BM04G,uBAAuB,CAAEjE,sBAAsB,CAACC,kBAAkB,CAAEvpK,IAAC,CAAE,CAAE60D,OAAK,CAAE,EAAErqC,YAAY,EAAE6D,OAAO,EAAEu1I,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAAC5E,2BAA2B,GAAGh/J,IAAC,EAAE60D,OAAM,CAAC;AD01BlL,UCx1BK;ADy1BL,QCv1BI,CAAC,MAAM;ADw1BX,UCt1BK04G,uBAAuB,CAAEjE,sBAAsB,CAACC,kBAAkB,CAAEvpK,IAAC,CAAE,EAAEwqB,YAAY,EAAE6D,OAAO,EAAEu1I,GAAG,CAACnE,iBAAiB,EAAEmE,GAAG,CAAC5E,2BAA2B,GAAGh/J,IAAC,EAAE,CAAE,CAAC;ADu1BpK,QCr1BI;ADs1BJ,MCp1BG;ADq1BH,MCn1BG,IAAK4kK,2BAA2B,CAAEv2I,OAAQ,CAAC,EAAG;ADo1BjD,QCl1BIw2I,cAAc,CAAEjB,GAAG,CAAC7E,gBAAiB,CAAC;ADm1B1C,MCj1BG;ADk1BH,MCh1BGzsC,KAAK,CAACowC,aAAa,CAAC,CAAC;ADi1BxB,IC/0BE,CAAC,MAAM,IAAKgN,uBAAuB,EAAG;ADg1BxC,MC90BG,KAAM,IAAI1vK,IAAC,GAAG,CAAC,EAAEyuB,IAAE,GAAGxD,QAAQ,CAAC5mB,MAAM,EAAErE,IAAC,GAAGyuB,IAAE,EAAEzuB,IAAC,EAAG,EAAG;AD+0BzD,QC70BI,IAAMwtK,UAAU,GAAGviJ,QAAQ,CAAEjrB,IAAC,CAAE;AD80BpC,QC70BI,IAAM8pK,qBAAoB,GAAG3mC,UAAU,CAACrpH,GAAG,CAAE0zJ,UAAW,CAAC;AD80B7D,QC50BIl7C,KAAK,CAAC6rC,WAAW,CAAEyF,GAAG,CAAC9E,UAAU,EAAEgL,qBAAoB,CAACT,cAAe,CAAC;AD60B5E,QC50BI8B,oBAAoB,CAAEvH,GAAG,CAAC9E,UAAU,EAAE0O,UAAW,CAAC;AD60BtD,QC50BID,uBAAuB,CAAEjE,sBAAsB,CAACC,kBAAkB,EAAE/+I,YAAY,EAAEgjJ,UAAU,EAAE5J,GAAG,CAACnE,iBAAiB,GAAGz/J,IAAC,EAAE4jK,GAAG,CAAC9E,UAAU,EAAE,CAAE,CAAC;AD60BhJ,QC30BI,IAAK8F,2BAA2B,CAAE4I,UAAW,CAAC,EAAG;AD40BrD,UC10BK3I,cAAc,CAAEjB,GAAG,CAAC9E,UAAW,CAAC;AD20BrC,QCz0BI;AD00BJ,MCx0BG;ADy0BH,MCv0BGxsC,KAAK,CAACowC,aAAa,CAAC,CAAC;ADw0BxB,ICt0BE,CAAC,MAAM;ADu0BT,MCr0BG,IAAIkN,aAAa,GAAGhM,GAAG,CAAC9E,UAAU;ADs0BrC,MCp0BG,IAAKt0I,YAAY,CAAC4F,qBAAqB,IAAI5F,YAAY,CAACoF,wBAAwB,EAAG;ADq0BtF,QCn0BIggJ,aAAa,GAAGplJ,YAAY,CAAC4F,qBAAqB,GAAGwzI,GAAG,CAACpF,UAAU,GAAGoF,GAAG,CAACnF,gBAAgB;ADo0B9F,MCl0BG;ADm0BH,MCj0BGnsC,KAAK,CAAC6rC,WAAW,CAAEyR,aAAa,EAAE5G,iBAAiB,CAACK,cAAe,CAAC;EDwxBtE,ICvxBE8B,oBAAoB,CAAEyE,aAAa,EAAEvhJ,OAAQ,CAAC;IDuxBhDnoB,ECrxBE,CDqxBF,GCrxBOmoB,OAAO,CAACxE,OAAO,IAAIwE,OAAO,CAACxE,OAAO,CAACxlB,MAAM,GAAG,CAAC,EAAG;IDqxBvDtE,ICnxBG,CDmxBH,EA0CA,EC7zBS,IAAI80D,GD6zBbhH,IC7zBkB,GAAG,CAAC,EAAEgH,GD6zBXhH,CAAEC,GC7zBc,GAAGz/B,GD6zBR,EAAE0/B,EC7zBa,CAAClkC,OD6zBJ,AC7zBW,CAACxlB,CD6zBVuR,CAAC,EAAEnU,CAAC,CC7zBY,CD6zBVqlB,CC7zBY+tC,ID6zBP,EAAE9tC,CC7zBU,EAAG,EAAG,CD6zBV,EAAG;MAE3D,IAAI,AC7zBDwmJ,CD6zBE/gH,MAAM,GAAGsB,SAAS,GAAGC,CC7zBA,CAAEu7G,QD6zBQ,cC7zBc,CAACC,kBAAkB,CAAE10G,OAAK,CAAE,EAAErqC,YAAY,EAAE6D,OAAO,EAAEu1I,GAAG,CAACnE,iBAAiB,EAAEmQ,aAAa,EAAE/6G,OAAM,CAAC;MD+zBpJ,EC7zBE,ED6zBG,IAAI,CAACjI,IAAI,KAAK,IAAI,EAAG;MC3zBzB,CAAC,CD6zBD,IAAI,CAACA,AC7zBE,ID6zBE,GAAG;QC3zBX2gH,ED4zBAnpJ,OAAO,EAAE,IAAI,QC5zBU,CAAEklJ,sBAAsB,CAACC,kBAAkB,EAAE/+I,YAAY,EAAE6D,OAAO,EAAEu1I,GAAG,CAACnE,iBAAiB,EAAEmQ,aAAa,EAAE,CAAE,CAAC;MAErI,ID2zBC9hH,SAAS,EAAE,CAAC;MCzzBb,ID0zBCC,AC1zBI62G,UD0zBM,EAAE,CAAC,cC1zBkB,CAAEv2I,OAAQ,CAAC,EAAG;QAE7Cw2I,EDyzBA72G,OAAO,EAAE,CAAC,ECzzBI,CAAE4hH,aAAc,CAAC;MAEhC,IDwzBC3hH,OAAO,EAAE,CAAC;MCtzBXqkE,IDuzBCxrG,CCvzBI,CAAC47I,GDuzBA,EAAE,CAAC,OCvzBU,CAAC,CAAC;IAEtB,MDszBE37I,MAAM,EAAE;QACT,CAAC;ICrzBF,EDuzBA;MAEA,IAAI,CAAC6lC,IAAI,CAACxoC,OAAO,GAAG,IAAI;ICvzBxB,EDwzBA,ECxzBKoG,EDwzBD,CAACoiC,IAAI,CAACkB,ICxzBO,CAAChgC,IDwzBC,GAAGggC,ICxzBO,EAAG,GDwzBD;MAC/B,ACvzBCmhH,IDuzBG,CAACriH,IAAI,CAACmB,UAAU,ECvzBG,CDuzBAA,ACvzBEvjC,UDuzBQ,ECvzBK,CAAC;IAEvC,EDszBA,IAAI,CAACoiC,IAAI,CAACoB,OAAO,GAAGp4C,CAAC;ECpzBtB,IDqzBC,IAAI,CAACg3C,IAAI,CAACqB,OAAO,GAAGxsD,CAAC;ECnzBtB,IDozBC,IAAI,CAACmrD,ACpzBGijH,IDozBC,CAAC/oJ,KAAK,GAAGA,KAAK,MCpzBS+oJ,CAAErlJ,YAAY,EAAG;IAEjD,EDmzBA,ECnzBMS,EDmzBF,CAAC2hC,IAAI,CAAC7lC,ACnzBI,GAAGyD,GDmzBD,GAAGzD,MAAM,ACnzBI,CAACkE,QAAQ;IAEtC,EDmzBA,GCnzBM,CDmzBF,CAAC8hC,ECnzBK/sD,CAAC,GAAG,CAAC,EAAEyuB,EAAE,GAAGxD,QDmzBK,ACnzBG,CDmzBF,ACnzBG5mB,CDmzBF,KCnzBQ,EAAErE,CAAC,GAAGyuB,EAAE,EAAEzuB,CAAC,EAAG,EAAG;IDqzBvD,ECnzBE,IAAMquB,OAAO,GAAGpD,QAAQ,CAAEjrB,CAAC,CAAE;EDmzB9B,ICjzBC,IAAK4kK,2BAA2B,CAAEv2I,OAAQ,CAAC,EAAG;IDizB/CnoB,GAAA,CC/yBE,IAAM4pK,UAAU,GAAGhL,aAAa,CAAEt6I,YAAa,CAAC;ID+yBlDzqB,IC9yBE,CD8yBF,EAED,CChzBSyiK,QDgzBTt0G,IChzBqB,GAAGi1E,QDgzBTj1E,CAAA,CChzBmB,CDgzBhB,AChzBiBp0C,GAAG,CAAEuU,OAAQ,CAAC,CAACg7I,cAAc;MDkzB/D,EChzBE/2C,EDgzBG,GChzBE,CDgzBE,AChzBD6rC,CDgzBEvxG,IAAI,KAAK,CChzBA,CAAEkjH,EDgzBE,EAAG,MChzBK,EAAEtN,YAAa,CAAC;QDkzB9C,ACjzBCqC,IDizBG,CAACj4G,IAAI,CAACxoC,ICjzBK,CAAE0rJ,EDizBA,GAAG,KAAK,ACjzBG,CAAC;MDmzB9B,EClzBEx9C,KAAK,CAACowC,aAAa,CAAC,CAAC;MDozBvB,AClzBC,IDkzBG,CAAC31G,sBAAsB,CAAC,CAAC;IAE9B,AClzBC;EDkzBA,AChzBD;EAEA,ED8yBC7mD,EC9yBK6pK,CD8yBL,oBC9yB0B,GAAG,EAAE;EAChC,ED6yBChwK,EC7yBKiwK,GD6yBL,EAED,SAAAjjH,OC/yB2B,GAAG,EAAE,UD+yBVA,CAAA,EAAG;EC7yBzB,ID+yBC,IAAMxnB,CC/yBE0qI,GD+yBE,GAAG,IAAI,CAAC1qI,IAAI,cC/yBe0qI,CAAEzlJ,YAAY,EAAG;IAEtD,ED8yBA,EC9yBKA,ED8yBD6a,GAAG,GAAGE,IAAI,AC9yBG,CAACpX,ED8yBDxZ,IAAI,CAAC24C,AC9yBG,GD8yBA,AC9yBG,CD8yBD54C,AC9yBE,EAAG,KD8yBE,GAAG,GAAG,GAAG,IAAI,CAAC63C,GAAI,CAAC,GAAG,IAAI,CAACG,IAAI;MACjE,AC7yBC,ID6yBG3lC,AC7yBE6mJ,MD6yBI,GAAG,CAAC,GAAGvoI,GAAG,EC7yBI,CAAE7a,YAAa,CAAC,KAAK,KAAK,EAAG;MD8yBrD,EC5yBE,ED4yBE1D,EC5yBImE,GD4yBC,GAAG,EC5yBI,ED4yBA,CAACuhC,AC5yBEhiC,MD4yBI,GAAGzD,GC5yBK,CAACkE,ED4yBA,MC5yBQ;MD6yBxC,EC5yBE,ED4yBEka,EC5yBIre,ED4yBA,GAAG,AC5yBE,CD4yBA,EC5yBG0D,CD4yBA,GAAG1D,KAAK,GC5yBI,CAACA,KAAK;MD6yBlC,EC5yBE,ED4yBI8lC,EC5yBE7lC,ED4yBE,GAAG,CC5yBC,GD4yBG,AC5yBAyD,CD4yBCoiC,IAAI,OC5yBO,CAAC7lC,MAAM;MD8yBpC,EC7yBE,ED6yBG,EC7yBCyf,ED6yBG,CAAComB,CC7yBA,GD6yBI,AC7yBDg3G,GAAG,CAACsM,CD6yBE,IAAI,IAAI,IAAI,CAACtjH,EC7yBC,ED6yBG,CAACxoC,OAAO,EAAG;QAE9C,AC9yBC,ID8yBK0pC,AC9yBCqiH,SD8yBQ,CC9yBE,ED8yBCvjH,CC9yBEpiC,GD8yBE,CAACsjC,QC9yBS,CD8yBA,AC9yBC//B,aAAa,GAAG61I,GAAG,CAAC2K,wBAAwB,GAAG3K,GAAG,CAAC4K,gBAAgB;QACnG,ED8yBAzgH,EC9yBMu7G,QD8yBI,GAAG18G,I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GAAG,KAAK;MDowB3B,EClwBC,IAAI,CDkwBE,AClwBD6rI,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC;QDmwBtB5zK,AClwBA,IDkwBI,AClwBA,CAAC0zK,CDkwBC,IClwBI,CAACG,IDkwBI,MClwBM,GAAG;QDmwBxBtwK,ECnwB0BuwK,EDmwBtB,EAAE,IAAI,ACnwBwB,CDmwBvBvwK,CCnwByB,GDmwBrB;QACf+f,ACpwB0C,CAAC,IDowBtC,EAAE,IAAI,CAACA,KAAK,CAAC+vB,MAAM,CAAC,CAAC;MClwB3B,EDmwBC2c,OAAO,EAAE,IAAI,CAACA;MACf,AClwBA,CDkwBC,MClwBM,IAAI,CAAC0jH,KAAK;IDowBlB,AClwBA;EDkwBC,AClwBA;ADkwBA,IClwBA1uK,GAAA;ADkwBA,IAIIkrD,ACtwBJrxD,GDswBO,ECtwBP,CDswBO0G,CCpwBR,MDowBQ,CAAA2qD,ECpwBR6jH,CDowBQ,gBCpwBSA,CAAA,EAAG;EDswBpB,ICpwBC,IAAK,CDowBN7jH,GCpwBU,CDowBG5sC,ACpwBFkwJ,KDowBO,EAAyB,GCpwBtB,KAAK,IAAI,EAAG;IDowBU,IAAvBnvI,AClwBlB,IDkwBsB,AClwBlB,CAACmvI,EDkwBiBl+J,QClwBP,CDkwBO,CAAAnS,CClwBJ,IAAIyiE,CDkwBA,QAAAtwD,OClwBK,CAAC,CDkwBN,AClwBO,QDkwBP5C,SAAA,GAAA4C,SAAA,MAAG,CAAC;IAAA,IAAEgvB,ACjwB5B,GDiwB+B,CCjwB3B,CAACkvI,CDiwB0Bl+J,SAAA,ACjwBhB,CDiwBgBnS,ACjwBf4lB,MDiwBe,QAAAzT,ECjwBC,GAAG,IDiwBJ,CCjwBS,ODiwBT5C,SAAA,GAAA4C,SAAA,MAAG,IAAI;IAAAzQ,IChwBtC,IAAI,CAAC2uK,MDgwBiC,IChwBvB,CAAC3rI,EDgwBsBqoB,GAAA,EChwBf,GAAG,KAAK;IDkwBhC,IAAI,ACjwBH,CDiwBIC,GCjwBA,CAACqjH,CDiwBI,GAAG,IAAI,ECjwBD,CAACQ,iBAAiB,GAAG,KAAK;IDmwB1C,IAAI,AClwBH,CDkwBIzwK,GClwBA,CDkwBI,AClwBHiw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AIhS,IAAI,CAAC,CAAC;AACxC,ECzmBC,EDymBKiS,OCzmBIwmH,EDymBK,GAAG,aAAc,GCzmBDA,CDymBKxiJ,ACzmBHotB,MDymBS,CAAC,CAAC,ACzmBH,EAAEla,QAAQ,EAAG;ADymBT,IAEvC+oB,ACzmBJ,IAAK/oB,QAAQ,CDymBI,ACzmBHyK,GDymBG7zC,GCzmBG,EAAG,EDymBN,CAAAmyD,aAAA,0BAAAC,MAAA;EAElB,ICzmBE9O,KDymBF6O,GCzmBU,CAACte,MAAM,CAACv6C,GDymBL45B,ECzmBU,GAAGkW,GDymBL,EAAEA,GCzmBW,CAACyK,IDymBJ,EAAElsB,ACzmBQ,KDymBH,EAAG;IAAA,ACvmBxC,IDumBwC0qC,OAAA;ECrmBzC,EDqmByC/yD,eAAA,OAAA6yD,aAAA;ECnmBzC,EDqmBCE,OAAA,ACrmBQsmH,GDqmBR11J,UAAA,OAAAkvC,GCrmB+BwmH,CAAEr1H,QAAQ,CDqmBzC,CCrmB2Cla,EDqmBpClW,MCrmB4C,EDqmBpC,ACrmBuC,EDqmBrCkW,QAAQ;IAEzBipB,ACrmBA,IAAMqoC,GDqmBN,CAAKrnE,CCrmBM,GAAGqpG,UAAU,CDqmBJ,ACrmBKrpH,GDqmBF,ACrmBK,CAAE+1B,GDqmBH,KCrmBY,CAAC,CAACsxD,KAAK;IDumB9CroC,ACrmBA/O,ODqmBA,CAAKvd,ACrmBG,CAACq5F,aDqmBU,GAAG,CCrmBI,CAAC9lI,EDqmBDi4D,GCrmBM,CAAC/qC,oBDqmBiB,CAAE,ACrmBE,CAAEk0E,GDqmBAjoF,ECrmBK,CAACkd,SDqmBM,CAAEhI,CCrmBI,CAAC,GDqmBA,GAAG,EAAG,CAAC,EAAE,EAAG,CAAC;IACxF0qC,ACrmBA/O,ODqmBA,CAAKtd,ACrmBG,CAACq5F,YDqmBS,ACrmBG,CAAC/lI,EDqmBD,GCrmBM,CDqmBF,ECrmBKohG,KAAK,CAACrB,MAAM,CAAC9pE,MAAM,CAACuP,IAAI;IDsmBtDuzB,ACrmBA/O,ODqmBA,CAAKgP,ACrmBG,CAACgtE,WDqmBQ,ACrmBG,CAAChmI,EDqmBD,GCrmBM,CDqmBF,ECrmBKohG,KAAK,CAACrB,MAAM,C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","file":"scripts.cd665a19.js","sourceRoot":"..\\src","sourcesContent":["/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '172';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst RGBDepthPacking = 3202;\nconst RGDepthPacking = 3203;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction probeAsync( gl, sync, interval ) {\n\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tfunction probe() {\n\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\n\n\t\t\t\tcase gl.WAIT_FAILED:\n\t\t\t\t\treject();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\n\t\t\t\t\tsetTimeout( probe, interval );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetTimeout( probe, interval );\n\n\t} );\n\n}\n\nfunction toNormalizedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\n\t// Convert [-1, 1] to [0, 1] projection matrix\n\tm[ 2 ] = 0.5 * m[ 2 ] + 0.5 * m[ 3 ];\n\tm[ 6 ] = 0.5 * m[ 6 ] + 0.5 * m[ 7 ];\n\tm[ 10 ] = 0.5 * m[ 10 ] + 0.5 * m[ 11 ];\n\tm[ 14 ] = 0.5 * m[ 14 ] + 0.5 * m[ 15 ];\n\n}\n\nfunction toReversedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\tconst isPerspectiveMatrix = m[ 11 ] === - 1;\n\n\t// Reverse [0, 1] projection matrix\n\tif ( isPerspectiveMatrix ) {\n\n\t\tm[ 10 ] = - m[ 10 ] - 1;\n\t\tm[ 14 ] = - m[ 14 ];\n\n\t} else {\n\n\t\tm[ 10 ] = - m[ 10 ];\n\t\tm[ 14 ] = - m[ 14 ] + 1;\n\n\t}\n\n}\n\nconst LINEAR_REC709_TO_XYZ = /*@__PURE__*/ new Matrix3().set(\n\t0.4123908, 0.3575843, 0.1804808,\n\t0.2126390, 0.7151687, 0.0721923,\n\t0.0193308, 0.1191948, 0.9505322\n);\n\nconst XYZ_TO_LINEAR_REC709 = /*@__PURE__*/ new Matrix3().set(\n\t3.2409699, - 1.5373832, - 0.4986108,\n\t- 0.9692436, 1.8759675, 0.0415551,\n\t0.0556301, - 0.2039770, 1.0569715\n);\n\nfunction createColorManagement() {\n\n\tconst ColorManagement = {\n\n\t\tenabled: true,\n\n\t\tworkingColorSpace: LinearSRGBColorSpace,\n\n\t\t/**\n\t\t * Implementations of supported color spaces.\n\t\t *\n\t\t * Required:\n\t\t *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\n\t\t *\t- whitePoint: reference white [ x y ]\n\t\t *\t- transfer: transfer function (pre-defined)\n\t\t *\t- toXYZ: Matrix3 RGB to XYZ transform\n\t\t *\t- fromXYZ: Matrix3 XYZ to RGB transform\n\t\t *\t- luminanceCoefficients: RGB luminance coefficients\n\t\t *\n\t\t * Optional:\n\t\t *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }\n\t\t *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\n\t\t *\n\t\t * Reference:\n\t\t * - https://www.russellcottrell.com/photo/matrixCalculator.htm\n\t\t */\n\t\tspaces: {},\n\n\t\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\t\treturn color;\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = SRGBToLinear( color.r );\n\t\t\t\tcolor.g = SRGBToLinear( color.g );\n\t\t\t\tcolor.b = SRGBToLinear( color.b );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].primaries !== this.spaces[ targetColorSpace ].primaries ) {\n\n\t\t\t\tcolor.applyMatrix3( this.spaces[ sourceColorSpace ].toXYZ );\n\t\t\t\tcolor.applyMatrix3( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ targetColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = LinearToSRGB( color.r );\n\t\t\t\tcolor.g = LinearToSRGB( color.g );\n\t\t\t\tcolor.b = LinearToSRGB( color.b );\n\n\t\t\t}\n\n\t\t\treturn color;\n\n\t\t},\n\n\t\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t\t},\n\n\t\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t\t},\n\n\t\tgetPrimaries: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].primaries;\n\n\t\t},\n\n\t\tgetTransfer: function ( colorSpace ) {\n\n\t\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\t\treturn this.spaces[ colorSpace ].transfer;\n\n\t\t},\n\n\t\tgetLuminanceCoefficients: function ( target, colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn target.fromArray( this.spaces[ colorSpace ].luminanceCoefficients );\n\n\t\t},\n\n\t\tdefine: function ( colorSpaces ) {\n\n\t\t\tObject.assign( this.spaces, colorSpaces );\n\n\t\t},\n\n\t\t// Internal APIs\n\n\t\t_getMatrix: function ( targetMatrix, sourceColorSpace, targetColorSpace ) {\n\n\t\t\treturn targetMatrix\n\t\t\t\t.copy( this.spaces[ sourceColorSpace ].toXYZ )\n\t\t\t\t.multiply( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t},\n\n\t\t_getDrawingBufferColorSpace: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].outputColorSpaceConfig.drawingBufferColorSpace;\n\n\t\t},\n\n\t\t_getUnpackColorSpace: function ( colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].workingColorSpaceConfig.unpackColorSpace;\n\n\t\t}\n\n\t};\n\n\t/******************************************************************************\n\t * sRGB definitions\n\t */\n\n\tconst REC709_PRIMARIES = [ 0.640, 0.330, 0.300, 0.600, 0.150, 0.060 ];\n\tconst REC709_LUMINANCE_COEFFICIENTS = [ 0.2126, 0.7152, 0.0722 ];\n\tconst D65 = [ 0.3127, 0.3290 ];\n\n\tColorManagement.define( {\n\n\t\t[ LinearSRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: LinearTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\tworkingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t\t[ SRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: SRGBTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t} );\n\n\treturn ColorManagement;\n\n}\n\nconst ColorManagement = /*@__PURE__*/ createColorManagement();\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.renderTarget = null; // assign texture to a render target\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.renderTarget = source.renderTarget;\n\t\tthis.isRenderTargetTexture = source.isRenderTargetTexture;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\t\tthis.w /= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\t\tthis.w = e[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\t\tthis.w = clamp( this.w, min.w, max.w );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\t\tthis.w = clamp( this.w, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\t\t\tthis.textures[ i ].renderTarget = this;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis._depthTexture = null;\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tset depthTexture( current ) {\n\n\t\tif ( this._depthTexture !== null ) this._depthTexture.renderTarget = null;\n\t\tif ( current !== null ) current.renderTarget = this;\n\n\t\tthis._depthTexture = current;\n\n\t}\n\n\tget depthTexture() {\n\n\t\treturn this._depthTexture;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\t\t\tthis.textures[ i ].renderTarget = this;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in Data3DTexture directly.\n\t\t//\n\t\t//\tconst texture = new THREE.Data3DTexture( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y &&\n\t\t\tpoint.z >= this.min.z && point.z <= this.max.z;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y &&\n\t\t\tbox.max.z >= this.min.z && box.min.z <= this.max.z;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// make sure descendants are updated if required\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tchild.updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// make sure descendants are updated\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxInstanceCount = this._maxInstanceCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nconst _v40 = /*@__PURE__*/ new Vector4();\nconst _v41 = /*@__PURE__*/ new Vector4();\nconst _v42 = /*@__PURE__*/ new Vector4();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic getInterpolatedAttribute( attr, i1, i2, i3, barycoord, target ) {\n\n\t\t_v40.setScalar( 0 );\n\t\t_v41.setScalar( 0 );\n\t\t_v42.setScalar( 0 );\n\n\t\t_v40.fromBufferAttribute( attr, i1 );\n\t\t_v41.fromBufferAttribute( attr, i2 );\n\t\t_v42.fromBufferAttribute( attr, i3 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( _v40, barycoord.x );\n\t\ttarget.addScaledVector( _v41, barycoord.y );\n\t\ttarget.addScaledVector( _v42, barycoord.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\t// onBeforeRender and onBeforeCompile only supported in WebGLRenderer\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {\n\n\t\tconsole.warn( 'Material: onBuild() has been removed.' ); // @deprecated, r166\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.indirect = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetIndirect( indirect ) {\n\n\t\tthis.indirect = indirect;\n\n\t\treturn this;\n\n\t}\n\n\tgetIndirect() {\n\n\t\treturn this.indirect;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute === undefined ) {\n\n\t\t\tconst position = [];\n\n\t\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t} else {\n\n\t\t\tconst l = Math.min( points.length, positionAttribute.count ); // make sure data do not exceed buffer size\n\n\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tpositionAttribute.setXYZ( i, point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tif ( points.length > positionAttribute.count ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry.' );\n\n\t\t\t}\n\n\t\t\tpositionAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tconst barycoord = new Vector3();\n\t\tTriangle.getBarycoord( _intersectionPoint, _vA$1, _vB$1, _vC$1, barycoord );\n\n\t\tif ( uv ) {\n\n\t\t\tintersection.uv = Triangle.getInterpolatedAttribute( uv, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\tintersection.uv1 = Triangle.getInterpolatedAttribute( uv1, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\tintersection.normal = Triangle.getInterpolatedAttribute( normal, a, b, c, barycoord, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\t\tintersection.barycoord = barycoord;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * @param {number} focalLength - Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t *\n\t * @returns {number}\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t *\n\t * @param {number} distance\n\t * @param {Vector2} minTarget\n\t * @param {Vector2} maxTarget\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t *\n\t * @param {number} distance\n\t * @param {Vector2} target - Vector2 target used to store result where x is width and y is height.\n\t * @returns {Vector2}\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t *\n\t * @param {number} fullWidth\n\t * @param {number} fullHeight\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} width\n\t * @param {number} height\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tremoveLevel( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0; i < levels.length; i ++ ) {\n\n\t\t\tif ( levels[ i ].distance === distance ) {\n\n\t\t\t\tconst removedElements = levels.splice( i, 1 );\n\t\t\t\tthis.remove( removedElements[ 0 ].object );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$5.copy( this.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$5 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$4 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ).fill( 1 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$3.center.set( 0, 0, 0 );\n\t\t_sphere$3.radius = 0.7071067811865476;\n\t\t_sphere$3.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction ascIdSort( a, b ) {\n\n\treturn a - b;\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( start, count, z, index ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\t\t\t\tindex: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = start;\n\t\titem.count = count;\n\t\titem.z = z;\n\t\titem.index = index;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _forward = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\n// safely copies array contents to a potentially smaller array\nfunction copyArrayContents( src, target ) {\n\n\tif ( src.constructor !== target.constructor ) {\n\n\t\t// if arrays are of a different type (eg due to index size increasing) then data must be per-element copied\n\t\tconst len = Math.min( src.length, target.length );\n\t\tfor ( let i = 0; i < len; i ++ ) {\n\n\t\t\ttarget[ i ] = src[ i ];\n\n\t\t}\n\n\t} else {\n\n\t\t// if the arrays use the same data layout we can use a fast block copy\n\t\tconst len = Math.min( src.length, target.length );\n\t\ttarget.set( new src.constructor( src.buffer, 0, len ) );\n\n\t}\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxInstanceCount() {\n\n\t\treturn this._maxInstanceCount;\n\n\t}\n\n\tget instanceCount() {\n\n\t\treturn this._instanceInfo.length - this._availableInstanceIds.length;\n\n\t}\n\n\tget unusedVertexCount() {\n\n\t\treturn this._maxVertexCount - this._nextVertexStart;\n\n\t}\n\n\tget unusedIndexCount() {\n\n\t\treturn this._maxIndexCount - this._nextIndexStart;\n\n\t}\n\n\tconstructor( maxInstanceCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\t// stores visible, active, and geometry id per instance and reserved buffer ranges for geometries\n\t\tthis._instanceInfo = [];\n\t\tthis._geometryInfo = [];\n\n\t\t// instance, geometry ids that have been set as inactive, and are available to be overwritten\n\t\tthis._availableInstanceIds = [];\n\t\tthis._availableGeometryIds = [];\n\n\t\t// used to track where the next point is that geometry should be inserted\n\t\tthis._nextIndexStart = 0;\n\t\tthis._nextVertexStart = 0;\n\t\tthis._geometryCount = 0;\n\n\t\t// flags\n\t\tthis._visibilityChanged = true;\n\t\tthis._geometryInitialized = false;\n\n\t\t// cached user options\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\t// buffers for multi draw\n\t\tthis._multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\t\tthis._indirectTexture = null;\n\t\tthis._colorsTexture = null;\n\n\t\tthis._initMatricesTexture();\n\t\tthis._initIndirectTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initIndirectTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\tconst indirectArray = new Uint32Array( size * size );\n\t\tconst indirectTexture = new DataTexture( indirectArray, size, size, RedIntegerFormat, UnsignedIntType );\n\n\t\tthis._indirectTexture = indirectTexture;\n\n\t}\n\n\t_initColorsTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\t// 4 floats per RGBA pixel initialized to white\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\n\n\t\tthis._colorsTexture = colorsTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\t// Reserve last u16 index for primitive restart.\n\t\t\t\tconst indexArray = maxVertexCount > 65535\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `THREE.BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvalidateInstanceId( instanceId ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tif ( instanceId < 0 || instanceId >= instanceInfo.length || instanceInfo[ instanceId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid instanceId ${instanceId}. Instance is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\tvalidateGeometryId( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId < 0 || geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid geometryId ${geometryId}. Geometry is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddInstance( geometryId ) {\n\n\t\tconst atCapacity = this._instanceInfo.length >= this.maxInstanceCount;\n\n\t\t// ensure we're not over geometry\n\t\tif ( atCapacity && this._availableInstanceIds.length === 0 ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\tconst instanceInfo = {\n\t\t\tvisible: true,\n\t\t\tactive: true,\n\t\t\tgeometryIndex: geometryId,\n\t\t};\n\n\t\tlet drawId = null;\n\n\t\t// Prioritize using previously freed instance ids\n\t\tif ( this._availableInstanceIds.length > 0 ) {\n\n\t\t\tthis._availableInstanceIds.sort( ascIdSort );\n\n\t\t\tdrawId = this._availableInstanceIds.shift();\n\t\t\tthis._instanceInfo[ drawId ] = instanceInfo;\n\n\t\t} else {\n\n\t\t\tdrawId = this._instanceInfo.length;\n\t\t\tthis._instanceInfo.push( instanceInfo );\n\n\t\t}\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\t_matrix$1.identity().toArray( matricesTexture.image.data, drawId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tif ( colorsTexture ) {\n\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, drawId * 4 );\n\t\t\tcolorsTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn drawId;\n\n\t}\n\n\taddGeometry( geometry, reservedVertexCount = - 1, reservedIndexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst geometryInfo = {\n\t\t\t// geometry information\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\treservedVertexCount: - 1,\n\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t\treservedIndexCount: - 1,\n\n\t\t\t// draw range information\n\t\t\tstart: - 1,\n\t\t\tcount: - 1,\n\n\t\t\t// state\n\t\t\tboundingBox: null,\n\t\t\tboundingSphere: null,\n\t\t\tactive: true,\n\t\t};\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tgeometryInfo.vertexStart = this._nextVertexStart;\n\t\tgeometryInfo.reservedVertexCount = reservedVertexCount === - 1 ? geometry.getAttribute( 'position' ).count : reservedVertexCount;\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tgeometryInfo.indexStart = this._nextIndexStart;\n\t\t\tgeometryInfo.reservedIndexCount = reservedIndexCount === - 1 ? index.count : reservedIndexCount;\n\n\t\t}\n\n\t\tif (\n\t\t\tgeometryInfo.indexStart !== - 1 &&\n\t\t\tgeometryInfo.indexStart + geometryInfo.reservedIndexCount > this._maxIndexCount ||\n\t\t\tgeometryInfo.vertexStart + geometryInfo.reservedVertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\t// update id\n\t\tlet geometryId;\n\t\tif ( this._availableGeometryIds.length > 0 ) {\n\n\t\t\tthis._availableGeometryIds.sort( ascIdSort );\n\n\t\t\tgeometryId = this._availableGeometryIds.shift();\n\t\t\tgeometryInfoList[ geometryId ] = geometryInfo;\n\n\n\t\t} else {\n\n\t\t\tgeometryId = this._geometryCount;\n\t\t\tthis._geometryCount ++;\n\t\t\tgeometryInfoList.push( geometryInfo );\n\n\t\t}\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\t// increment the next geometry position\n\t\tthis._nextIndexStart = geometryInfo.indexStart + geometryInfo.reservedIndexCount;\n\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( geometryId, geometry ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > geometryInfo.reservedIndexCount ||\n\t\t\tgeometry.attributes.position.count > geometryInfo.reservedVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry buffer data over\n\t\tconst vertexStart = geometryInfo.vertexStart;\n\t\tconst reservedVertexCount = geometryInfo.reservedVertexCount;\n\t\tgeometryInfo.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = reservedVertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = geometryInfo.indexStart;\n\t\t\tconst reservedIndexCount = geometryInfo.reservedIndexCount;\n\t\t\tgeometryInfo.indexCount = geometry.getIndex().count;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedIndexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, geometryInfo.reservedIndexCount );\n\n\t\t}\n\n\t\t// update the draw range\n\t\tgeometryInfo.start = hasIndex ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\t\tgeometryInfo.count = hasIndex ? geometryInfo.indexCount : geometryInfo.vertexCount;\n\n\t\t// store the bounding boxes\n\t\tgeometryInfo.boundingBox = null;\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tgeometryInfo.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tgeometryInfo.boundingSphere = null;\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tgeometryInfo.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn geometryId;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// delete any instances associated with this geometry\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].geometryIndex === geometryId ) {\n\n\t\t\t\tthis.deleteInstance( i );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometryInfoList[ geometryId ].active = false;\n\t\tthis._availableGeometryIds.push( geometryId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteInstance( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tthis._instanceInfo[ instanceId ].active = false;\n\t\tthis._availableInstanceIds.push( instanceId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\toptimize() {\n\n\t\t// track the next indices to copy data to\n\t\tlet nextVertexStart = 0;\n\t\tlet nextIndexStart = 0;\n\n\t\t// Iterate over all geometry ranges in order sorted from earliest in the geometry buffer to latest\n\t\t// in the geometry buffer. Because draw range objects can be reused there is no guarantee of their order.\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst indices = geometryInfoList\n\t\t\t.map( ( e, i ) => i )\n\t\t\t.sort( ( a, b ) => {\n\n\t\t\t\treturn geometryInfoList[ a ].vertexStart - geometryInfoList[ b ].vertexStart;\n\n\t\t\t} );\n\n\t\tconst geometry = this.geometry;\n\t\tfor ( let i = 0, l = geometryInfoList.length; i < l; i ++ ) {\n\n\t\t\t// if a geometry range is inactive then don't copy anything\n\t\t\tconst index = indices[ i ];\n\t\t\tconst geometryInfo = geometryInfoList[ index ];\n\t\t\tif ( geometryInfo.active === false ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// if a geometry contains an index buffer then shift it, as well\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\tif ( geometryInfo.indexStart !== nextIndexStart ) {\n\n\t\t\t\t\tconst { indexStart, vertexStart, reservedIndexCount } = geometryInfo;\n\t\t\t\t\tconst index = geometry.index;\n\t\t\t\t\tconst array = index.array;\n\n\t\t\t\t\t// shift the index pointers based on how the vertex data will shift\n\t\t\t\t\t// adjusting the index must happen first so the original vertex start value is available\n\t\t\t\t\tconst elementDelta = nextVertexStart - vertexStart;\n\t\t\t\t\tfor ( let j = indexStart; j < indexStart + reservedIndexCount; j ++ ) {\n\n\t\t\t\t\t\tarray[ j ] = array[ j ] + elementDelta;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tindex.array.copyWithin( nextIndexStart, indexStart, indexStart + reservedIndexCount );\n\t\t\t\t\tindex.addUpdateRange( nextIndexStart, reservedIndexCount );\n\n\t\t\t\t\tgeometryInfo.indexStart = nextIndexStart;\n\n\t\t\t\t}\n\n\t\t\t\tnextIndexStart += geometryInfo.reservedIndexCount;\n\n\t\t\t}\n\n\t\t\t// if a geometry needs to be moved then copy attribute data to overwrite unused space\n\t\t\tif ( geometryInfo.vertexStart !== nextVertexStart ) {\n\n\t\t\t\tconst { vertexStart, reservedVertexCount } = geometryInfo;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tfor ( const key in attributes ) {\n\n\t\t\t\t\tconst attribute = attributes[ key ];\n\t\t\t\t\tconst { array, itemSize } = attribute;\n\t\t\t\t\tarray.copyWithin( nextVertexStart * itemSize, vertexStart * itemSize, ( vertexStart + reservedVertexCount ) * itemSize );\n\t\t\t\t\tattribute.addUpdateRange( nextVertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tgeometryInfo.vertexStart = nextVertexStart;\n\n\t\t\t}\n\n\t\t\tnextVertexStart += geometryInfo.reservedVertexCount;\n\t\t\tgeometryInfo.start = geometry.index ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\n\t\t\t// step the next geometry points to the shifted position\n\t\t\tthis._nextIndexStart = geometry.index ? geometryInfo.indexStart + geometryInfo.reservedIndexCount : 0;\n\t\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingBox === null ) {\n\n\t\t\tconst box = new Box3();\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tgeometryInfo.boundingBox = box;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingBox );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingSphere === null ) {\n\n\t\t\tconst sphere = new Sphere();\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tgeometryInfo.boundingSphere = sphere;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingSphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tmatrix.toArray( matricesArray, instanceId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn matrix.fromArray( this._matricesTexture.image.data, instanceId * 16 );\n\n\t}\n\n\tsetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._colorsTexture === null ) {\n\n\t\t\tthis._initColorsTexture();\n\n\t\t}\n\n\t\tcolor.toArray( this._colorsTexture.image.data, instanceId * 4 );\n\t\tthis._colorsTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn color.fromArray( this._colorsTexture.image.data, instanceId * 4 );\n\n\t}\n\n\tsetVisibleAt( instanceId, value ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._instanceInfo[ instanceId ].visible === value ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis._instanceInfo[ instanceId ].visible = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].visible;\n\n\t}\n\n\tsetGeometryIdAt( instanceId, geometryId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tthis._instanceInfo[ instanceId ].geometryIndex = geometryId;\n\n\t\treturn this;\n\n\t}\n\n\tgetGeometryIdAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].geometryIndex;\n\n\t}\n\n\tgetGeometryRangeAt( geometryId, target = {} ) {\n\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\ttarget.vertexStart = geometryInfo.vertexStart;\n\t\ttarget.vertexCount = geometryInfo.vertexCount;\n\t\ttarget.reservedVertexCount = geometryInfo.reservedVertexCount;\n\n\t\ttarget.indexStart = geometryInfo.indexStart;\n\t\ttarget.indexCount = geometryInfo.indexCount;\n\t\ttarget.reservedIndexCount = geometryInfo.reservedIndexCount;\n\n\t\ttarget.start = geometryInfo.start;\n\t\ttarget.count = geometryInfo.count;\n\n\t\treturn target;\n\n\t}\n\n\tsetInstanceCount( maxInstanceCount ) {\n\n\t\t// shrink the available instances as much as possible\n\t\tconst availableInstanceIds = this._availableInstanceIds;\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tavailableInstanceIds.sort( ascIdSort );\n\t\twhile ( availableInstanceIds[ availableInstanceIds.length - 1 ] === instanceInfo.length ) {\n\n\t\t\tinstanceInfo.pop();\n\t\t\tavailableInstanceIds.pop();\n\n\t\t}\n\n\t\t// throw an error if it can't be shrunk to the desired size\n\t\tif ( maxInstanceCount < instanceInfo.length ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Instance ids outside the range ${ maxInstanceCount } are being used. Cannot shrink instance count.` );\n\n\t\t}\n\n\t\t// copy the multi draw counts\n\t\tconst multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tconst multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tcopyArrayContents( this._multiDrawCounts, multiDrawCounts );\n\t\tcopyArrayContents( this._multiDrawStarts, multiDrawStarts );\n\n\t\tthis._multiDrawCounts = multiDrawCounts;\n\t\tthis._multiDrawStarts = multiDrawStarts;\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\n\t\t// update texture data for instance sampling\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst colorsTexture = this._colorsTexture;\n\n\t\tindirectTexture.dispose();\n\t\tthis._initIndirectTexture();\n\t\tcopyArrayContents( indirectTexture.image.data, this._indirectTexture.image.data );\n\n\t\tmatricesTexture.dispose();\n\t\tthis._initMatricesTexture();\n\t\tcopyArrayContents( matricesTexture.image.data, this._matricesTexture.image.data );\n\n\t\tif ( colorsTexture ) {\n\n\t\t\tcolorsTexture.dispose();\n\t\t\tthis._initColorsTexture();\n\t\t\tcopyArrayContents( colorsTexture.image.data, this._colorsTexture.image.data );\n\n\t\t}\n\n\t}\n\n\tsetGeometrySize( maxVertexCount, maxIndexCount ) {\n\n\t\t// Check if we can shrink to the requested vertex attribute size\n\t\tconst validRanges = [ ...this._geometryInfo ].filter( info => info.active );\n\t\tconst requiredVertexLength = Math.max( ...validRanges.map( range => range.vertexStart + range.reservedVertexCount ) );\n\t\tif ( requiredVertexLength > maxVertexCount ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry vertex values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t}\n\n\t\t// Check if we can shrink to the requested index attribute size\n\t\tif ( this.geometry.index ) {\n\n\t\t\tconst requiredIndexLength = Math.max( ...validRanges.map( range => range.indexStart + range.reservedIndexCount ) );\n\t\t\tif ( requiredIndexLength > maxIndexCount ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Geometry index values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\t// dispose of the previous geometry\n\t\tconst oldGeometry = this.geometry;\n\t\toldGeometry.dispose();\n\n\t\t// recreate the geometry needed based on the previous variant\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tif ( this._geometryInitialized ) {\n\n\t\t\tthis._geometryInitialized = false;\n\t\t\tthis.geometry = new BufferGeometry();\n\t\t\tthis._initializeGeometry( oldGeometry );\n\n\t\t}\n\n\t\t// copy data from the previous geometry\n\t\tconst geometry = this.geometry;\n\t\tif ( oldGeometry.index ) {\n\n\t\t\tcopyArrayContents( oldGeometry.index.array, geometry.index.array );\n\n\t\t}\n\n\t\tfor ( const key in oldGeometry.attributes ) {\n\n\t\t\tcopyArrayContents( oldGeometry.attributes[ key ].array, geometry.attributes[ key ].array );\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( ! instanceInfo[ i ].visible || ! instanceInfo[ i ].active ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t_mesh.geometry.setDrawRange( geometryInfo.start, geometryInfo.count );\n\n\t\t\t// get the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( geometryId, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( geometryId, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._geometryInfo = source._geometryInfo.map( info => ( {\n\t\t\t...info,\n\n\t\t\tboundingBox: info.boundingBox !== null ? info.boundingBox.clone() : null,\n\t\t\tboundingSphere: info.boundingSphere !== null ? info.boundingSphere.clone() : null,\n\t\t} ) );\n\t\tthis._instanceInfo = source._instanceInfo.map( info => ( { ...info } ) );\n\n\t\tthis._maxInstanceCount = source._maxInstanceCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.data.slice();\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.data.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\n\t\tthis._indirectTexture.dispose();\n\t\tthis._indirectTexture = null;\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture.dispose();\n\t\t\tthis._colorsTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst indirectArray = indirectTexture.image.data;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_matrix$1\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_matrix$1,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet multiDrawCount = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_matrix$1.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _matrix$1 );\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _matrix$1 );\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\n\t\t\t\t\t\t_renderList.push( geometryInfo.start, geometryInfo.count, z, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ multiDrawCount ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ multiDrawCount ] = item.count;\n\t\t\t\tindirectArray[ multiDrawCount ] = item.index;\n\t\t\t\tmultiDrawCount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tmultiDrawStarts[ multiDrawCount ] = geometryInfo.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ multiDrawCount ] = geometryInfo.count;\n\t\t\t\t\t\tindirectArray[ multiDrawCount ] = i;\n\t\t\t\t\t\tmultiDrawCount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tindirectTexture.needsUpdate = true;\n\t\tthis._multiDrawCount = multiDrawCount;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: a,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tbarycoord: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tfaceIndex: null,\n\t\t\tbarycoord: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tif ( radiusTop > 0 || y !== 0 ) {\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( radiusBottom > 0 || y !== heightSegments - 1 ) {\n\n\t\t\t\t\t\tindices.push( b, c, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}, ( e ) => {\n\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\t\tif ( this.target !== undefined ) data.object.target = this.target.uuid;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.intensity = 1;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.intensity = source.intensity;\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.intensity !== 1 ) object.intensity = this.intensity;\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = this.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tcreateMaterialFromType( type ) {\n\n\t\treturn MaterialLoader.createMaterialFromType( type );\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) { // @deprecated, r165\n\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxInstanceCount = data.maxInstanceCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.intensity !== undefined ) object.shadow.intensity = data.shadow.intensity;\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tbindLightTargets( object ) {\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isDirectionalLight || child.isSpotLight ) {\n\n\t\t\t\tconst uuid = child.target;\n\n\t\t\t\tconst target = object.getObjectByProperty( 'uuid', uuid );\n\n\t\t\t\tif ( target !== undefined ) {\n\n\t\t\t\t\tchild.target = target;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.target = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn performance.now();\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop( delay = 0 ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop( this.context.currentTime + delay );\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\t\tthis._progress = 0;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.sourceType !== 'buffer' ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio source type cannot be copied.' );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.autoplay = source.autoplay;\n\n\t\tthis.buffer = source.buffer;\n\t\tthis.detune = source.detune;\n\t\tthis.loop = source.loop;\n\t\tthis.loopStart = source.loopStart;\n\t\tthis.loopEnd = source.loopEnd;\n\t\tthis.offset = source.offset;\n\t\tthis.duration = source.duration;\n\t\tthis.playbackRate = source.playbackRate;\n\t\tthis.hasPlaybackControl = source.hasPlaybackControl;\n\t\tthis.sourceType = source.sourceType;\n\n\t\tthis.filters = source.filters.slice();\n\n\t\treturn this;\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor( this.listener ).copy( this, recursive );\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.isMaterial === true ) {\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.isObject3D === true ) {\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass RenderTarget3D extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isRenderTarget3D = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass RenderTargetArray extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isRenderTargetArray = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tlet propagate = true;\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tconst result = object.raycast( raycaster, intersects );\n\n\t\tif ( result === false ) propagate = false;\n\n\t}\n\n\tif ( propagate === true && recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = clamp( this.phi, EPS, Math.PI - EPS );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix2 {\n\n\tconstructor( n11, n12, n21, n22 ) {\n\n\t\tMatrix2.prototype.isMatrix2 = true;\n\n\t\tthis.elements = [\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n21, n22 );\n\n\t\t}\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( n11, n12, n21, n22 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 2 ] = n12;\n\t\tte[ 1 ] = n21; te[ 3 ] = n22;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// Adjust z values based on coordinate system\n\t\tconst nearZ = this.camera.coordinateSystem === WebGLCoordinateSystem ? - 1 : 0;\n\n\t\t// center / target\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, nearZ );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, nearZ );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, nearZ );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, nearZ );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, nearZ );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, nearZ );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, nearZ );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, nearZ );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, nearZ );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, nearZ );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass Controls extends EventDispatcher {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\tthis.enabled = true;\n\n\t\tthis.state = - 1;\n\n\t\tthis.keys = {};\n\t\tthis.mouseButtons = { LEFT: null, MIDDLE: null, RIGHT: null };\n\t\tthis.touches = { ONE: null, TWO: null };\n\n\t}\n\n\tconnect() {}\n\n\tdisconnect() {}\n\n\tdispose() {}\n\n\tupdate( /* delta */ ) {}\n\n}\n\nfunction contain( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t} else {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction cover( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t} else {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction fill( texture ) {\n\n\ttexture.repeat.x = 1;\n\ttexture.repeat.y = 1;\n\n\ttexture.offset.x = 0;\n\ttexture.offset.y = 0;\n\n\treturn texture;\n\n}\n\n\n\n/**\n * Given the width, height, format, and type of a texture. Determines how many\n * bytes must be used to represent the texture.\n *\n * @param {Number} width\n * @param {Number} height\n * @param {Number} format\n * @param {Number} type\n * @return {Number} The number of bytes required to represent the texture.\n */\nfunction getByteLength( width, height, format, type ) {\n\n\tconst typeByteLength = getTextureTypeByteLength( type );\n\n\tswitch ( format ) {\n\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n\t\tcase AlphaFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceAlphaFormat:\n\t\t\treturn width * height * 2;\n\t\tcase RedFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RedIntegerFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGIntegerFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBFormat:\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAIntegerFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\n\t\tcase RGB_S3TC_DXT1_Format:\n\t\tcase RGBA_S3TC_DXT1_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_S3TC_DXT3_Format:\n\t\tcase RGBA_S3TC_DXT5_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\n\t\tcase RGB_PVRTC_2BPPV1_Format:\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\n\t\tcase RGB_PVRTC_4BPPV1_Format:\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\n\t\tcase RGB_ETC1_Format:\n\t\tcase RGB_ETC2_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_ETC2_EAC_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\n\t\tcase RGBA_ASTC_4x4_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x4_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x5_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x5_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x6_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x5_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_8x6_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x8_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x5_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_10x6_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_10x8_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x10_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x10_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x12_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\n\t\tcase RGBA_BPTC_Format:\n\t\tcase RGB_BPTC_SIGNED_Format:\n\t\tcase RGB_BPTC_UNSIGNED_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\n\t\tcase RED_RGTC1_Format:\n\t\tcase SIGNED_RED_RGTC1_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\n\t\tcase RED_GREEN_RGTC2_Format:\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t}\n\n\tthrow new Error(\n\t\t`Unable to determine texture byte length for ${format} format.`,\n\t);\n\n}\n\nfunction getTextureTypeByteLength( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase UnsignedByteType:\n\t\tcase ByteType:\n\t\t\treturn { byteLength: 1, components: 1 };\n\t\tcase UnsignedShortType:\n\t\tcase ShortType:\n\t\tcase HalfFloatType:\n\t\t\treturn { byteLength: 2, components: 1 };\n\t\tcase UnsignedShort4444Type:\n\t\tcase UnsignedShort5551Type:\n\t\t\treturn { byteLength: 2, components: 4 };\n\t\tcase UnsignedIntType:\n\t\tcase IntType:\n\t\tcase FloatType:\n\t\t\treturn { byteLength: 4, components: 1 };\n\t\tcase UnsignedInt5999Type:\n\t\t\treturn { byteLength: 4, components: 3 };\n\n\t}\n\n\tthrow new Error( `Unknown texture type ${type}.` );\n\n}\n\nconst TextureUtils = {\n\tcontain,\n\tcover,\n\tfill,\n\tgetByteLength\n};\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, Controls, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RAD2DEG, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDepthPacking, RGBFormat, RGBIntegerFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGDepthPacking, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RenderTarget3D, RenderTargetArray, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TextureUtils, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLRenderTarget, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, arrayNeedsUint32, cloneUniforms, createCanvasElement, createElementNS, getByteLength, getUnlitUniformColorSpace, mergeUniforms, probeAsync, toNormalizedProjectionMatrix, toReversedProjectionMatrix, warnOnce };\n","/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nimport { Color, Matrix3, Vector2, mergeUniforms, Vector3, CubeUVReflectionMapping, Mesh, BoxGeometry, ShaderMaterial, cloneUniforms, BackSide, ColorManagement, SRGBTransfer, PlaneGeometry, FrontSide, getUnlitUniformColorSpace, Euler, Matrix4, IntType, RGBAFormat, HalfFloatType, UnsignedByteType, FloatType, Plane, EquirectangularReflectionMapping, EquirectangularRefractionMapping, WebGLCubeRenderTarget, CubeReflectionMapping, CubeRefractionMapping, PerspectiveCamera, NoToneMapping, MeshBasicMaterial, BufferGeometry, BufferAttribute, WebGLRenderTarget, NoBlending, OrthographicCamera, LinearFilter, LinearSRGBColorSpace, warnOnce, arrayNeedsUint32, Uint32BufferAttribute, Uint16BufferAttribute, Vector4, DataArrayTexture, LessEqualCompare, Texture, DepthTexture, Data3DTexture, CubeTexture, GLSL3, CustomToneMapping, NeutralToneMapping, AgXToneMapping, ACESFilmicToneMapping, CineonToneMapping, ReinhardToneMapping, LinearToneMapping, PCFShadowMap, PCFSoftShadowMap, VSMShadowMap, LinearTransfer, AddOperation, MixOperation, MultiplyOperation, ObjectSpaceNormalMap, TangentSpaceNormalMap, NormalBlending, DoubleSide, UniformsUtils, Layers, Frustum, MeshDepthMaterial, RGBADepthPacking, MeshDistanceMaterial, NearestFilter, LessEqualDepth, AddEquation, SubtractEquation, ReverseSubtractEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor, ConstantColorFactor, OneMinusConstantColorFactor, ConstantAlphaFactor, OneMinusConstantAlphaFactor, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, CullFaceNone, CullFaceBack, CullFaceFront, NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessDepth, AlwaysDepth, NeverDepth, MinEquation, MaxEquation, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestMipmapNearestFilter, NearestMipmapLinearFilter, LinearMipmapNearestFilter, LinearMipmapLinearFilter, NeverCompare, AlwaysCompare, LessCompare, EqualCompare, GreaterEqualCompare, GreaterCompare, NotEqualCompare, NoColorSpace, DepthStencilFormat, getByteLength, UnsignedIntType, UnsignedInt248Type, UnsignedShortType, DepthFormat, createElementNS, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedInt5999Type, ByteType, ShortType, AlphaFormat, RGBFormat, LuminanceFormat, LuminanceAlphaFormat, RedFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBAIntegerFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_BPTC_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RED_RGTC1_Format, SIGNED_RED_RGTC1_Format, RED_GREEN_RGTC2_Format, SIGNED_RED_GREEN_RGTC2_Format, Group, EventDispatcher, ArrayCamera, RAD2DEG, createCanvasElement, SRGBColorSpace, REVISION, toNormalizedProjectionMatrix, toReversedProjectionMatrix, probeAsync, WebGLCoordinateSystem } from './three.core.js';\nexport { AdditiveAnimationBlendMode, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxHelper, BufferGeometryLoader, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CircleGeometry, Clock, ColorKeyframeTrack, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, Controls, CubeCamera, CubeTextureLoader, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceFrontBack, Curve, CurvePath, CylinderGeometry, Cylindrical, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualStencilFunc, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Fog, FogExp2, FramebufferTexture, GLBufferAttribute, GLSL1, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NeverStencilFunc, NormalAnimationBlendMode, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, OctahedronGeometry, Path, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RGBDepthPacking, RGBIntegerFormat, RGDepthPacking, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RenderTarget, RenderTarget3D, RenderTargetArray, ReplaceStencilOp, RingGeometry, Scene, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, TOUCH, TetrahedronGeometry, TextureLoader, TextureUtils, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroSlopeEnding, ZeroStencilOp } from './three.core.js';\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl ) {\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\t// Before applying update ranges, we merge any adjacent / overlapping\n\t\t\t// ranges to reduce load on `gl.bufferSubData`. Empirically, this has led\n\t\t\t// to performance improvements for applications which make heavy use of\n\t\t\t// update ranges. Likely due to GPU command overhead.\n\t\t\t//\n\t\t\t// Note that to reduce garbage collection between frames, we merge the\n\t\t\t// update ranges in-place. This is safe because this method will clear the\n\t\t\t// update ranges once updated.\n\n\t\t\tupdateRanges.sort( ( a, b ) => a.start - b.start );\n\n\t\t\t// To merge the update ranges in-place, we work from left to right in the\n\t\t\t// existing updateRanges array, merging ranges. This may result in a final\n\t\t\t// array which is smaller than the original. This index tracks the last\n\t\t\t// index representing a merged range, any data after this index can be\n\t\t\t// trimmed once the merge algorithm is completed.\n\t\t\tlet mergeIndex = 0;\n\n\t\t\tfor ( let i = 1; i < updateRanges.length; i ++ ) {\n\n\t\t\t\tconst previousRange = updateRanges[ mergeIndex ];\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\t// We add one here to merge adjacent ranges. This is safe because ranges\n\t\t\t\t// operate over positive integers.\n\t\t\t\tif ( range.start <= previousRange.start + previousRange.count + 1 ) {\n\n\t\t\t\t\tpreviousRange.count = Math.max(\n\t\t\t\t\t\tpreviousRange.count,\n\t\t\t\t\t\trange.start + range.count - previousRange.start\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\t++ mergeIndex;\n\t\t\t\t\tupdateRanges[ mergeIndex ] = range;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Trim the array to only contain the merged ranges.\n\t\t\tupdateRanges.length = mergeIndex + 1;\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\t#if ! defined( GL_ANGLE_multi_draw )\\n\\t#define gl_DrawID _gl_DrawID\\n\\tuniform int _gl_DrawID;\\n\\t#endif\\n\\tuniform highp sampler2D batchingTexture;\\n\\tuniform highp usampler2D batchingIdTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n\\tfloat getIndirectIndex( const in int i ) {\\n\\t\\tint size = textureSize( batchingIdTexture, 0 ).x;\\n\\t\\tint x = i % size;\\n\\t\\tint y = i / size;\\n\\t\\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\\n\\t}\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tuniform sampler2D batchingColorTexture;\\n\\tvec3 getBatchingColor( const in float i ) {\\n\\t\\tint size = textureSize( batchingColorTexture, 0 ).x;\\n\\t\\tint j = int( i );\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\\n\\tvColor.xyz *= batchingColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\\n\\t\\temissiveColor = sRGBTransferEOTF( emissiveColor );\\n\\t#endif\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"vec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferEOTF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform mat3 envMapRotation;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_DISPERSION\\n\\tmaterial.dispersion = dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\tfloat dispersion;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvFragDepth = 1.0 + gl_Position.w;\\n\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphinstance_vertex = \"#ifdef USE_INSTANCING_MORPH\\n\\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\\t}\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\tuniform float morphTargetBaseInfluence;\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t#endif\\n\\tuniform sampler2DArray morphTargetsTexture;\\n\\tuniform ivec2 morphTargetsTextureSize;\\n\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t}\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\\nconst float Inv255 = 1. / 255.;\\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec4( 0., 0., 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec4( 1., 1., 1., 1. );\\n\\tfloat vuf;\\n\\tfloat af = modf( v * PackFactors.a, vuf );\\n\\tfloat bf = modf( vuf * ShiftRight8, vuf );\\n\\tfloat gf = modf( vuf * ShiftRight8, vuf );\\n\\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\\n}\\nvec3 packDepthToRGB( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec3( 0., 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec3( 1., 1., 1. );\\n\\tfloat vuf;\\n\\tfloat bf = modf( v * PackFactors.b, vuf );\\n\\tfloat gf = modf( vuf * ShiftRight8, vuf );\\n\\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\\n}\\nvec2 packDepthToRG( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec2( 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec2( 1., 1. );\\n\\tfloat vuf;\\n\\tfloat gf = modf( v * 256., vuf );\\n\\treturn vec2( vuf * Inv255, gf );\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors4 );\\n}\\nfloat unpackRGBToDepth( const in vec3 v ) {\\n\\treturn dot( v, UnpackFactors3 );\\n}\\nfloat unpackRGToDepth( const in vec2 v ) {\\n\\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\\n}\\nvec4 pack2HalfToRGBA( const in vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( const in vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\t\\n\\t\\tfloat lightToPositionLength = length( lightToPosition );\\n\\t\\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\\n\\t\\t\\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\t\\tdp += shadowBias;\\n\\t\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\t\\tshadow = (\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 CineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\\tconst float StartCompression = 0.8 - 0.04;\\n\\tconst float Desaturation = 0.15;\\n\\tcolor *= toneMappingExposure;\\n\\tfloat x = min( color.r, min( color.g, color.b ) );\\n\\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\\tcolor -= offset;\\n\\tfloat peak = max( color.r, max( color.g, color.b ) );\\n\\tif ( peak < StartCompression ) return color;\\n\\tfloat d = 1. - StartCompression;\\n\\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\\n\\tcolor *= newPeak / peak;\\n\\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\\n\\treturn mix( color, vec3( newPeak ), g );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec4 transmittedLight;\\n\\t\\tvec3 transmittance;\\n\\t\\t#ifdef USE_DISPERSION\\n\\t\\t\\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\\n\\t\\t\\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\\n\\t\\t\\tfor ( int i = 0; i < 3; i ++ ) {\\n\\t\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\\n\\t\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\t\\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\\n\\t\\t\\t\\ttransmittedLight[ i ] = transmissionSample[ i ];\\n\\t\\t\\t\\ttransmittedLight.a += transmissionSample.a;\\n\\t\\t\\t\\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\\n\\t\\t\\t}\\n\\t\\t\\ttransmittedLight.a /= 3.0;\\n\\t\\t#else\\n\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\t\\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\t#endif\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#elif DEPTH_PACKING == 3202\\n\\t\\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\\n\\t#elif DEPTH_PACKING == 3203\\n\\t\\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_DISPERSION\\n\\tuniform float dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix[ 3 ];\\n\\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphinstance_vertex: morphinstance_vertex,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 },\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tdispersion: { value: 0 },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\nconst _e1$1 = /*@__PURE__*/ new Euler();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction getBackground( scene ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\treturn background;\n\n\t}\n\n\tfunction render( scene ) {\n\n\t\tlet forceClear = false;\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t// buffers might not be writable which is required to ensure a correct clear\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t}\n\n\tfunction addToRenderList( renderList, scene ) {\n\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\t_e1$1.copy( scene.backgroundRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1$1.x *= - 1; _e1$1.y *= - 1; _e1$1.z *= - 1;\n\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1$1.y *= - 1;\n\t\t\t\t_e1$1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1$1.makeRotationFromEuler( _e1$1 ) );\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\tfunction dispose() {\n\n\t\tif ( boxMesh !== undefined ) {\n\n\t\t\tboxMesh.geometry.dispose();\n\t\t\tboxMesh.material.dispose();\n\n\t\t}\n\n\t\tif ( planeMesh !== undefined ) {\n\n\t\t\tplaneMesh.geometry.dispose();\n\t\t\tplaneMesh.material.dispose();\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render,\n\t\taddToRenderList: addToRenderList,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, attributes ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tconst state = getBindingState( geometry, program, material );\n\n\t\tif ( currentState !== state ) {\n\n\t\t\tcurrentState = state;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\treturn gl.createVertexArray();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\treturn gl.bindVertexArray( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\treturn gl.deleteVertexArray( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tgl.vertexAttribDivisor( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes\n\n\t\t\t\t\tconst integer = ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawArraysInstanced( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ], counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysInstancedWEBGL( mode, starts, 0, counts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ] * primcount[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters, utils ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction textureFormatReadable( textureFormat ) {\n\n\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction textureTypeReadable( textureType ) {\n\n\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\n\n\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\tconst reverseDepthBuffer = parameters.reverseDepthBuffer === true && extensions.has( 'EXT_clip_control' );\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\n\n\treturn {\n\n\t\tisWebGL2: true, // keeping this for backwards compatibility\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\ttextureFormatReadable: textureFormatReadable,\n\t\ttextureTypeReadable: textureTypeReadable,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\treverseDepthBuffer: reverseDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\nlet _oldXrEnabled = false;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t *\n\t * @param {Scene} scene\n\t * @param {number} sigma\n\t * @param {number} near\n\t * @param {number} far\n\t * @return {WebGLRenderTarget}\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported equirectangular image size is 64 x 32.\n\t *\n\t * @param {Texture} equirectangular\n\t * @param {WebGLRenderTarget} [renderTarget=null] - Optional render target.\n\t * @return {WebGLRenderTarget}\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported cube size is 16 x 16.\n\t *\n\t * @param {Texture} cubemap\n\t * @param {null} [renderTarget=null] - Optional render target.\n\t * @return {WebGLRenderTarget}\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\tthis._renderer.xr.enabled = _oldXrEnabled;\n\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\t\tconst n = this._lodPlanes.length;\n\n\t\tfor ( let i = 1; i < n; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( n - i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t *\n\t * @param {WebGLRenderTarget} cubeUVRenderTarget\n\t * @param {number} lodIn\n\t * @param {number} lodOut\n\t * @param {number} sigma\n\t * @param {Vector3} [poleAxis]\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\tconst currentPMREMVersion = renderTarget !== undefined ? renderTarget.texture.pmremVersion : 0;\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.pmremVersion !== currentPMREMVersion ) {\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function () {\n\n\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\t\t\tgetExtension( 'WEBGL_render_shared_exponent' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\twarnOnce( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ] / bytesPerElement, counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsInstancedWEBGL( mode, counts, 0, type, starts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ] * primcount[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// the following encodes morph targets into an array of data textures. Each layer represents a single morph target.\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet entry = morphTextures.get( geometry );\n\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\tlet vertexDataCount = 0;\n\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\tlet height = 1;\n\n\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t}\n\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\ttexture.type = FloatType;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\t// fill buffer\n\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tentry = {\n\t\t\t\tcount: morphTargetsCount,\n\t\t\t\ttexture: texture,\n\t\t\t\tsize: new Vector2( width, height )\n\t\t\t};\n\n\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\tfunction disposeTexture() {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t}\n\n\t\t//\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\n\n\t\t} else {\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tlet emptyTexture2D;\n\n\tif ( this.type === gl.SAMPLER_2D_SHADOW ) {\n\n\t\temptyShadowTexture.compareFunction = LessEqualCompare; // #28670\n\t\temptyTexture2D = emptyShadowTexture;\n\n\t} else {\n\n\t\temptyTexture2D = emptyTexture;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nconst _m0 = /*@__PURE__*/ new Matrix3();\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tColorManagement._getMatrix( _m0, ColorManagement.workingColorSpace, colorSpace );\n\n\tconst encodingMatrix = `mat3( ${ _m0.elements.map( ( v ) => v.toFixed( 4 ) ) } )`;\n\n\tswitch ( ColorManagement.getTransfer( colorSpace ) ) {\n\n\t\tcase LinearTransfer:\n\t\t\treturn [ encodingMatrix, 'LinearTransferOETF' ];\n\n\t\tcase SRGBTransfer:\n\t\t\treturn [ encodingMatrix, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space: ', colorSpace );\n\t\t\treturn [ encodingMatrix, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\n\treturn [\n\n\t\t`vec4 ${functionName}( vec4 value ) {`,\n\n\t\t`\treturn ${components[ 1 ]}( vec4( value.rgb * ${components[ 0 ]}, value.a ) );`,\n\n\t\t'}',\n\n\t].join( '\\n' );\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'Cineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase NeutralToneMapping:\n\t\t\ttoneMappingName = 'Neutral';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\n\nfunction getLuminanceFunction() {\n\n\tColorManagement.getLuminanceCoefficients( _v0 );\n\n\tconst r = _v0.x.toFixed( 4 );\n\tconst g = _v0.y.toFixed( 4 );\n\tconst b = _v0.z.toFixed( 4 );\n\n\treturn [\n\n\t\t'float luminance( const in vec3 rgb ) {',\n\n\t\t`\tconst vec3 weights = vec3( ${ r }, ${ g }, ${ b } );`,\n\n\t\t'\treturn dot( weights, rgb );',\n\n\t\t'}'\n\n\t].join( '\\n' );\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map();\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\tprecision ${parameters.precision} sampler3D;\n\tprecision ${parameters.precision} sampler2DArray;\n\tprecision ${parameters.precision} sampler2DShadow;\n\tprecision ${parameters.precision} samplerCubeShadow;\n\tprecision ${parameters.precision} sampler2DArrayShadow;\n\tprecision ${parameters.precision} isampler2D;\n\tprecision ${parameters.precision} isampler3D;\n\tprecision ${parameters.precision} isamplerCube;\n\tprecision ${parameters.precision} isampler2DArray;\n\tprecision ${parameters.precision} usampler2D;\n\tprecision ${parameters.precision} usampler3D;\n\tprecision ${parameters.precision} usamplerCube;\n\tprecision ${parameters.precision} usampler2DArray;\n\t`;\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.batchingColor ? '#define USE_BATCHING_COLOR' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.reverseDepthBuffer ? '#define USE_REVERSEDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\n\n\t\t\t'\tuniform sampler2D morphTexture;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.dispersion ? '#define USE_DISPERSION' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor || parameters.batchingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\t\t\tparameters.decodeVideoTextureEmissive ? '#define DECODE_VIDEO_TEXTURE_EMISSIVE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.reverseDepthBuffer ? '#define USE_REVERSEDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\t\t\tgetLuminanceFunction(),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst reverseDepthBuffer = renderer.state.buffers.depth.getReversed();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_DISPERSION = material.dispersion > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tbatchingColor: IS_BATCHEDMESH && object._colorsTexture !== null,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tdispersion: HAS_DISPERSION,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\treverseDepthBuffer: reverseDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\t\t\tdecodeVideoTextureEmissive: HAS_EMISSIVEMAP && ( material.emissiveMap.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.emissiveMap.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: ( HAS_EXTENSIONS && material.extensions.multiDraw === true || IS_BATCHEDMESH ) && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingMorph )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.dispersion )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.batchingColor )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.reverseDepthBuffer )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.decodeVideoTextureEmissive )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction has( object ) {\n\n\t\treturn properties.has( object );\n\n\t}\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\thas: has,\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions ) {\n\n\tconst lights = new WebGLLights( extensions );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init( camera ) {\n\n\t\tstate.camera = camera;\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tcamera: null,\n\n\t\tlights: lights,\n\n\t\ttransmissionRenderTarget: {}\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( renderer, objects, capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst activeCubeFace = renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst _state = renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( shadow.map );\n\t\t\trenderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\trenderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.mapPass );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.map );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst reversedFuncs = {\n\t[ NeverDepth ]: AlwaysDepth,\n\t[ LessDepth ]: GreaterDepth,\n\t[ EqualDepth ]: NotEqualDepth,\n\t[ LessEqualDepth ]: GreaterEqualDepth,\n\n\t[ AlwaysDepth ]: NeverDepth,\n\t[ GreaterDepth ]: LessDepth,\n\t[ NotEqualDepth ]: EqualDepth,\n\t[ GreaterEqualDepth ]: LessEqualDepth,\n};\n\nfunction WebGLState( gl, extensions ) {\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\t\tlet reversed = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetReversed: function ( value ) {\n\n\t\t\t\tif ( reversed !== value ) {\n\n\t\t\t\t\tconst ext = extensions.get( 'EXT_clip_control' );\n\n\t\t\t\t\tif ( reversed ) {\n\n\t\t\t\t\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.ZERO_TO_ONE_EXT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.NEGATIVE_ONE_TO_ONE_EXT );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst oldDepth = currentDepthClear;\n\t\t\t\t\tcurrentDepthClear = null;\n\t\t\t\t\tthis.setClear( oldDepth );\n\n\t\t\t\t}\n\n\t\t\t\treversed = value;\n\n\t\t\t},\n\n\t\t\tgetReversed: function () {\n\n\t\t\t\treturn reversed;\n\n\t\t\t},\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( reversed ) depthFunc = reversedFuncs[ depthFunc ];\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tif ( reversed ) {\n\n\t\t\t\t\t\tdepth = 1 - depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\t\t\t\treversed = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tequationToGL[ MinEquation ] = gl.MIN;\n\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\n\t\tdepthBuffer.setReversed( false );\n\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _imageDimensions = new Vector2();\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\tconst dimensions = getDimensions( image );\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\n\n\t\t\t\tconst width = Math.floor( scale * dimensions.width );\n\t\t\t\tconst height = Math.floor( scale * dimensions.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture ) {\n\n\t\treturn texture.generateMipmaps;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getTargetType( texture ) {\n\n\t\tif ( texture.isWebGLCubeRenderTarget ) return _gl.TEXTURE_CUBE_MAP;\n\t\tif ( texture.isWebGL3DRenderTarget ) return _gl.TEXTURE_3D;\n\t\tif ( texture.isWebGLArrayRenderTarget || texture.isCompressedArrayTexture ) return _gl.TEXTURE_2D_ARRAY;\n\t\treturn _gl.TEXTURE_2D;\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGB8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RGB16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RGB32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RGB8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RGB16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RGB32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGBA8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RGBA16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RGBA32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RGBA8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RGBA16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RGBA32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_INT_5_9_9_9_REV ) internalFormat = _gl.RGB9_E5;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getInternalDepthFormat( useStencil, depthType ) {\n\n\t\tlet glInternalFormat;\n\t\tif ( useStencil ) {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH32F_STENCIL8;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\tconsole.warn( 'DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.' );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn glInternalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\tproperties.remove( renderTarget.depthTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\tinfo.memory.textures --;\n\n\t\t\t}\n\n\t\t\tproperties.remove( textures[ i ] );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tlet image = resizeImage( texture.image, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tlet glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\tglInternalFormat = getInternalDepthFormat( texture.format === DepthStencilFormat, texture.type );\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst layerByteLength = getByteLength( mipmap.width, mipmap.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst layerData = mipmap.data.subarray(\n\t\t\t\t\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / mipmap.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / mipmap.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, layerIndex, mipmap.width, mipmap.height, 1, glFormat, layerData );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\tconst layerByteLength = getByteLength( image.width, image.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\tconst layerData = image.data.subarray(\n\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / image.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / image.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, layerIndex, image.width, image.height, 1, glFormat, glType, layerData );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\ttextureProperties.__renderTarget = renderTarget;\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, textureProperties.__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, textureProperties.__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t// retrieve the depth attachment types\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tconst depthType = depthTexture && depthTexture.isDepthTexture ? depthTexture.type : null;\n\t\t\tconst glInternalFormat = getInternalDepthFormat( renderTarget.stencilBuffer, depthType );\n\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t// set up the attachment\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\tconst isUseMultisampledRTT = useMultisampledRTT( renderTarget );\n\t\t\tif ( isUseMultisampledRTT ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( isMultisample ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\tconst textureProperties = properties.get( renderTarget.depthTexture );\n\t\ttextureProperties.__renderTarget = renderTarget;\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! textureProperties.__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = textureProperties.__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\t// if the bound depth texture has changed\n\t\tif ( renderTargetProperties.__boundDepthTexture !== renderTarget.depthTexture ) {\n\n\t\t\t// fire the dispose event to get rid of stored state associated with the previously bound depth buffer\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tif ( renderTargetProperties.__depthDisposeCallback ) {\n\n\t\t\t\trenderTargetProperties.__depthDisposeCallback();\n\n\t\t\t}\n\n\t\t\t// set up dispose listeners to track when the currently attached buffer is implicitly unbound\n\t\t\tif ( depthTexture ) {\n\n\t\t\t\tconst disposeEvent = () => {\n\n\t\t\t\t\tdelete renderTargetProperties.__boundDepthTexture;\n\t\t\t\t\tdelete renderTargetProperties.__depthDisposeCallback;\n\t\t\t\t\tdepthTexture.removeEventListener( 'dispose', disposeEvent );\n\n\t\t\t\t};\n\n\t\t\t\tdepthTexture.addEventListener( 'dispose', disposeEvent );\n\t\t\t\trenderTargetProperties.__depthDisposeCallback = disposeEvent;\n\n\t\t\t}\n\n\t\t\trenderTargetProperties.__boundDepthTexture = depthTexture;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer[ i ] === undefined ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// attach buffer if it's been created already\n\t\t\t\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\t\t\tconst renderbuffer = renderTargetProperties.__webglDepthbuffer[ i ];\n\t\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer === undefined ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// attach buffer if it's been created already\n\t\t\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\t\tconst renderbuffer = renderTargetProperties.__webglDepthbuffer;\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\tif ( ! isMultipleRenderTargets ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture );\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tconst targetType = getTargetType( renderTarget );\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( targetType, webglTexture );\n\t\t\t\tgenerateMipmap( targetType );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst invalidationArrayRead = [];\n\tconst invalidationArrayDraw = [];\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.samples > 0 ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = renderTarget.textures;\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\t\t\t// If MRT we need to remove FBO attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTarget.resolveDepthBuffer ) {\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t\t\t\t// resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)\n\n\t\t\t\t\t\tif ( renderTarget.stencilBuffer && renderTarget.resolveStencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t\tif ( supportsInvalidateFramebuffer === true ) {\n\n\t\t\t\t\t\tinvalidationArrayRead.length = 0;\n\t\t\t\t\t\tinvalidationArrayDraw.length = 0;\n\n\t\t\t\t\t\tinvalidationArrayRead.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false ) {\n\n\t\t\t\t\t\t\tinvalidationArrayRead.push( depthStyle );\n\t\t\t\t\t\t\tinvalidationArrayDraw.push( depthStyle );\n\n\t\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, invalidationArrayDraw );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArrayRead );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false && supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction getDimensions( image ) {\n\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\n\n\t\t\t// if intrinsic data are not available, fallback to width/height\n\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\n\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\n\n\t\t\t_imageDimensions.width = image.displayWidth;\n\t\t\t_imageDimensions.height = image.displayHeight;\n\n\t\t} else {\n\n\t\t\t_imageDimensions.width = image.width;\n\t\t\t_imageDimensions.height = image.height;\n\n\t\t}\n\n\t\treturn _imageDimensions;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\t\tif ( p === HalfFloatType ) return gl.HALF_FLOAT;\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC\n\n\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) return gl.UNSIGNED_INT_24_8;\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear !== renderState.depthNear ) || ( depthData.depthFar !== renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\tgetMesh( cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.mesh;\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n\tgetDepthTexture() {\n\n\t\treturn this.texture;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tconst useLayers = session.enabledFeatures !== undefined && session.enabledFeatures.includes( 'layers' );\n\n\t\t\t\tif ( ! useLayers ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0,\n\t\t\t\t\t\t\tresolveDepthBuffer: ( glProjLayer.ignoreDepthValues === false )\n\t\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getDepthTexture = function () {\n\n\t\t\treturn depthSensing.getDepthTexture();\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t *\n\t\t * @param {ArrayCamera} camera - The camera to update.\n\t\t * @param {PerspectiveCamera} cameraL - The left camera.\n\t\t * @param {PerspectiveCamera} cameraR - The right camera.\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Check if the projection uses an infinite far plane.\n\t\t\tif ( projL[ 10 ] === - 1.0 ) {\n\n\t\t\t\t// Use the projection matrix from the left eye.\n\t\t\t\t// The camera offset is sufficient to include the view volumes\n\t\t\t\t// of both eyes (assuming symmetric projections).\n\t\t\t\tcamera.projectionMatrix.copy( cameraL.projectionMatrix );\n\t\t\t\tcamera.projectionMatrixInverse.copy( cameraL.projectionMatrixInverse );\n\n\t\t\t} else {\n\n\t\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t\t// although must now be relative to the new union camera.\n\t\t\t\tconst near2 = near + zOffset;\n\t\t\t\tconst far2 = far + zOffset;\n\t\t\t\tconst left2 = left - xOffset;\n\t\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tlet depthNear = camera.near;\n\t\t\tlet depthFar = camera.far;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tif ( depthSensing.depthNear > 0 ) depthNear = depthSensing.depthNear;\n\t\t\t\tif ( depthSensing.depthFar > 0 ) depthFar = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = depthNear;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = depthFar;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tcameraL.layers.mask = camera.layers.mask | 0b010;\n\t\t\tcameraR.layers.mask = camera.layers.mask | 0b100;\n\t\t\tcameraXR.layers.mask = cameraL.layers.mask | cameraR.layers.mask;\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\tthis.getDepthSensingMesh = function () {\n\n\t\t\treturn depthSensing.getMesh( cameraXR );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\n\t\t\t\tif ( enabledFeatures && enabledFeatures.includes( 'depth-sensing' ) ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nconst _e1 = /*@__PURE__*/ new Euler();\nconst _m1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst envMap = materialProperties.envMap;\n\t\tconst envMapRotation = materialProperties.envMapRotation;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t_e1.copy( envMapRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\n\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1.y *= - 1;\n\t\t\t\t_e1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.dispersion > 0 ) {\n\n\t\t\tuniforms.dispersion.value = material.dispersion;\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ); // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tconst chunkOffset = offset % chunkSize; // offset in the current chunk\n\t\t\t\t\tconst chunkPadding = chunkOffset % info.boundary; // required padding to match boundary\n\t\t\t\t\tconst chunkStart = chunkOffset + chunkPadding; // the start position in the current chunk for the data\n\n\t\t\t\t\toffset += chunkPadding;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkStart !== 0 && ( chunkSize - chunkStart ) < info.storage ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkStart );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = false,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t\treverseDepthBuffer = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && context instanceof WebGLRenderingContext ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer: WebGL 1 is not supported since r163.' );\n\n\t\t\t}\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission render target scale\n\t\tthis.transmissionResolutionScale = 1.0;\n\n\t\t// camera matrices cache\n\n\t\tconst _currentProjectionMatrix = new Matrix4();\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _vector4 = new Vector4();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tlet _renderBackground = false;\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextName, contextAttributes ) {\n\n\t\t\treturn canvas.getContext( contextName, contextAttributes );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextName = 'webgl2';\n\n\t\t\t\t_gl = getContext( contextName, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextName ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\textensions.init();\n\n\t\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters, utils );\n\n\t\t\tstate = new WebGLState( _gl, extensions );\n\n\t\t\tif ( capabilities.reverseDepthBuffer && reverseDepthBuffer ) {\n\n\t\t\t\tstate.buffers.depth.setReversed( true );\n\n\t\t\t}\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, attributes );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) {\n\n\t\t\t\tbits |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t}\n\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tbackground.dispose();\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tif ( object._multiDrawInstances !== null ) {\n\n\t\t\t\t\trenderer.renderMultiDrawInstances( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount, object._multiDrawInstances );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! extensions.get( 'WEBGL_multi_draw' ) ) {\n\n\t\t\t\t\t\tconst starts = object._multiDrawStarts;\n\t\t\t\t\t\tconst counts = object._multiDrawCounts;\n\t\t\t\t\t\tconst drawCount = object._multiDrawCount;\n\t\t\t\t\t\tconst bytesPerElement = index ? attributes.get( index ).bytesPerElement : 1;\n\t\t\t\t\t\tconst uniforms = properties.get( material ).currentProgram.getUniforms();\n\t\t\t\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\t\t\t\tuniforms.setValue( _gl, '_gl_DrawID', i );\n\t\t\t\t\t\t\trenderer.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( ! ( object.isMesh || object.isPoints || object.isLine || object.isSprite ) ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tconst depthSensingMesh = _this.xr.getDepthSensingMesh();\n\n\t\t\t\tif ( depthSensingMesh !== null ) {\n\n\t\t\t\t\tprojectObject( depthSensingMesh, camera, - Infinity, _this.sortObjects );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t_renderBackground = xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false;\n\t\t\tif ( _renderBackground ) {\n\n\t\t\t\tbackground.addToRenderList( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t\t// render scene\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) {\n\n\t\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\t\trenderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null && _currentActiveMipmapLevel === 0 ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, currentRenderState.state.camera );\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector4.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector4\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector4.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( currentRenderState.state.transmissionRenderTarget[ camera.id ] === undefined ) {\n\n\t\t\t\tcurrentRenderState.state.transmissionRenderTarget[ camera.id ] = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: 4,\n\t\t\t\t\tstencilBuffer: stencil,\n\t\t\t\t\tresolveDepthBuffer: false,\n\t\t\t\t\tresolveStencilBuffer: false,\n\t\t\t\t\tcolorSpace: ColorManagement.workingColorSpace,\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\tconst transmissionRenderTarget = currentRenderState.state.transmissionRenderTarget[ camera.id ];\n\n\t\t\tconst activeViewport = camera.viewport || _currentViewport;\n\t\t\ttransmissionRenderTarget.setSize( activeViewport.z * _this.transmissionResolutionScale, activeViewport.w * _this.transmissionResolutionScale );\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\t// Remove viewport from camera to avoid nested render calls resetting viewport to it (e.g Reflector).\n\t\t\t// Transmission render pass requires viewport to match the transmissionRenderTarget.\n\t\t\tconst currentCameraViewport = camera.viewport;\n\t\t\tif ( camera.viewport !== undefined ) camera.viewport = undefined;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === false ) { // see #28131\n\n\t\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\t\tconst object = renderItem.object;\n\t\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\t\tconst material = renderItem.material;\n\t\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\tif ( currentCameraViewport !== undefined ) camera.viewport = currentCameraViewport;\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.batchingColor = parameters.batchingColor;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === true && object.colorTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === false && object.colorTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tconst reverseDepthBuffer = state.buffers.depth.getReversed();\n\n\t\t\t\tif ( reverseDepthBuffer ) {\n\n\t\t\t\t\t_currentProjectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\t\ttoNormalizedProjectionMatrix( _currentProjectionMatrix );\n\t\t\t\t\ttoReversedProjectionMatrix( _currentProjectionMatrix );\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', _currentProjectionMatrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingIdTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingIdTexture', object._indirectTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingColorTexture' );\n\t\t\t\tif ( object._colorsTexture !== null ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'batchingColorTexture', object._colorsTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshStandardMaterial && material.envMap === null && scene.environment !== null ) {\n\n\t\t\t\tm_uniforms.envMapIntensity.value = scene.environmentIntensity;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, currentRenderState.state.transmissionRenderTarget[ camera.id ] );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tconst _scratchFrameBuffer = _gl.createFramebuffer();\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t} else if ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t// check if the depth texture is already bound to the frame buffer and that it's been initialized\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\t\t\tif ( renderTargetProperties.__boundDepthTexture !== depthTexture ) {\n\n\t\t\t\t\t\t// check if the depth texture is compatible\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdepthTexture !== null &&\n\t\t\t\t\t\t\tproperties.has( depthTexture ) &&\n\t\t\t\t\t\t\t( renderTarget.width !== depthTexture.image.width || renderTarget.height !== depthTexture.image.height )\n\t\t\t\t\t\t) {\n\n\t\t\t\t\t\t\tthrow new Error( 'WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Swap the depth buffer to the currently attached one\n\t\t\t\t\t\ttextures.setupDepthRenderbuffer( renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\t// Use a scratch frame buffer if rendering to a mip level to avoid depth buffers\n\t\t\t// being bound that are different sizes.\n\t\t\tif ( activeMipmapLevel !== 0 ) {\n\n\t\t\t\tframebuffer = _scratchFrameBuffer;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel, layer );\n\n\t\t\t} else if ( renderTarget !== null && activeMipmapLevel !== 0 ) {\n\n\t\t\t\t// Only bind the frame buffer if we are using a scratch frame buffer to render to a mipmap.\n\t\t\t\t// If we rebind the texture when using a multi sample buffer then an error about inconsistent samples will be thrown.\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixelsAsync = async function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t// set the active frame buffer to the one we want to read\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\tconst glBuffer = _gl.createBuffer();\n\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t_gl.bufferData( _gl.PIXEL_PACK_BUFFER, buffer.byteLength, _gl.STREAM_READ );\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), 0 );\n\n\t\t\t\t\t// reset the frame buffer to the currently set buffer before waiting\n\t\t\t\t\tconst currFramebuffer = _currentRenderTarget !== null ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, currFramebuffer );\n\n\t\t\t\t\t// check if the commands have finished every 8 ms\n\t\t\t\t\tconst sync = _gl.fenceSync( _gl.SYNC_GPU_COMMANDS_COMPLETE, 0 );\n\n\t\t\t\t\t_gl.flush();\n\n\t\t\t\t\tawait probeAsync( _gl, sync, 4 );\n\n\t\t\t\t\t// read the data and delete the buffer\n\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t_gl.getBufferSubData( _gl.PIXEL_PACK_BUFFER, 0, buffer );\n\t\t\t\t\t_gl.deleteBuffer( glBuffer );\n\t\t\t\t\t_gl.deleteSync( sync );\n\n\t\t\t\t\treturn buffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( texture, position = null, level = 0 ) {\n\n\t\t\t// support previous signature with position first\n\t\t\tif ( texture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyFramebufferToTexture function signature has changed.' );\n\n\t\t\t\tposition = arguments[ 0 ] || null;\n\t\t\t\ttexture = arguments[ 1 ];\n\n\t\t\t}\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\tconst x = position !== null ? position.x : 0;\n\t\t\tconst y = position !== null ? position.y : 0;\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, x, y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tconst _srcFramebuffer = _gl.createFramebuffer();\n\t\tconst _dstFramebuffer = _gl.createFramebuffer();\n\t\tthis.copyTextureToTexture = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, srcLevel = 0, dstLevel = null ) {\n\n\t\t\t// support previous signature with dstPosition first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture function signature has changed.' );\n\n\t\t\t\tdstPosition = arguments[ 0 ] || null;\n\t\t\t\tsrcTexture = arguments[ 1 ];\n\t\t\t\tdstTexture = arguments[ 2 ];\n\t\t\t\tdstLevel = arguments[ 3 ] || 0;\n\t\t\t\tsrcRegion = null;\n\n\t\t\t}\n\n\t\t\t// support the previous signature with just a single dst mipmap level\n\t\t\tif ( dstLevel === null ) {\n\n\t\t\t\tif ( srcLevel !== 0 ) {\n\n\t\t\t\t\t// @deprecated, r171\n\t\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels.' );\n\t\t\t\t\tdstLevel = srcLevel;\n\t\t\t\t\tsrcLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdstLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// gather the necessary dimensions to copy\n\t\t\tlet width, height, depth, minX, minY, minZ;\n\t\t\tlet dstX, dstY, dstZ;\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ dstLevel ] : srcTexture.image;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tdepth = srcRegion.isBox3 ? srcRegion.max.z - srcRegion.min.z : 1;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\t\t\t\tminZ = srcRegion.isBox3 ? srcRegion.min.z : 0;\n\n\t\t\t} else {\n\n\t\t\t\tconst levelScale = Math.pow( 2, - srcLevel );\n\t\t\t\twidth = Math.floor( image.width * levelScale );\n\t\t\t\theight = Math.floor( image.height * levelScale );\n\t\t\t\tif ( srcTexture.isDataArrayTexture ) {\n\n\t\t\t\t\tdepth = image.depth;\n\n\t\t\t\t} else if ( srcTexture.isData3DTexture ) {\n\n\t\t\t\t\tdepth = Math.floor( image.depth * levelScale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdepth = 1;\n\n\t\t\t\t}\n\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\t\t\t\tminZ = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\t\t\t\tdstZ = dstPosition.z;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\t\t\t\tdstZ = 0;\n\n\t\t\t}\n\n\t\t\t// Set up the destination target\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\t// used for copying data from cpu\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, minZ );\n\n\t\t\t// set up the src texture\n\t\t\tconst isSrc3D = srcTexture.isDataArrayTexture || srcTexture.isData3DTexture;\n\t\t\tconst isDst3D = dstTexture.isDataArrayTexture || dstTexture.isData3DTexture;\n\t\t\tif ( srcTexture.isDepthTexture ) {\n\n\t\t\t\tconst srcTextureProperties = properties.get( srcTexture );\n\t\t\t\tconst dstTextureProperties = properties.get( dstTexture );\n\t\t\t\tconst srcRenderTargetProperties = properties.get( srcTextureProperties.__renderTarget );\n\t\t\t\tconst dstRenderTargetProperties = properties.get( dstTextureProperties.__renderTarget );\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, srcRenderTargetProperties.__webglFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, dstRenderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < depth; i ++ ) {\n\n\t\t\t\t\t// if the source or destination are a 3d target then a layer needs to be bound\n\t\t\t\t\tif ( isSrc3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, properties.get( srcTexture ).__webglTexture, srcLevel, minZ + i );\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, properties.get( dstTexture ).__webglTexture, dstLevel, dstZ + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( minX, minY, width, height, dstX, dstY, width, height, _gl.DEPTH_BUFFER_BIT, _gl.NEAREST );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t} else if ( srcLevel !== 0 || srcTexture.isRenderTargetTexture || properties.has( srcTexture ) ) {\n\n\t\t\t\t// get the appropriate frame buffers\n\t\t\t\tconst srcTextureProperties = properties.get( srcTexture );\n\t\t\t\tconst dstTextureProperties = properties.get( dstTexture );\n\n\t\t\t\t// bind the frame buffer targets\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, _srcFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, _dstFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < depth; i ++ ) {\n\n\t\t\t\t\t// assign the correct layers and mip maps to the frame buffers\n\t\t\t\t\tif ( isSrc3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, srcTextureProperties.__webglTexture, srcLevel, minZ + i );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, srcTextureProperties.__webglTexture, srcLevel );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isDst3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, dstTextureProperties.__webglTexture, dstLevel, dstZ + i );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, dstTextureProperties.__webglTexture, dstLevel );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// copy the data using the fastest function that can achieve the copy\n\t\t\t\t\tif ( srcLevel !== 0 ) {\n\n\t\t\t\t\t\t_gl.blitFramebuffer( minX, minY, width, height, dstX, dstY, width, height, _gl.COLOR_BUFFER_BIT, _gl.NEAREST );\n\n\t\t\t\t\t} else if ( isDst3D ) {\n\n\t\t\t\t\t\t_gl.copyTexSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ + i, minX, minY, width, height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.copyTexSubImage2D( glTarget, dstLevel, dstX, dstY, minX, minY, width, height );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// unbind read, draw buffers\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isDst3D ) {\n\n\t\t\t\t\t// copy data into the 3d texture\n\t\t\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t\t\t_gl.texSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t\t\t} else if ( dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.texSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// copy data into the 2d texture\n\t\t\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, width, height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else if ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, image.width, image.height, glFormat, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, width, height, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// reset values\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( dstLevel === 0 && dstTexture.generateMipmaps ) {\n\n\t\t\t\t_gl.generateMipmap( glTarget );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with source box first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture3D function signature has changed.' );\n\n\t\t\t\tsrcRegion = arguments[ 0 ] || null;\n\t\t\t\tdstPosition = arguments[ 1 ] || null;\n\t\t\t\tsrcTexture = arguments[ 2 ];\n\t\t\t\tdstTexture = arguments[ 3 ];\n\t\t\t\tlevel = arguments[ 4 ] || 0;\n\n\t\t\t}\n\n\t\t\t// @deprecated, r170\n\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use \"copyTextureToTexture\" instead.' );\n\n\t\t\treturn this.copyTextureToTexture( srcTexture, dstTexture, srcRegion, dstPosition, level );\n\n\t\t};\n\n\t\tthis.initRenderTarget = function ( target ) {\n\n\t\t\tif ( properties.get( target ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( target );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorspace = ColorManagement._getDrawingBufferColorSpace( colorSpace );\n\t\tgl.unpackColorSpace = ColorManagement._getUnpackColorSpace();\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, ArrayCamera, BackSide, BoxGeometry, BufferAttribute, BufferGeometry, ByteType, CineonToneMapping, ClampToEdgeWrapping, Color, ColorManagement, ConstantAlphaFactor, ConstantColorFactor, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeUVReflectionMapping, CullFaceBack, CullFaceFront, CullFaceNone, CustomBlending, CustomToneMapping, Data3DTexture, DataArrayTexture, DepthFormat, DepthStencilFormat, DepthTexture, DoubleSide, DstAlphaFactor, DstColorFactor, EqualCompare, EqualDepth, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, FloatType, FrontSide, Frustum, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, Group, HalfFloatType, IntType, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, LuminanceAlphaFormat, LuminanceFormat, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NoBlending, NoColorSpace, NoToneMapping, NormalBlending, NotEqualCompare, NotEqualDepth, ObjectSpaceNormalMap, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, PerspectiveCamera, Plane, PlaneGeometry, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReverseSubtractEquation, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, ShaderChunk, ShaderLib, ShaderMaterial, ShortType, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, SubtractEquation, SubtractiveBlending, TangentSpaceNormalMap, Texture, Uint16BufferAttribute, Uint32BufferAttribute, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLRenderTarget, WebGLRenderer, WebGLUtils, ZeroFactor, createCanvasElement };\n","import {\n\tControls,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst _TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nconst _v = new Vector3();\nconst _twoPI = 2 * Math.PI;\n\nconst _STATE = {\n\tNONE: - 1,\n\tROTATE: 0,\n\tDOLLY: 1,\n\tPAN: 2,\n\tTOUCH_ROTATE: 3,\n\tTOUCH_PAN: 4,\n\tTOUCH_DOLLY_PAN: 5,\n\tTOUCH_DOLLY_ROTATE: 6\n};\nconst _EPS = 0.000001;\n\nclass OrbitControls extends Controls {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.state = _STATE.NONE;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\t\tthis.keyRotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t// internals\n\n\t\tthis._lastPosition = new Vector3();\n\t\tthis._lastQuaternion = new Quaternion();\n\t\tthis._lastTargetPosition = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tthis._quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tthis._quatInverse = this._quat.clone().invert();\n\n\t\t// current position in spherical coordinates\n\t\tthis._spherical = new Spherical();\n\t\tthis._sphericalDelta = new Spherical();\n\n\t\tthis._scale = 1;\n\t\tthis._panOffset = new Vector3();\n\n\t\tthis._rotateStart = new Vector2();\n\t\tthis._rotateEnd = new Vector2();\n\t\tthis._rotateDelta = new Vector2();\n\n\t\tthis._panStart = new Vector2();\n\t\tthis._panEnd = new Vector2();\n\t\tthis._panDelta = new Vector2();\n\n\t\tthis._dollyStart = new Vector2();\n\t\tthis._dollyEnd = new Vector2();\n\t\tthis._dollyDelta = new Vector2();\n\n\t\tthis._dollyDirection = new Vector3();\n\t\tthis._mouse = new Vector2();\n\t\tthis._performCursorZoom = false;\n\n\t\tthis._pointers = [];\n\t\tthis._pointerPositions = {};\n\n\t\tthis._controlActive = false;\n\n\t\t// event listeners\n\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\t\tthis._onContextMenu = onContextMenu.bind( this );\n\t\tthis._onMouseWheel = onMouseWheel.bind( this );\n\t\tthis._onKeyDown = onKeyDown.bind( this );\n\n\t\tthis._onTouchStart = onTouchStart.bind( this );\n\t\tthis._onTouchMove = onTouchMove.bind( this );\n\n\t\tthis._onMouseDown = onMouseDown.bind( this );\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\n\t\tthis._interceptControlDown = interceptControlDown.bind( this );\n\t\tthis._interceptControlUp = interceptControlUp.bind( this );\n\n\t\t//\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect();\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\tconnect() {\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', this._onContextMenu );\n\t\tthis.domElement.addEventListener( 'wheel', this._onMouseWheel, { passive: false } );\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.addEventListener( 'keydown', this._interceptControlDown, { passive: true, capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\t\tthis.domElement.removeEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.removeEventListener( 'wheel', this._onMouseWheel );\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._onContextMenu );\n\n\t\tthis.stopListenToKeyEvents();\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.removeEventListener( 'keydown', this._interceptControlDown, { capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\tgetPolarAngle() {\n\n\t\treturn this._spherical.phi;\n\n\t}\n\n\tgetAzimuthalAngle() {\n\n\t\treturn this._spherical.theta;\n\n\t}\n\n\tgetDistance() {\n\n\t\treturn this.object.position.distanceTo( this.target );\n\n\t}\n\n\tlistenToKeyEvents( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', this._onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t}\n\n\tstopListenToKeyEvents() {\n\n\t\tif ( this._domElementKeyEvents !== null ) {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', this._onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t}\n\n\t}\n\n\tsaveState() {\n\n\t\tthis.target0.copy( this.target );\n\t\tthis.position0.copy( this.object.position );\n\t\tthis.zoom0 = this.object.zoom;\n\n\t}\n\n\treset() {\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( _changeEvent );\n\n\t\tthis.update();\n\n\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tupdate( deltaTime = null ) {\n\n\t\tconst position = this.object.position;\n\n\t\t_v.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t_v.applyQuaternion( this._quat );\n\n\t\t// angle from z-axis around y-axis\n\t\tthis._spherical.setFromVector3( _v );\n\n\t\tif ( this.autoRotate && this.state === _STATE.NONE ) {\n\n\t\t\tthis._rotateLeft( this._getAutoRotationAngle( deltaTime ) );\n\n\t\t}\n\n\t\tif ( this.enableDamping ) {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta * this.dampingFactor;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi * this.dampingFactor;\n\n\t\t} else {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi;\n\n\t\t}\n\n\t\t// restrict theta to be between desired limits\n\n\t\tlet min = this.minAzimuthAngle;\n\t\tlet max = this.maxAzimuthAngle;\n\n\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\tif ( min < - Math.PI ) min += _twoPI; else if ( min > Math.PI ) min -= _twoPI;\n\n\t\t\tif ( max < - Math.PI ) max += _twoPI; else if ( max > Math.PI ) max -= _twoPI;\n\n\t\t\tif ( min <= max ) {\n\n\t\t\t\tthis._spherical.theta = Math.max( min, Math.min( max, this._spherical.theta ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis._spherical.theta = ( this._spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\tMath.max( min, this._spherical.theta ) :\n\t\t\t\t\tMath.min( max, this._spherical.theta );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restrict phi to be between desired limits\n\t\tthis._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n\n\t\tthis._spherical.makeSafe();\n\n\n\t\t// move target to panned location\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis.target.addScaledVector( this._panOffset, this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis.target.add( this._panOffset );\n\n\t\t}\n\n\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\tthis.target.sub( this.cursor );\n\t\tthis.target.clampLength( this.minTargetRadius, this.maxTargetRadius );\n\t\tthis.target.add( this.cursor );\n\n\t\tlet zoomChanged = false;\n\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t// we adjust zoom later in these cases\n\t\tif ( this.zoomToCursor && this._performCursorZoom || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius );\n\n\t\t} else {\n\n\t\t\tconst prevRadius = this._spherical.radius;\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius * this._scale );\n\t\t\tzoomChanged = prevRadius != this._spherical.radius;\n\n\t\t}\n\n\t\t_v.setFromSpherical( this._spherical );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t_v.applyQuaternion( this._quatInverse );\n\n\t\tposition.copy( this.target ).add( _v );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis._sphericalDelta.theta *= ( 1 - this.dampingFactor );\n\t\t\tthis._sphericalDelta.phi *= ( 1 - this.dampingFactor );\n\n\t\t\tthis._panOffset.multiplyScalar( 1 - this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis._sphericalDelta.set( 0, 0, 0 );\n\n\t\t\tthis._panOffset.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// adjust camera position\n\t\tif ( this.zoomToCursor && this._performCursorZoom ) {\n\n\t\t\tlet newRadius = null;\n\t\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t// this method avoids floating point error\n\t\t\t\tconst prevRadius = _v.length();\n\t\t\t\tnewRadius = this._clampDistance( prevRadius * this._scale );\n\n\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\tthis.object.position.addScaledVector( this._dollyDirection, radiusDelta );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\tconst mouseBefore = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseBefore.unproject( this.object );\n\n\t\t\t\tconst prevZoom = this.object.zoom;\n\t\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\t\t\t\tthis.object.updateProjectionMatrix();\n\n\t\t\t\tzoomChanged = prevZoom !== this.object.zoom;\n\n\t\t\t\tconst mouseAfter = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseAfter.unproject( this.object );\n\n\t\t\t\tthis.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tnewRadius = _v.length();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\tthis.zoomToCursor = false;\n\n\t\t\t}\n\n\t\t\t// handle the placement of the target\n\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\tthis.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t.transformDirection( this.object.matrix )\n\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t.add( this.object.position );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t_ray.origin.copy( this.object.position );\n\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( this.object.matrix );\n\n\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t// extremely large values\n\t\t\t\t\tif ( Math.abs( this.object.up.dot( _ray.direction ) ) < _TILT_LIMIT ) {\n\n\t\t\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( this.object.up, this.target );\n\t\t\t\t\t\t_ray.intersectPlane( _plane, this.target );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\tconst prevZoom = this.object.zoom;\n\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\n\t\t\tif ( prevZoom !== this.object.zoom ) {\n\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._scale = 1;\n\t\tthis._performCursorZoom = false;\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( zoomChanged ||\n\t\t\tthis._lastPosition.distanceToSquared( this.object.position ) > _EPS ||\n\t\t\t8 * ( 1 - this._lastQuaternion.dot( this.object.quaternion ) ) > _EPS ||\n\t\t\tthis._lastTargetPosition.distanceToSquared( this.target ) > _EPS ) {\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\n\t\t\tthis._lastPosition.copy( this.object.position );\n\t\t\tthis._lastQuaternion.copy( this.object.quaternion );\n\t\t\tthis._lastTargetPosition.copy( this.target );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_getAutoRotationAngle( deltaTime ) {\n\n\t\tif ( deltaTime !== null ) {\n\n\t\t\treturn ( _twoPI / 60 * this.autoRotateSpeed ) * deltaTime;\n\n\t\t} else {\n\n\t\t\treturn _twoPI / 60 / 60 * this.autoRotateSpeed;\n\n\t\t}\n\n\t}\n\n\t_getZoomScale( delta ) {\n\n\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\treturn Math.pow( 0.95, this.zoomSpeed * normalizedDelta );\n\n\t}\n\n\t_rotateLeft( angle ) {\n\n\t\tthis._sphericalDelta.theta -= angle;\n\n\t}\n\n\t_rotateUp( angle ) {\n\n\t\tthis._sphericalDelta.phi -= angle;\n\n\t}\n\n\t_panLeft( distance, objectMatrix ) {\n\n\t\t_v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t_v.multiplyScalar( - distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t_panUp( distance, objectMatrix ) {\n\n\t\tif ( this.screenSpacePanning === true ) {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t} else {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t_v.crossVectors( this.object.up, _v );\n\n\t\t}\n\n\t\t_v.multiplyScalar( distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\t_pan( deltaX, deltaY ) {\n\n\t\tconst element = this.domElement;\n\n\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tconst position = this.object.position;\n\t\t\t_v.copy( position ).sub( this.target );\n\t\t\tlet targetDistance = _v.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\tthis._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.object.matrix );\n\t\t\tthis._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.object.matrix );\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tthis._panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / element.clientWidth, this.object.matrix );\n\t\t\tthis._panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / element.clientHeight, this.object.matrix );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic nor perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\tthis.enablePan = false;\n\n\t\t}\n\n\t}\n\n\t_dollyOut( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale /= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_dollyIn( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale *= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_updateZoomParameters( x, y ) {\n\n\t\tif ( ! this.zoomToCursor ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._performCursorZoom = true;\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\t\tconst dx = x - rect.left;\n\t\tconst dy = y - rect.top;\n\t\tconst w = rect.width;\n\t\tconst h = rect.height;\n\n\t\tthis._mouse.x = ( dx / w ) * 2 - 1;\n\t\tthis._mouse.y = - ( dy / h ) * 2 + 1;\n\n\t\tthis._dollyDirection.set( this._mouse.x, this._mouse.y, 1 ).unproject( this.object ).sub( this.object.position ).normalize();\n\n\t}\n\n\t_clampDistance( dist ) {\n\n\t\treturn Math.max( this.minDistance, Math.min( this.maxDistance, dist ) );\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\t_handleMouseDownRotate( event ) {\n\n\t\tthis._rotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownDolly( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientX );\n\t\tthis._dollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownPan( event ) {\n\n\t\tthis._panStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseMoveRotate( event ) {\n\n\t\tthis._rotateEnd.set( event.clientX, event.clientY );\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMoveDolly( event ) {\n\n\t\tthis._dollyEnd.set( event.clientX, event.clientY );\n\n\t\tthis._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n\t\tif ( this._dollyDelta.y > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t} else if ( this._dollyDelta.y < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t}\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMovePan( event ) {\n\n\t\tthis._panEnd.set( event.clientX, event.clientY );\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseWheel( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientY );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( event.deltaY ) );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( event.deltaY ) );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\t_handleKeyDown( event ) {\n\n\t\tlet needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase this.keys.UP:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.BOTTOM:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, - this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.RIGHT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( - this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.update();\n\n\t\t}\n\n\n\t}\n\n\t_handleTouchStartRotate( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._rotateStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartPan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyStart.set( 0, distance );\n\n\t}\n\n\t_handleTouchStartDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchStartPan( event );\n\n\t}\n\n\t_handleTouchStartDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchStartRotate( event );\n\n\t}\n\n\t_handleTouchMoveRotate( event ) {\n\n\t\tif ( this._pointers.length == 1 ) {\n\n\t\t\tthis._rotateEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t}\n\n\t_handleTouchMovePan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t}\n\n\t_handleTouchMoveDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyEnd.set( 0, distance );\n\n\t\tthis._dollyDelta.set( 0, Math.pow( this._dollyEnd.y / this._dollyStart.y, this.zoomSpeed ) );\n\n\t\tthis._dollyOut( this._dollyDelta.y );\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\tthis._updateZoomParameters( centerX, centerY );\n\n\t}\n\n\t_handleTouchMoveDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchMovePan( event );\n\n\t}\n\n\t_handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchMoveRotate( event );\n\n\t}\n\n\t// pointers\n\n\t_addPointer( event ) {\n\n\t\tthis._pointers.push( event.pointerId );\n\n\t}\n\n\t_removePointer( event ) {\n\n\t\tdelete this._pointerPositions[ event.pointerId ];\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) {\n\n\t\t\t\tthis._pointers.splice( i, 1 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_isTrackingPointer( event ) {\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_trackPointer( event ) {\n\n\t\tlet position = this._pointerPositions[ event.pointerId ];\n\n\t\tif ( position === undefined ) {\n\n\t\t\tposition = new Vector2();\n\t\t\tthis._pointerPositions[ event.pointerId ] = position;\n\n\t\t}\n\n\t\tposition.set( event.pageX, event.pageY );\n\n\t}\n\n\t_getSecondPointerPosition( event ) {\n\n\t\tconst pointerId = ( event.pointerId === this._pointers[ 0 ] ) ? this._pointers[ 1 ] : this._pointers[ 0 ];\n\n\t\treturn this._pointerPositions[ pointerId ];\n\n\t}\n\n\t//\n\n\t_customWheelEvent( event ) {\n\n\t\tconst mode = event.deltaMode;\n\n\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\tconst newEvent = {\n\t\t\tclientX: event.clientX,\n\t\t\tclientY: event.clientY,\n\t\t\tdeltaY: event.deltaY,\n\t\t};\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 1: // LINE_MODE\n\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // PAGE_MODE\n\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// detect if event was triggered by pinching\n\t\tif ( event.ctrlKey && ! this._controlActive ) {\n\n\t\t\tnewEvent.deltaY *= 10;\n\n\t\t}\n\n\t\treturn newEvent;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( this._pointers.length === 0 ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t//\n\n\tif ( this._isTrackingPointer( event ) ) return;\n\n\t//\n\n\tthis._addPointer( event );\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchStart( event );\n\n\t} else {\n\n\t\tthis._onMouseDown( event );\n\n\t}\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchMove( event );\n\n\t} else {\n\n\t\tthis._onMouseMove( event );\n\n\t}\n\n}\n\nfunction onPointerUp( event ) {\n\n\tthis._removePointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 0:\n\n\t\t\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\t\tthis.dispatchEvent( _endEvent );\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tconst pointerId = this._pointers[ 0 ];\n\t\t\tconst position = this._pointerPositions[ pointerId ];\n\n\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\tthis._onTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseDown( event ) {\n\n\tlet mouseAction;\n\n\tswitch ( event.button ) {\n\n\t\tcase 0:\n\n\t\t\tmouseAction = this.mouseButtons.LEFT;\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tmouseAction = this.mouseButtons.MIDDLE;\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tmouseAction = this.mouseButtons.RIGHT;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tmouseAction = - 1;\n\n\t}\n\n\tswitch ( mouseAction ) {\n\n\t\tcase MOUSE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseDownDolly( event );\n\n\t\t\tthis.state = _STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.ROTATE:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.PAN:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onMouseMove( event ) {\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseWheel( event ) {\n\n\tif ( this.enabled === false || this.enableZoom === false || this.state !== _STATE.NONE ) return;\n\n\tevent.preventDefault();\n\n\tthis.dispatchEvent( _startEvent );\n\n\tthis._handleMouseWheel( this._customWheelEvent( event ) );\n\n\tthis.dispatchEvent( _endEvent );\n\n}\n\nfunction onKeyDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tthis._handleKeyDown( event );\n\n}\n\nfunction onTouchStart( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 1:\n\n\t\t\tswitch ( this.touches.ONE ) {\n\n\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tswitch ( this.touches.TWO ) {\n\n\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onTouchMove( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.TOUCH_ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMovePan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_PAN:\n\n\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyPan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n}\n\nfunction onContextMenu( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tevent.preventDefault();\n\n}\n\nfunction interceptControlDown( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = true;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nfunction interceptControlUp( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = false;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.removeEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nexport { OrbitControls };\n","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\n\r\nconst renderer = new THREE.WebGLRenderer();\r\n\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\nrenderer.shadowMap.enabled = true;\r\n\r\ndocument.body.appendChild(renderer.domElement);\r\n\r\nconst scene = new THREE.Scene();\r\n\r\nconst camera = new THREE.PerspectiveCamera(\r\n    75,window.innerWidth/window.innerHeight,0.1,1000\r\n);\r\n\r\nconst orbit = new OrbitControls(camera, renderer.domElement);\r\n\r\n\r\nconst axeHelper = new THREE.AxesHelper(5);\r\nscene.add( axeHelper );\r\n\r\ncamera.position.set(0,20,0);\r\n\r\norbit.update();\r\n\r\n\r\n\r\nconst grid = new THREE.GridHelper(30);\r\nscene.add(grid);\r\n\r\n\r\n\r\n\r\n\r\nfunction criarast(raio, cor, posicaox, velocidade, orbita, object, vy){\r\n    \r\nconst geoastro = new THREE.SphereGeometry(raio);\r\nconst matastro = new THREE.MeshStandardMaterial(\r\n    cor\r\n);\r\nconst astro = new THREE.Mesh(geoastro, matastro);\r\nscene.add(astro);\r\nastro.position.x = posicaox;\r\nastro.position.y = 0;\r\nastro.rotationSpeed = velocidade;\r\nastro.orbitRadius = orbita;\r\nastro.velocidade = vy;\r\nastro.receiveShadow = true;\r\nif(object != null){\r\n    object.add(astro);\r\n}\r\n\r\nreturn astro;\r\n}\r\n\r\n\r\nfunction movimento(object){\r\n    object.position.x = Math.cos(Date.now() * object.rotationSpeed) * object.orbitRadius * 1;\r\n    object.position.z = Math.sin(Date.now() * object.rotationSpeed) * object.orbitRadius;\r\n    object.rotation.y += object.velocidade;\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nfunction copia( object){\r\nconst objec = new THREE.Object3D();\r\n\r\nscene.add(objec);\r\n\r\nobjec.position.x = object.position.x;\r\nobjec.position.y = object.position.y;\r\nobjec.position.z = object.position.z;\r\nobjec.rotationSpeed = object.rotationSpeed;\r\nobjec.orbitRadius = object.orbitRadius;\r\nobjec.velocidade = 0;\r\nreturn objec;\r\n}\r\n\r\n\r\nconst solGeometry = new THREE.SphereGeometry();\r\nconst solMaterial = new THREE.MeshBasicMaterial(\r\n    {\r\n        color: 0x0000FF\r\n    }\r\n);\r\nconst sol = new THREE.Mesh(solGeometry, solMaterial);\r\nscene.add(sol);\r\nconst luz = new THREE.PointLight(0xFFFFFF, 300, 300);\r\nsol.add(luz);\r\nluz.castShadow = true;\r\nconst linhalu = new THREE.CameraHelper(luz.shadow.camera);\r\nscene.add(linhalu);\r\n\r\n\r\nconst copsol = copia(sol);\r\nconst planeta1 = criarast(0.5, {color: 0xFF0000}, 5, 0.00003, 5, copsol, 0.3);\r\nconst coppla1 = copia(planeta1);\r\ncopsol.add(coppla1);\r\nconst lua1 = criarast(0.1, {color: 0xFF00FF}, 2, 0.002, 2, coppla1, 0.003);\r\nconst lua2 = criarast(0.2,{color: 0xDD00FF}, 3, 0.003, 3, coppla1, 0.003);\r\nconst lua3 = criarast(0.2, {color: 0xDD00FF}, 1, 0.0003, 1, coppla1, 0.003);\r\nconst planeta2 = criarast(0.5, {color: 0xFF0000}, 9, 0.003, 9, copsol, 0.3);\r\n\r\n\r\nlet astros = [planeta1, coppla1, lua1, lua2, lua3, planeta2];\r\n\r\n\r\nfunction movimentototal(){\r\n   \r\n    for(var i = 0; i < astros.length; i++){\r\n        movimento(astros[i]);\r\n    }\r\n}\r\n\r\n\r\nfunction animate(){\r\nmovimentototal();\r\n\r\n\r\n    renderer.render(\r\n        scene, camera\r\n    );\r\n\r\n}\r\n\r\nrenderer.setAnimationLoop(animate);\r\n"]}